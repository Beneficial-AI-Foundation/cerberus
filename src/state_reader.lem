open global

type ('v, 'a, 's) t = ('a * 's) state`t -> 'v

let unit a = fun s -> a
let bind r f =
  fun s ->
    let a = r s in
    f a s

let join r = bind r (fun x -> x)
let map  f rx = bind rx (unit -| f)

let app rf rx = bind rf (fun f -> map f rx)
let lift f = fun rx -> bind rx (unit -| f)

module Operators = struct
  let (>>=) = bind
end