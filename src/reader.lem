open global

type ('v, 's) t = 's -> 'v

let unit a = fun s -> a
let bind r f =
  fun s ->
    let a = r s in
    f a s

let join m = bind m (fun x -> x)
let map f m = bind m (unit -| f)

let app mf m = bind mf (fun f -> map f m)

let coerce m =
  fun s ->
    let a = m s in
    (a, s)

module Operators = struct
  let (>>=) = bind
end