cn_statement: WHILE
##
## Ends in an error in state: 0.
##
## cn_statement' -> . cn_statement [ # ]
##
## The known suffix of the stack is as follows:
##
##

parsing "cn_statement'": expected "cn_statement"

cn_statement: CN_UNPACK WHILE
##
## Ends in an error in state: 1.
##
## cn_statement -> CN_UNPACK . pred LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN SEMICOLON [ # ]
##
## The known suffix of the stack is as follows:
## CN_UNPACK
##

parsing "cn_statement": seen "CN_UNPACK", expecting "pred LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN SEMICOLON"

cn_statement: CN_PACK UNAME WHILE
##
## Ends in an error in state: 2.
##
## pred -> UNAME . VARIABLE [ LPAREN ]
##
## The known suffix of the stack is as follows:
## UNAME
##

parsing "pred": seen "UNAME", expecting "VARIABLE"

cn_statement: CN_EXTRACT CN_OWNED LT WHILE
##
## Ends in an error in state: 5.
##
## pred -> CN_OWNED LT . ctype GT [ LPAREN COMMA ]
##
## The known suffix of the stack is as follows:
## CN_OWNED LT
##

parsing "pred": seen "CN_OWNED LT", expecting "ctype GT"

translation_unit: UNAME WHILE
##
## Ends in an error in state: 10.
##
## typedef_name -> UNAME . TYPE [ VOLATILE UNAME TYPEDEF THREAD_LOCAL STATIC STAR SEMICOLON RPAREN RESTRICT REGISTER NORETURN LPAREN LNAME LBRACK_LBRACK LBRACK INLINE GT EXTERN CONST COMMA COLON AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## UNAME
##

parsing "typedef_name": seen "UNAME", expecting "TYPE"

translation_unit: ALIGNAS LPAREN VA_START WHILE
##
## Ends in an error in state: 14.
##
## postfix_expression -> VA_START . LPAREN assignment_expression COMMA general_identifier RPAREN [ STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_GT MINUS_EQ MINUS LT_LT_EQ LT_LT LT_EQ LT LPAREN LBRACK GT_GT_EQ GT_GT GT_EQ GT EQ_EQ EQ ELLIPSIS DOT COMMA COLON CARET_EQ CARET BANG_EQ AMPERSAND_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## VA_START
##

parsing "postfix_expression": seen "VA_START", expecting "LPAREN assignment_expression COMMA general_identifier RPAREN"

translation_unit: ALIGNAS LPAREN VA_START LPAREN WHILE
##
## Ends in an error in state: 15.
##
## postfix_expression -> VA_START LPAREN . assignment_expression COMMA general_identifier RPAREN [ STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_GT MINUS_EQ MINUS LT_LT_EQ LT_LT LT_EQ LT LPAREN LBRACK GT_GT_EQ GT_GT GT_EQ GT EQ_EQ EQ ELLIPSIS DOT COMMA COLON CARET_EQ CARET BANG_EQ AMPERSAND_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## VA_START LPAREN
##

parsing "postfix_expression": seen "VA_START LPAREN", expecting "assignment_expression COMMA general_identifier RPAREN"

translation_unit: ALIGNAS LPAREN VA_END WHILE
##
## Ends in an error in state: 16.
##
## postfix_expression -> VA_END . LPAREN assignment_expression RPAREN [ STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_GT MINUS_EQ MINUS LT_LT_EQ LT_LT LT_EQ LT LPAREN LBRACK GT_GT_EQ GT_GT GT_EQ GT EQ_EQ EQ ELLIPSIS DOT COMMA COLON CARET_EQ CARET BANG_EQ AMPERSAND_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## VA_END
##

parsing "postfix_expression": seen "VA_END", expecting "LPAREN assignment_expression RPAREN"

translation_unit: ALIGNAS LPAREN VA_END LPAREN WHILE
##
## Ends in an error in state: 17.
##
## postfix_expression -> VA_END LPAREN . assignment_expression RPAREN [ STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_GT MINUS_EQ MINUS LT_LT_EQ LT_LT LT_EQ LT LPAREN LBRACK GT_GT_EQ GT_GT GT_EQ GT EQ_EQ EQ ELLIPSIS DOT COMMA COLON CARET_EQ CARET BANG_EQ AMPERSAND_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## VA_END LPAREN
##

parsing "postfix_expression": seen "VA_END LPAREN", expecting "assignment_expression RPAREN"

translation_unit: ALIGNAS LPAREN VA_COPY WHILE
##
## Ends in an error in state: 18.
##
## postfix_expression -> VA_COPY . LPAREN assignment_expression COMMA assignment_expression RPAREN [ STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_GT MINUS_EQ MINUS LT_LT_EQ LT_LT LT_EQ LT LPAREN LBRACK GT_GT_EQ GT_GT GT_EQ GT EQ_EQ EQ ELLIPSIS DOT COMMA COLON CARET_EQ CARET BANG_EQ AMPERSAND_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## VA_COPY
##

parsing "postfix_expression": seen "VA_COPY", expecting "LPAREN assignment_expression COMMA assignment_expression RPAREN"

translation_unit: ALIGNAS LPAREN VA_COPY LPAREN WHILE
##
## Ends in an error in state: 19.
##
## postfix_expression -> VA_COPY LPAREN . assignment_expression COMMA assignment_expression RPAREN [ STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_GT MINUS_EQ MINUS LT_LT_EQ LT_LT LT_EQ LT LPAREN LBRACK GT_GT_EQ GT_GT GT_EQ GT EQ_EQ EQ ELLIPSIS DOT COMMA COLON CARET_EQ CARET BANG_EQ AMPERSAND_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## VA_COPY LPAREN
##

parsing "postfix_expression": seen "VA_COPY LPAREN", expecting "assignment_expression COMMA assignment_expression RPAREN"

translation_unit: ALIGNAS LPAREN VA_ARG WHILE
##
## Ends in an error in state: 20.
##
## postfix_expression -> VA_ARG . LPAREN assignment_expression COMMA type_name RPAREN [ STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_GT MINUS_EQ MINUS LT_LT_EQ LT_LT LT_EQ LT LPAREN LBRACK GT_GT_EQ GT_GT GT_EQ GT EQ_EQ EQ ELLIPSIS DOT COMMA COLON CARET_EQ CARET BANG_EQ AMPERSAND_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## VA_ARG
##

parsing "postfix_expression": seen "VA_ARG", expecting "LPAREN assignment_expression COMMA type_name RPAREN"

translation_unit: ALIGNAS LPAREN VA_ARG LPAREN WHILE
##
## Ends in an error in state: 21.
##
## postfix_expression -> VA_ARG LPAREN . assignment_expression COMMA type_name RPAREN [ STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_GT MINUS_EQ MINUS LT_LT_EQ LT_LT LT_EQ LT LPAREN LBRACK GT_GT_EQ GT_GT GT_EQ GT EQ_EQ EQ ELLIPSIS DOT COMMA COLON CARET_EQ CARET BANG_EQ AMPERSAND_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## VA_ARG LPAREN
##

parsing "postfix_expression": seen "VA_ARG LPAREN", expecting "assignment_expression COMMA type_name RPAREN"

translation_unit: STATIC_ASSERT LPAREN UNAME WHILE
##
## Ends in an error in state: 22.
##
## var_name -> UNAME . VARIABLE [ STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_GT MINUS_EQ MINUS LT_LT_EQ LT_LT LT_EQ LT LPAREN LBRACK GT_GT_EQ GT_GT GT_EQ GT EQ_EQ EQ ELLIPSIS DOT COMMA COLON CARET_EQ CARET BANG_EQ AMPERSAND_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## UNAME
##

parsing "var_name": seen "UNAME", expecting "VARIABLE"

translation_unit: ALIGNAS LPAREN PRINT_TYPE WHILE
##
## Ends in an error in state: 28.
##
## postfix_expression -> PRINT_TYPE . LPAREN expression RPAREN [ STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_GT MINUS_EQ MINUS LT_LT_EQ LT_LT LT_EQ LT LPAREN LBRACK GT_GT_EQ GT_GT GT_EQ GT EQ_EQ EQ ELLIPSIS DOT COMMA COLON CARET_EQ CARET BANG_EQ AMPERSAND_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## PRINT_TYPE
##

parsing "postfix_expression": seen "PRINT_TYPE", expecting "LPAREN expression RPAREN"

translation_unit: ALIGNAS LPAREN PRINT_TYPE LPAREN WHILE
##
## Ends in an error in state: 29.
##
## postfix_expression -> PRINT_TYPE LPAREN . expression RPAREN [ STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_GT MINUS_EQ MINUS LT_LT_EQ LT_LT LT_EQ LT LPAREN LBRACK GT_GT_EQ GT_GT GT_EQ GT EQ_EQ EQ ELLIPSIS DOT COMMA COLON CARET_EQ CARET BANG_EQ AMPERSAND_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## PRINT_TYPE LPAREN
##

parsing "postfix_expression": seen "PRINT_TYPE LPAREN", expecting "expression RPAREN"

translation_unit: ALIGNAS LPAREN PLUS_PLUS WHILE
##
## Ends in an error in state: 30.
##
## unary_expression -> PLUS_PLUS . unary_expression [ STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_EQ MINUS LT_LT_EQ LT_LT LT_EQ LT GT_GT_EQ GT_GT GT_EQ GT EQ_EQ EQ ELLIPSIS COMMA COLON CARET_EQ CARET BANG_EQ AMPERSAND_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## PLUS_PLUS
##

parsing "unary_expression": seen "PLUS_PLUS", expecting "unary_expression"

translation_unit: ALIGNAS LPAREN OFFSETOF WHILE
##
## Ends in an error in state: 32.
##
## postfix_expression -> OFFSETOF . LPAREN type_name COMMA general_identifier RPAREN [ STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_GT MINUS_EQ MINUS LT_LT_EQ LT_LT LT_EQ LT LPAREN LBRACK GT_GT_EQ GT_GT GT_EQ GT EQ_EQ EQ ELLIPSIS DOT COMMA COLON CARET_EQ CARET BANG_EQ AMPERSAND_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## OFFSETOF
##

parsing "postfix_expression": seen "OFFSETOF", expecting "LPAREN type_name COMMA general_identifier RPAREN"

translation_unit: ALIGNAS LPAREN OFFSETOF LPAREN WHILE
##
## Ends in an error in state: 33.
##
## postfix_expression -> OFFSETOF LPAREN . type_name COMMA general_identifier RPAREN [ STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_GT MINUS_EQ MINUS LT_LT_EQ LT_LT LT_EQ LT LPAREN LBRACK GT_GT_EQ GT_GT GT_EQ GT EQ_EQ EQ ELLIPSIS DOT COMMA COLON CARET_EQ CARET BANG_EQ AMPERSAND_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## OFFSETOF LPAREN
##

parsing "postfix_expression": seen "OFFSETOF LPAREN", expecting "type_name COMMA general_identifier RPAREN"

translation_unit: LNAME WHILE
##
## Ends in an error in state: 39.
##
## typedef_name -> LNAME . TYPE [ VOLATILE UNAME TYPEDEF THREAD_LOCAL STATIC STAR SEMICOLON RPAREN RESTRICT REGISTER NORETURN LPAREN LNAME LBRACK_LBRACK LBRACK INLINE GT EXTERN CONST COMMA COLON AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## LNAME
##

parsing "typedef_name": seen "LNAME", expecting "TYPE"

translation_unit: LBRACK_LBRACK VA_START
##
## Ends in an error in state: 47.
##
## attribute_specifier -> LBRACK_LBRACK . attribute_list RBRACK RBRACK [ WHILE VOLATILE VOID VA_START VA_END VA_COPY VA_ARG UNSIGNED UNION UNAME TYPEOF TYPEDEF TILDE THREAD_LOCAL SWITCH STRUCT STRING_LITERAL STATIC_ASSERT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RPAREN RETURN RESTRICT REGISTER RBRACE PRINT_TYPE PLUS_PLUS PLUS OFFSETOF NORETURN MINUS_MINUS MINUS LPAREN LONG LNAME LBRACK_LBRACK LBRACK LBRACES LBRACE INT INLINE IF GT GOTO GENERIC FOR FLOAT EXTERN EQ ENUM DOUBLE DO DEFAULT CONTINUE CONSTANT CONST COMPLEX COMMA COLON CHAR CERB_MAGIC CASE BUILTIN_TYPES_COMPATIBLE_P BUILTIN_CHOOSE_EXPR BREAK BOOL BMC_ASSUME BANG AUTO ATOMIC ASSERT ASM AMPERSAND ALIGNOF ALIGNAS ]
##
## The known suffix of the stack is as follows:
## LBRACK_LBRACK
##

parsing "attribute_specifier": seen "LBRACK_LBRACK", expecting "attribute_list RBRACK RBRACK"

translation_unit: LBRACK_LBRACK ALIGNAS COLON_COLON ALIGNAS WHILE
##
## Ends in an error in state: 95.
##
## attribute -> attribute_token . option(attribute_argument_clause) [ RBRACK COMMA ]
##
## The known suffix of the stack is as follows:
## attribute_token
##

parsing "attribute": seen "attribute_token", expecting "option(attribute_argument_clause)"

translation_unit: LBRACK_LBRACK ALIGNAS LPAREN WHILE
##
## Ends in an error in state: 96.
##
## attribute_argument_clause -> LPAREN . balanced_token_sequence RPAREN [ RBRACK COMMA ]
##
## The known suffix of the stack is as follows:
## LPAREN
##

parsing "attribute_argument_clause": seen "LPAREN", expecting "balanced_token_sequence RPAREN"

translation_unit: LBRACK_LBRACK ALIGNAS LPAREN LPAREN WHILE
##
## Ends in an error in state: 97.
##
## balanced_token -> LPAREN . balanced_token_sequence RPAREN [ STRING_LITERAL RPAREN RBRACK RBRACE LPAREN LBRACK LBRACE ]
##
## The known suffix of the stack is as follows:
## LPAREN
##

parsing "balanced_token": seen "LPAREN", expecting "balanced_token_sequence RPAREN"

translation_unit: LBRACK_LBRACK ALIGNAS LPAREN LBRACK WHILE
##
## Ends in an error in state: 98.
##
## balanced_token -> LBRACK . balanced_token_sequence RBRACK [ STRING_LITERAL RPAREN RBRACK RBRACE LPAREN LBRACK LBRACE ]
##
## The known suffix of the stack is as follows:
## LBRACK
##

parsing "balanced_token": seen "LBRACK", expecting "balanced_token_sequence RBRACK"

translation_unit: LBRACK_LBRACK ALIGNAS LPAREN LBRACE WHILE
##
## Ends in an error in state: 99.
##
## balanced_token -> LBRACE . balanced_token_sequence RBRACE [ STRING_LITERAL RPAREN RBRACK RBRACE LPAREN LBRACK LBRACE ]
##
## The known suffix of the stack is as follows:
## LBRACE
##

parsing "balanced_token": seen "LBRACE", expecting "balanced_token_sequence RBRACE"

translation_unit: LBRACK_LBRACK ALIGNAS LPAREN STRING_LITERAL COMMA WHILE
##
## Ends in an error in state: 106.
##
## separated_nonempty_list(COMMA,located_string_literal) -> located_string_literal COMMA . separated_nonempty_list(COMMA,located_string_literal) [ STRING_LITERAL RPAREN RBRACK RBRACE LPAREN LBRACK LBRACE ]
##
## The known suffix of the stack is as follows:
## located_string_literal COMMA
##

parsing "separated_nonempty_list(COMMA,located_string_literal)": seen "located_string_literal COMMA", expecting "separated_nonempty_list(COMMA,located_string_literal)"

translation_unit: LBRACK_LBRACK ALIGNAS RBRACK WHILE
##
## Ends in an error in state: 122.
##
## attribute_specifier -> LBRACK_LBRACK attribute_list RBRACK . RBRACK [ WHILE VOLATILE VOID VA_START VA_END VA_COPY VA_ARG UNSIGNED UNION UNAME TYPEOF TYPEDEF TILDE THREAD_LOCAL SWITCH STRUCT STRING_LITERAL STATIC_ASSERT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RPAREN RETURN RESTRICT REGISTER RBRACE PRINT_TYPE PLUS_PLUS PLUS OFFSETOF NORETURN MINUS_MINUS MINUS LPAREN LONG LNAME LBRACK_LBRACK LBRACK LBRACES LBRACE INT INLINE IF GT GOTO GENERIC FOR FLOAT EXTERN EQ ENUM DOUBLE DO DEFAULT CONTINUE CONSTANT CONST COMPLEX COMMA COLON CHAR CERB_MAGIC CASE BUILTIN_TYPES_COMPATIBLE_P BUILTIN_CHOOSE_EXPR BREAK BOOL BMC_ASSUME BANG AUTO ATOMIC ASSERT ASM AMPERSAND ALIGNOF ALIGNAS ]
##
## The known suffix of the stack is as follows:
## LBRACK_LBRACK attribute_list RBRACK
##

parsing "attribute_specifier": seen "LBRACK_LBRACK attribute_list RBRACK", expecting "RBRACK"

translation_unit: LBRACK_LBRACK ALIGNAS COMMA VA_START
##
## Ends in an error in state: 124.
##
## attribute_list -> attribute_list COMMA . attribute [ RBRACK COMMA ]
##
## The known suffix of the stack is as follows:
## attribute_list COMMA
##

parsing "attribute_list": seen "attribute_list COMMA", expecting "attribute"

translation_unit: LBRACK_LBRACK ALIGNAS COLON_COLON VA_START
##
## Ends in an error in state: 126.
##
## attribute_prefixed_token -> attribute_identifier COLON_COLON . attribute_identifier [ RBRACK LPAREN COMMA ]
##
## The known suffix of the stack is as follows:
## attribute_identifier COLON_COLON
##

parsing "attribute_prefixed_token": seen "attribute_identifier COLON_COLON", expecting "attribute_identifier"

translation_unit: ENUM LBRACE WHILE
##
## Ends in an error in state: 131.
##
## enum_specifier -> ENUM option(general_identifier) LBRACE . enumerator_list option(COMMA) RBRACE [ VOLATILE UNAME TYPEDEF THREAD_LOCAL STATIC STAR SEMICOLON RPAREN RESTRICT REGISTER NORETURN LPAREN LNAME LBRACK_LBRACK LBRACK INLINE GT EXTERN CONST COMMA COLON AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## ENUM option(general_identifier) LBRACE
##

parsing "enum_specifier": seen "ENUM option(general_identifier) LBRACE", expecting "enumerator_list option(COMMA) RBRACE"

translation_unit: ENUM LBRACE LNAME TYPE EQ WHILE
##
## Ends in an error in state: 137.
##
## enumerator -> enumeration_constant EQ . constant_expression [ RBRACE COMMA ]
##
## The known suffix of the stack is as follows:
## enumeration_constant EQ
##

parsing "enumerator": seen "enumeration_constant EQ", expecting "constant_expression"

translation_unit: ALIGNAS LPAREN MINUS_MINUS WHILE
##
## Ends in an error in state: 138.
##
## unary_expression -> MINUS_MINUS . unary_expression [ STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_EQ MINUS LT_LT_EQ LT_LT LT_EQ LT GT_GT_EQ GT_GT GT_EQ GT EQ_EQ EQ ELLIPSIS COMMA COLON CARET_EQ CARET BANG_EQ AMPERSAND_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## MINUS_MINUS
##

parsing "unary_expression": seen "MINUS_MINUS", expecting "unary_expression"

translation_unit: ALIGNAS LPAREN GENERIC WHILE
##
## Ends in an error in state: 142.
##
## generic_selection -> GENERIC . LPAREN assignment_expression COMMA generic_assoc_list RPAREN [ STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_GT MINUS_EQ MINUS LT_LT_EQ LT_LT LT_EQ LT LPAREN LBRACK GT_GT_EQ GT_GT GT_EQ GT EQ_EQ EQ ELLIPSIS DOT COMMA COLON CARET_EQ CARET BANG_EQ AMPERSAND_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## GENERIC
##

parsing "generic_selection": seen "GENERIC", expecting "LPAREN assignment_expression COMMA generic_assoc_list RPAREN"

translation_unit: ALIGNAS LPAREN GENERIC LPAREN WHILE
##
## Ends in an error in state: 143.
##
## generic_selection -> GENERIC LPAREN . assignment_expression COMMA generic_assoc_list RPAREN [ STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_GT MINUS_EQ MINUS LT_LT_EQ LT_LT LT_EQ LT LPAREN LBRACK GT_GT_EQ GT_GT GT_EQ GT EQ_EQ EQ ELLIPSIS DOT COMMA COLON CARET_EQ CARET BANG_EQ AMPERSAND_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## GENERIC LPAREN
##

parsing "generic_selection": seen "GENERIC LPAREN", expecting "assignment_expression COMMA generic_assoc_list RPAREN"

translation_unit: STATIC_ASSERT LPAREN LNAME WHILE
##
## Ends in an error in state: 144.
##
## var_name -> LNAME . VARIABLE [ STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_GT MINUS_EQ MINUS LT_LT_EQ LT_LT LT_EQ LT LPAREN LBRACK GT_GT_EQ GT_GT GT_EQ GT EQ_EQ EQ ELLIPSIS DOT COMMA COLON CARET_EQ CARET BANG_EQ AMPERSAND_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## LNAME
##

parsing "var_name": seen "LNAME", expecting "VARIABLE"

translation_unit: ALIGNAS LPAREN BUILTIN_TYPES_COMPATIBLE_P WHILE
##
## Ends in an error in state: 147.
##
## postfix_expression -> BUILTIN_TYPES_COMPATIBLE_P . LPAREN type_name COMMA type_name RPAREN [ STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_GT MINUS_EQ MINUS LT_LT_EQ LT_LT LT_EQ LT LPAREN LBRACK GT_GT_EQ GT_GT GT_EQ GT EQ_EQ EQ ELLIPSIS DOT COMMA COLON CARET_EQ CARET BANG_EQ AMPERSAND_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## BUILTIN_TYPES_COMPATIBLE_P
##

parsing "postfix_expression": seen "BUILTIN_TYPES_COMPATIBLE_P", expecting "LPAREN type_name COMMA type_name RPAREN"

translation_unit: ALIGNAS LPAREN BUILTIN_TYPES_COMPATIBLE_P LPAREN WHILE
##
## Ends in an error in state: 148.
##
## postfix_expression -> BUILTIN_TYPES_COMPATIBLE_P LPAREN . type_name COMMA type_name RPAREN [ STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_GT MINUS_EQ MINUS LT_LT_EQ LT_LT LT_EQ LT LPAREN LBRACK GT_GT_EQ GT_GT GT_EQ GT EQ_EQ EQ ELLIPSIS DOT COMMA COLON CARET_EQ CARET BANG_EQ AMPERSAND_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## BUILTIN_TYPES_COMPATIBLE_P LPAREN
##

parsing "postfix_expression": seen "BUILTIN_TYPES_COMPATIBLE_P LPAREN", expecting "type_name COMMA type_name RPAREN"

translation_unit: ATOMIC LPAREN WHILE
##
## Ends in an error in state: 155.
##
## atomic_type_specifier -> ATOMIC LPAREN . type_name RPAREN [ VOLATILE UNAME TYPEDEF THREAD_LOCAL STATIC STAR SEMICOLON RPAREN RESTRICT REGISTER NORETURN LPAREN LNAME LBRACK_LBRACK LBRACK INLINE GT EXTERN CONST COMMA COLON AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## ATOMIC LPAREN
##

parsing "atomic_type_specifier": seen "ATOMIC LPAREN", expecting "type_name RPAREN"

translation_unit: ALIGNAS LPAREN BUILTIN_CHOOSE_EXPR WHILE
##
## Ends in an error in state: 158.
##
## postfix_expression -> BUILTIN_CHOOSE_EXPR . LPAREN assignment_expression COMMA assignment_expression COMMA assignment_expression RPAREN [ STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_GT MINUS_EQ MINUS LT_LT_EQ LT_LT LT_EQ LT LPAREN LBRACK GT_GT_EQ GT_GT GT_EQ GT EQ_EQ EQ ELLIPSIS DOT COMMA COLON CARET_EQ CARET BANG_EQ AMPERSAND_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## BUILTIN_CHOOSE_EXPR
##

parsing "postfix_expression": seen "BUILTIN_CHOOSE_EXPR", expecting "LPAREN assignment_expression COMMA assignment_expression COMMA assignment_expression RPAREN"

translation_unit: ALIGNAS LPAREN BUILTIN_CHOOSE_EXPR LPAREN WHILE
##
## Ends in an error in state: 159.
##
## postfix_expression -> BUILTIN_CHOOSE_EXPR LPAREN . assignment_expression COMMA assignment_expression COMMA assignment_expression RPAREN [ STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_GT MINUS_EQ MINUS LT_LT_EQ LT_LT LT_EQ LT LPAREN LBRACK GT_GT_EQ GT_GT GT_EQ GT EQ_EQ EQ ELLIPSIS DOT COMMA COLON CARET_EQ CARET BANG_EQ AMPERSAND_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## BUILTIN_CHOOSE_EXPR LPAREN
##

parsing "postfix_expression": seen "BUILTIN_CHOOSE_EXPR LPAREN", expecting "assignment_expression COMMA assignment_expression COMMA assignment_expression RPAREN"

translation_unit: ALIGNAS LPAREN BMC_ASSUME WHILE
##
## Ends in an error in state: 160.
##
## postfix_expression -> BMC_ASSUME . LPAREN assignment_expression RPAREN [ STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_GT MINUS_EQ MINUS LT_LT_EQ LT_LT LT_EQ LT LPAREN LBRACK GT_GT_EQ GT_GT GT_EQ GT EQ_EQ EQ ELLIPSIS DOT COMMA COLON CARET_EQ CARET BANG_EQ AMPERSAND_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## BMC_ASSUME
##

parsing "postfix_expression": seen "BMC_ASSUME", expecting "LPAREN assignment_expression RPAREN"

translation_unit: ALIGNAS LPAREN BMC_ASSUME LPAREN WHILE
##
## Ends in an error in state: 161.
##
## postfix_expression -> BMC_ASSUME LPAREN . assignment_expression RPAREN [ STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_GT MINUS_EQ MINUS LT_LT_EQ LT_LT LT_EQ LT LPAREN LBRACK GT_GT_EQ GT_GT GT_EQ GT EQ_EQ EQ ELLIPSIS DOT COMMA COLON CARET_EQ CARET BANG_EQ AMPERSAND_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## BMC_ASSUME LPAREN
##

parsing "postfix_expression": seen "BMC_ASSUME LPAREN", expecting "assignment_expression RPAREN"

translation_unit: ALIGNAS LPAREN ASSERT WHILE
##
## Ends in an error in state: 163.
##
## postfix_expression -> ASSERT . LPAREN assignment_expression RPAREN [ STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_GT MINUS_EQ MINUS LT_LT_EQ LT_LT LT_EQ LT LPAREN LBRACK GT_GT_EQ GT_GT GT_EQ GT EQ_EQ EQ ELLIPSIS DOT COMMA COLON CARET_EQ CARET BANG_EQ AMPERSAND_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## ASSERT
##

parsing "postfix_expression": seen "ASSERT", expecting "LPAREN assignment_expression RPAREN"

translation_unit: ALIGNAS LPAREN ASSERT LPAREN WHILE
##
## Ends in an error in state: 164.
##
## postfix_expression -> ASSERT LPAREN . assignment_expression RPAREN [ STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_GT MINUS_EQ MINUS LT_LT_EQ LT_LT LT_EQ LT LPAREN LBRACK GT_GT_EQ GT_GT GT_EQ GT EQ_EQ EQ ELLIPSIS DOT COMMA COLON CARET_EQ CARET BANG_EQ AMPERSAND_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## ASSERT LPAREN
##

parsing "postfix_expression": seen "ASSERT LPAREN", expecting "assignment_expression RPAREN"

translation_unit: ALIGNAS LPAREN ALIGNOF WHILE
##
## Ends in an error in state: 166.
##
## unary_expression -> ALIGNOF . LPAREN type_name RPAREN [ STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_EQ MINUS LT_LT_EQ LT_LT LT_EQ LT GT_GT_EQ GT_GT GT_EQ GT EQ_EQ EQ ELLIPSIS COMMA COLON CARET_EQ CARET BANG_EQ AMPERSAND_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## ALIGNOF
##

parsing "unary_expression": seen "ALIGNOF", expecting "LPAREN type_name RPAREN"

translation_unit: ALIGNAS LPAREN ALIGNOF LPAREN WHILE
##
## Ends in an error in state: 167.
##
## unary_expression -> ALIGNOF LPAREN . type_name RPAREN [ STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_EQ MINUS LT_LT_EQ LT_LT LT_EQ LT GT_GT_EQ GT_GT GT_EQ GT EQ_EQ EQ ELLIPSIS COMMA COLON CARET_EQ CARET BANG_EQ AMPERSAND_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## ALIGNOF LPAREN
##

parsing "unary_expression": seen "ALIGNOF LPAREN", expecting "type_name RPAREN"

translation_unit: STATIC_ASSERT WHILE
##
## Ends in an error in state: 190.
##
## static_assert_declaration -> STATIC_ASSERT . LPAREN constant_expression COMMA string_literal RPAREN SEMICOLON [ WHILE VOLATILE VOID VA_START VA_END VA_COPY VA_ARG UNSIGNED UNION UNAME TYPEOF TYPEDEF TILDE THREAD_LOCAL SWITCH STRUCT STRING_LITERAL STATIC_ASSERT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRINT_TYPE PLUS_PLUS PLUS OFFSETOF NORETURN MINUS_MINUS MINUS LPAREN LONG LNAME LBRACK_LBRACK LBRACES LBRACE INT INLINE IF GOTO GENERIC FOR FLOAT EXTERN EOF ENUM DOUBLE DO DEFAULT CONTINUE CONSTANT CONST COMPLEX CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE CHAR CERB_MAGIC CASE BUILTIN_TYPES_COMPATIBLE_P BUILTIN_CHOOSE_EXPR BREAK BOOL BMC_ASSUME BANG AUTO ATOMIC ASSERT ASM AMPERSAND ALIGNOF ALIGNAS ]
##
## The known suffix of the stack is as follows:
## STATIC_ASSERT
##

parsing "static_assert_declaration": seen "STATIC_ASSERT", expecting "LPAREN constant_expression COMMA string_literal RPAREN SEMICOLON"

translation_unit: STATIC_ASSERT LPAREN WHILE
##
## Ends in an error in state: 191.
##
## static_assert_declaration -> STATIC_ASSERT LPAREN . constant_expression COMMA string_literal RPAREN SEMICOLON [ WHILE VOLATILE VOID VA_START VA_END VA_COPY VA_ARG UNSIGNED UNION UNAME TYPEOF TYPEDEF TILDE THREAD_LOCAL SWITCH STRUCT STRING_LITERAL STATIC_ASSERT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRINT_TYPE PLUS_PLUS PLUS OFFSETOF NORETURN MINUS_MINUS MINUS LPAREN LONG LNAME LBRACK_LBRACK LBRACES LBRACE INT INLINE IF GOTO GENERIC FOR FLOAT EXTERN EOF ENUM DOUBLE DO DEFAULT CONTINUE CONSTANT CONST COMPLEX CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE CHAR CERB_MAGIC CASE BUILTIN_TYPES_COMPATIBLE_P BUILTIN_CHOOSE_EXPR BREAK BOOL BMC_ASSUME BANG AUTO ATOMIC ASSERT ASM AMPERSAND ALIGNOF ALIGNAS ]
##
## The known suffix of the stack is as follows:
## STATIC_ASSERT LPAREN
##

parsing "static_assert_declaration": seen "STATIC_ASSERT LPAREN", expecting "constant_expression COMMA string_literal RPAREN SEMICOLON"

translation_unit: ALIGNAS LPAREN AMPERSAND WHILE
##
## Ends in an error in state: 194.
##
## unary_expression -> unary_operator . cast_expression [ STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_EQ MINUS LT_LT_EQ LT_LT LT_EQ LT GT_GT_EQ GT_GT GT_EQ GT EQ_EQ EQ ELLIPSIS COMMA COLON CARET_EQ CARET BANG_EQ AMPERSAND_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## unary_operator
##

parsing "unary_expression": seen "unary_operator", expecting "cast_expression"

translation_unit: ALIGNAS LPAREN STRING_LITERAL MINUS_GT WHILE
##
## Ends in an error in state: 202.
##
## postfix_expression -> postfix_expression MINUS_GT . general_identifier [ STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_GT MINUS_EQ MINUS LT_LT_EQ LT_LT LT_EQ LT LPAREN LBRACK GT_GT_EQ GT_GT GT_EQ GT EQ_EQ EQ ELLIPSIS DOT COMMA COLON CARET_EQ CARET BANG_EQ AMPERSAND_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## postfix_expression MINUS_GT
##

parsing "postfix_expression": seen "postfix_expression MINUS_GT", expecting "general_identifier"

translation_unit: ALIGNAS LPAREN STRING_LITERAL LPAREN WHILE
##
## Ends in an error in state: 204.
##
## postfix_expression -> postfix_expression LPAREN . option(argument_expression_list) RPAREN [ STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_GT MINUS_EQ MINUS LT_LT_EQ LT_LT LT_EQ LT LPAREN LBRACK GT_GT_EQ GT_GT GT_EQ GT EQ_EQ EQ ELLIPSIS DOT COMMA COLON CARET_EQ CARET BANG_EQ AMPERSAND_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## postfix_expression LPAREN
##

parsing "postfix_expression": seen "postfix_expression LPAREN", expecting "option(argument_expression_list) RPAREN"

translation_unit: TYPEOF LPAREN STRING_LITERAL AMPERSAND_EQ WHILE
##
## Ends in an error in state: 217.
##
## assignment_expression -> unary_expression assignment_operator . assignment_expression [ SEMICOLON RPAREN RBRACK RBRACE COMMA COLON ]
##
## The known suffix of the stack is as follows:
## unary_expression assignment_operator
##

parsing "assignment_expression": seen "unary_expression assignment_operator", expecting "assignment_expression"

translation_unit: ALIGNAS LPAREN STRING_LITERAL LT_LT WHILE
##
## Ends in an error in state: 219.
##
## shift_expression -> shift_expression LT_LT . additive_expression [ SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PIPE_PIPE PIPE LT_LT LT_EQ LT GT_GT GT_EQ GT EQ_EQ ELLIPSIS COMMA COLON CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## shift_expression LT_LT
##

parsing "shift_expression": seen "shift_expression LT_LT", expecting "additive_expression"

translation_unit: ALIGNAS LPAREN STRING_LITERAL STAR WHILE
##
## Ends in an error in state: 221.
##
## multiplicative_expression -> multiplicative_expression STAR . cast_expression [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS LT_LT LT_EQ LT GT_GT GT_EQ GT EQ_EQ ELLIPSIS COMMA COLON CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## multiplicative_expression STAR
##

parsing "multiplicative_expression": seen "multiplicative_expression STAR", expecting "cast_expression"

translation_unit: ALIGNAS LPAREN STRING_LITERAL SLASH WHILE
##
## Ends in an error in state: 224.
##
## multiplicative_expression -> multiplicative_expression SLASH . cast_expression [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS LT_LT LT_EQ LT GT_GT GT_EQ GT EQ_EQ ELLIPSIS COMMA COLON CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## multiplicative_expression SLASH
##

parsing "multiplicative_expression": seen "multiplicative_expression SLASH", expecting "cast_expression"

translation_unit: ALIGNAS LPAREN STRING_LITERAL PERCENT WHILE
##
## Ends in an error in state: 226.
##
## multiplicative_expression -> multiplicative_expression PERCENT . cast_expression [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS LT_LT LT_EQ LT GT_GT GT_EQ GT EQ_EQ ELLIPSIS COMMA COLON CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## multiplicative_expression PERCENT
##

parsing "multiplicative_expression": seen "multiplicative_expression PERCENT", expecting "cast_expression"

translation_unit: ALIGNAS LPAREN STRING_LITERAL PLUS WHILE
##
## Ends in an error in state: 230.
##
## additive_expression -> additive_expression PLUS . multiplicative_expression [ SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PLUS PIPE_PIPE PIPE MINUS LT_LT LT_EQ LT GT_GT GT_EQ GT EQ_EQ ELLIPSIS COMMA COLON CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## additive_expression PLUS
##

parsing "additive_expression": seen "additive_expression PLUS", expecting "multiplicative_expression"

translation_unit: ALIGNAS LPAREN STRING_LITERAL MINUS WHILE
##
## Ends in an error in state: 232.
##
## additive_expression -> additive_expression MINUS . multiplicative_expression [ SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PLUS PIPE_PIPE PIPE MINUS LT_LT LT_EQ LT GT_GT GT_EQ GT EQ_EQ ELLIPSIS COMMA COLON CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## additive_expression MINUS
##

parsing "additive_expression": seen "additive_expression MINUS", expecting "multiplicative_expression"

translation_unit: ALIGNAS LPAREN STRING_LITERAL GT_GT WHILE
##
## Ends in an error in state: 234.
##
## shift_expression -> shift_expression GT_GT . additive_expression [ SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PIPE_PIPE PIPE LT_LT LT_EQ LT GT_GT GT_EQ GT EQ_EQ ELLIPSIS COMMA COLON CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## shift_expression GT_GT
##

parsing "shift_expression": seen "shift_expression GT_GT", expecting "additive_expression"

translation_unit: ALIGNAS LPAREN STRING_LITERAL LT_EQ WHILE
##
## Ends in an error in state: 237.
##
## relational_expression -> relational_expression LT_EQ . shift_expression [ SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PIPE_PIPE PIPE LT_EQ LT GT_EQ GT EQ_EQ ELLIPSIS COMMA COLON CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## relational_expression LT_EQ
##

parsing "relational_expression": seen "relational_expression LT_EQ", expecting "shift_expression"

translation_unit: ALIGNAS LPAREN STRING_LITERAL LT WHILE
##
## Ends in an error in state: 240.
##
## relational_expression -> relational_expression LT . shift_expression [ SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PIPE_PIPE PIPE LT_EQ LT GT_EQ GT EQ_EQ ELLIPSIS COMMA COLON CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## relational_expression LT
##

parsing "relational_expression": seen "relational_expression LT", expecting "shift_expression"

translation_unit: ALIGNAS LPAREN STRING_LITERAL GT_EQ WHILE
##
## Ends in an error in state: 242.
##
## relational_expression -> relational_expression GT_EQ . shift_expression [ SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PIPE_PIPE PIPE LT_EQ LT GT_EQ GT EQ_EQ ELLIPSIS COMMA COLON CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## relational_expression GT_EQ
##

parsing "relational_expression": seen "relational_expression GT_EQ", expecting "shift_expression"

translation_unit: ALIGNAS LPAREN STRING_LITERAL GT WHILE
##
## Ends in an error in state: 244.
##
## relational_expression -> relational_expression GT . shift_expression [ SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PIPE_PIPE PIPE LT_EQ LT GT_EQ GT EQ_EQ ELLIPSIS COMMA COLON CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## relational_expression GT
##

parsing "relational_expression": seen "relational_expression GT", expecting "shift_expression"

translation_unit: ALIGNAS LPAREN STRING_LITERAL QUESTION_COLON WHILE
##
## Ends in an error in state: 247.
##
## conditional_expression -> logical_OR_expression QUESTION_COLON . conditional_expression [ SEMICOLON RPAREN RBRACK RBRACE ELLIPSIS COMMA COLON ]
##
## The known suffix of the stack is as follows:
## logical_OR_expression QUESTION_COLON
##

parsing "conditional_expression": seen "logical_OR_expression QUESTION_COLON", expecting "conditional_expression"

translation_unit: ALIGNAS LPAREN STRING_LITERAL AMPERSAND_AMPERSAND WHILE
##
## Ends in an error in state: 249.
##
## logical_AND_expression -> logical_AND_expression AMPERSAND_AMPERSAND . inclusive_OR_expression [ SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PIPE_PIPE ELLIPSIS COMMA COLON AMPERSAND_AMPERSAND ]
##
## The known suffix of the stack is as follows:
## logical_AND_expression AMPERSAND_AMPERSAND
##

parsing "logical_AND_expression": seen "logical_AND_expression AMPERSAND_AMPERSAND", expecting "inclusive_OR_expression"

translation_unit: ALIGNAS LPAREN STRING_LITERAL PIPE WHILE
##
## Ends in an error in state: 251.
##
## inclusive_OR_expression -> inclusive_OR_expression PIPE . exclusive_OR_expression [ SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PIPE_PIPE PIPE ELLIPSIS COMMA COLON AMPERSAND_AMPERSAND ]
##
## The known suffix of the stack is as follows:
## inclusive_OR_expression PIPE
##

parsing "inclusive_OR_expression": seen "inclusive_OR_expression PIPE", expecting "exclusive_OR_expression"

translation_unit: ALIGNAS LPAREN STRING_LITERAL CARET WHILE
##
## Ends in an error in state: 253.
##
## exclusive_OR_expression -> exclusive_OR_expression CARET . _AND_expression [ SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PIPE_PIPE PIPE ELLIPSIS COMMA COLON CARET AMPERSAND_AMPERSAND ]
##
## The known suffix of the stack is as follows:
## exclusive_OR_expression CARET
##

parsing "exclusive_OR_expression": seen "exclusive_OR_expression CARET", expecting "_AND_expression"

translation_unit: ALIGNAS LPAREN STRING_LITERAL EQ_EQ WHILE
##
## Ends in an error in state: 255.
##
## equality_expression -> equality_expression EQ_EQ . relational_expression [ SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PIPE_PIPE PIPE EQ_EQ ELLIPSIS COMMA COLON CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## equality_expression EQ_EQ
##

parsing "equality_expression": seen "equality_expression EQ_EQ", expecting "relational_expression"

translation_unit: ALIGNAS LPAREN STRING_LITERAL BANG_EQ WHILE
##
## Ends in an error in state: 257.
##
## equality_expression -> equality_expression BANG_EQ . relational_expression [ SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PIPE_PIPE PIPE EQ_EQ ELLIPSIS COMMA COLON CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## equality_expression BANG_EQ
##

parsing "equality_expression": seen "equality_expression BANG_EQ", expecting "relational_expression"

translation_unit: ALIGNAS LPAREN STRING_LITERAL AMPERSAND WHILE
##
## Ends in an error in state: 260.
##
## _AND_expression -> _AND_expression AMPERSAND . equality_expression [ SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PIPE_PIPE PIPE ELLIPSIS COMMA COLON CARET AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## _AND_expression AMPERSAND
##

parsing "_AND_expression": seen "_AND_expression AMPERSAND", expecting "equality_expression"

translation_unit: ALIGNAS LPAREN STRING_LITERAL QUESTION WHILE
##
## Ends in an error in state: 266.
##
## conditional_expression -> logical_OR_expression QUESTION . expression COLON conditional_expression [ SEMICOLON RPAREN RBRACK RBRACE ELLIPSIS COMMA COLON ]
##
## The known suffix of the stack is as follows:
## logical_OR_expression QUESTION
##

parsing "conditional_expression": seen "logical_OR_expression QUESTION", expecting "expression COLON conditional_expression"

translation_unit: TYPEOF LPAREN STRING_LITERAL COMMA WHILE
##
## Ends in an error in state: 268.
##
## expression -> expression COMMA . assignment_expression [ SEMICOLON RPAREN RBRACK COMMA COLON ]
##
## The known suffix of the stack is as follows:
## expression COMMA
##

parsing "expression": seen "expression COMMA", expecting "assignment_expression"

translation_unit: ALIGNAS LPAREN STRING_LITERAL QUESTION STRING_LITERAL COLON WHILE
##
## Ends in an error in state: 271.
##
## conditional_expression -> logical_OR_expression QUESTION expression COLON . conditional_expression [ SEMICOLON RPAREN RBRACK RBRACE ELLIPSIS COMMA COLON ]
##
## The known suffix of the stack is as follows:
## logical_OR_expression QUESTION expression COLON
##

parsing "conditional_expression": seen "logical_OR_expression QUESTION expression COLON", expecting "conditional_expression"

translation_unit: ALIGNAS LPAREN STRING_LITERAL PIPE_PIPE WHILE
##
## Ends in an error in state: 274.
##
## logical_OR_expression -> logical_OR_expression PIPE_PIPE . logical_AND_expression [ SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PIPE_PIPE ELLIPSIS COMMA COLON ]
##
## The known suffix of the stack is as follows:
## logical_OR_expression PIPE_PIPE
##

parsing "logical_OR_expression": seen "logical_OR_expression PIPE_PIPE", expecting "logical_AND_expression"

translation_unit: ALIGNAS LPAREN STRING_LITERAL LPAREN STRING_LITERAL COMMA WHILE
##
## Ends in an error in state: 281.
##
## argument_expression_list -> argument_expression_list COMMA . assignment_expression [ RPAREN COMMA ]
##
## The known suffix of the stack is as follows:
## argument_expression_list COMMA
##

parsing "argument_expression_list": seen "argument_expression_list COMMA", expecting "assignment_expression"

translation_unit: ALIGNAS LPAREN STRING_LITERAL LBRACK WHILE
##
## Ends in an error in state: 283.
##
## postfix_expression -> postfix_expression LBRACK . expression RBRACK [ STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_GT MINUS_EQ MINUS LT_LT_EQ LT_LT LT_EQ LT LPAREN LBRACK GT_GT_EQ GT_GT GT_EQ GT EQ_EQ EQ ELLIPSIS DOT COMMA COLON CARET_EQ CARET BANG_EQ AMPERSAND_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## postfix_expression LBRACK
##

parsing "postfix_expression": seen "postfix_expression LBRACK", expecting "expression RBRACK"

translation_unit: ALIGNAS LPAREN STRING_LITERAL DOT WHILE
##
## Ends in an error in state: 286.
##
## postfix_expression -> postfix_expression DOT . general_identifier [ STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_GT MINUS_EQ MINUS LT_LT_EQ LT_LT LT_EQ LT LPAREN LBRACK GT_GT_EQ GT_GT GT_EQ GT EQ_EQ EQ ELLIPSIS DOT COMMA COLON CARET_EQ CARET BANG_EQ AMPERSAND_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## postfix_expression DOT
##

parsing "postfix_expression": seen "postfix_expression DOT", expecting "general_identifier"

translation_unit: STATIC_ASSERT LPAREN STRING_LITERAL COMMA WHILE
##
## Ends in an error in state: 290.
##
## static_assert_declaration -> STATIC_ASSERT LPAREN constant_expression COMMA . string_literal RPAREN SEMICOLON [ WHILE VOLATILE VOID VA_START VA_END VA_COPY VA_ARG UNSIGNED UNION UNAME TYPEOF TYPEDEF TILDE THREAD_LOCAL SWITCH STRUCT STRING_LITERAL STATIC_ASSERT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRINT_TYPE PLUS_PLUS PLUS OFFSETOF NORETURN MINUS_MINUS MINUS LPAREN LONG LNAME LBRACK_LBRACK LBRACES LBRACE INT INLINE IF GOTO GENERIC FOR FLOAT EXTERN EOF ENUM DOUBLE DO DEFAULT CONTINUE CONSTANT CONST COMPLEX CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE CHAR CERB_MAGIC CASE BUILTIN_TYPES_COMPATIBLE_P BUILTIN_CHOOSE_EXPR BREAK BOOL BMC_ASSUME BANG AUTO ATOMIC ASSERT ASM AMPERSAND ALIGNOF ALIGNAS ]
##
## The known suffix of the stack is as follows:
## STATIC_ASSERT LPAREN constant_expression COMMA
##

parsing "static_assert_declaration": seen "STATIC_ASSERT LPAREN constant_expression COMMA", expecting "string_literal RPAREN SEMICOLON"

translation_unit: STATIC_ASSERT LPAREN STRING_LITERAL COMMA STRING_LITERAL RPAREN WHILE
##
## Ends in an error in state: 292.
##
## static_assert_declaration -> STATIC_ASSERT LPAREN constant_expression COMMA string_literal RPAREN . SEMICOLON [ WHILE VOLATILE VOID VA_START VA_END VA_COPY VA_ARG UNSIGNED UNION UNAME TYPEOF TYPEDEF TILDE THREAD_LOCAL SWITCH STRUCT STRING_LITERAL STATIC_ASSERT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRINT_TYPE PLUS_PLUS PLUS OFFSETOF NORETURN MINUS_MINUS MINUS LPAREN LONG LNAME LBRACK_LBRACK LBRACES LBRACE INT INLINE IF GOTO GENERIC FOR FLOAT EXTERN EOF ENUM DOUBLE DO DEFAULT CONTINUE CONSTANT CONST COMPLEX CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE CHAR CERB_MAGIC CASE BUILTIN_TYPES_COMPATIBLE_P BUILTIN_CHOOSE_EXPR BREAK BOOL BMC_ASSUME BANG AUTO ATOMIC ASSERT ASM AMPERSAND ALIGNOF ALIGNAS ]
##
## The known suffix of the stack is as follows:
## STATIC_ASSERT LPAREN constant_expression COMMA string_literal RPAREN
##

parsing "static_assert_declaration": seen "STATIC_ASSERT LPAREN constant_expression COMMA string_literal RPAREN", expecting "SEMICOLON"

translation_unit: BOOL LPAREN WHILE
##
## Ends in an error in state: 312.
##
## direct_declarator -> LPAREN save_context . declarator RPAREN [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NORETURN LPAREN LONG LNAME LBRACK LBRACES LBRACE INT INLINE FLOAT EXTERN EQ ENUM DOUBLE CONST COMPLEX COMMA COLON CHAR CERB_MAGIC BOOL AUTO ATOMIC ASM ALIGNAS ]
##
## The known suffix of the stack is as follows:
## LPAREN save_context
##

parsing "direct_declarator": seen "LPAREN save_context", expecting "declarator RPAREN"

translation_unit: BOOL LNAME TYPE LPAREN BOOL COMMA ELLIPSIS WHILE
##
## Ends in an error in state: 320.
##
## function_declarator -> direct_declarator LPAREN scoped(parameter_type_list) . RPAREN [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NORETURN LPAREN LONG LNAME LBRACK_LBRACK LBRACK LBRACES LBRACE INT INLINE FLOAT EXTERN EQ ENUM DOUBLE CONST COMPLEX COMMA COLON CHAR CERB_MAGIC BOOL AUTO ATOMIC ASM ALIGNAS ]
##
## The known suffix of the stack is as follows:
## direct_declarator LPAREN scoped(parameter_type_list)
##

parsing "function_declarator": seen "direct_declarator LPAREN scoped(parameter_type_list)", expecting "RPAREN"

translation_unit: ALIGNAS LPAREN BOOL LBRACK STATIC WHILE
##
## Ends in an error in state: 352.
##
## array_abstract_declarator -> LBRACK STATIC . option(type_qualifier_list) assignment_expression RBRACK [ RPAREN LPAREN LBRACK_LBRACK LBRACK GT COMMA COLON ]
##
## The known suffix of the stack is as follows:
## LBRACK STATIC
##

parsing "array_abstract_declarator": seen "LBRACK STATIC", expecting "option(type_qualifier_list) assignment_expression RBRACK"

translation_unit: ALIGNAS LPAREN BOOL LBRACK ATOMIC STATIC WHILE
##
## Ends in an error in state: 359.
##
## array_abstract_declarator -> LBRACK type_qualifier_list STATIC . assignment_expression RBRACK [ RPAREN LPAREN LBRACK_LBRACK LBRACK GT COMMA COLON ]
##
## The known suffix of the stack is as follows:
## LBRACK type_qualifier_list STATIC
##

parsing "array_abstract_declarator": seen "LBRACK type_qualifier_list STATIC", expecting "assignment_expression RBRACK"

translation_unit: ALIGNAS LPAREN BOOL LBRACK RBRACK LPAREN WHILE
##
## Ends in an error in state: 372.
##
## function_abstract_declarator -> direct_abstract_declarator LPAREN . option(scoped(parameter_type_list)) RPAREN [ RPAREN LPAREN LBRACK_LBRACK LBRACK GT COMMA COLON ]
##
## The known suffix of the stack is as follows:
## direct_abstract_declarator LPAREN
##

parsing "function_abstract_declarator": seen "direct_abstract_declarator LPAREN", expecting "option(scoped(parameter_type_list)) RPAREN"

translation_unit: BOOL LNAME TYPE LBRACK STATIC WHILE
##
## Ends in an error in state: 393.
##
## array_declarator -> direct_declarator LBRACK STATIC . option(type_qualifier_list) assignment_expression RBRACK [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NORETURN LPAREN LONG LNAME LBRACK_LBRACK LBRACK LBRACES LBRACE INT INLINE FLOAT EXTERN EQ ENUM DOUBLE CONST COMPLEX COMMA COLON CHAR CERB_MAGIC BOOL AUTO ATOMIC ASM ALIGNAS ]
##
## The known suffix of the stack is as follows:
## direct_declarator LBRACK STATIC
##

parsing "array_declarator": seen "direct_declarator LBRACK STATIC", expecting "option(type_qualifier_list) assignment_expression RBRACK"

translation_unit: BOOL LNAME TYPE LBRACK ATOMIC STATIC WHILE
##
## Ends in an error in state: 398.
##
## array_declarator -> direct_declarator LBRACK type_qualifier_list STATIC . assignment_expression RBRACK [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NORETURN LPAREN LONG LNAME LBRACK_LBRACK LBRACK LBRACES LBRACE INT INLINE FLOAT EXTERN EQ ENUM DOUBLE CONST COMPLEX COMMA COLON CHAR CERB_MAGIC BOOL AUTO ATOMIC ASM ALIGNAS ]
##
## The known suffix of the stack is as follows:
## direct_declarator LBRACK type_qualifier_list STATIC
##

parsing "array_declarator": seen "direct_declarator LBRACK type_qualifier_list STATIC", expecting "assignment_expression RBRACK"

translation_unit: ALIGNAS LPAREN BOOL LBRACK RBRACK LBRACK STATIC WHILE
##
## Ends in an error in state: 408.
##
## array_abstract_declarator -> direct_abstract_declarator LBRACK STATIC . option(type_qualifier_list) assignment_expression RBRACK [ RPAREN LPAREN LBRACK_LBRACK LBRACK GT COMMA COLON ]
##
## The known suffix of the stack is as follows:
## direct_abstract_declarator LBRACK STATIC
##

parsing "array_abstract_declarator": seen "direct_abstract_declarator LBRACK STATIC", expecting "option(type_qualifier_list) assignment_expression RBRACK"

translation_unit: ALIGNAS LPAREN BOOL LBRACK RBRACK LBRACK ATOMIC STATIC WHILE
##
## Ends in an error in state: 415.
##
## array_abstract_declarator -> direct_abstract_declarator LBRACK type_qualifier_list STATIC . assignment_expression RBRACK [ RPAREN LPAREN LBRACK_LBRACK LBRACK GT COMMA COLON ]
##
## The known suffix of the stack is as follows:
## direct_abstract_declarator LBRACK type_qualifier_list STATIC
##

parsing "array_abstract_declarator": seen "direct_abstract_declarator LBRACK type_qualifier_list STATIC", expecting "assignment_expression RBRACK"

translation_unit: ALIGNAS LPAREN BOOL LBRACK RBRACK LPAREN BOOL COMMA ELLIPSIS WHILE
##
## Ends in an error in state: 429.
##
## function_abstract_declarator -> direct_abstract_declarator LPAREN option(scoped(parameter_type_list)) . RPAREN [ RPAREN LPAREN LBRACK_LBRACK LBRACK GT COMMA COLON ]
##
## The known suffix of the stack is as follows:
## direct_abstract_declarator LPAREN option(scoped(parameter_type_list))
##

parsing "function_abstract_declarator": seen "direct_abstract_declarator LPAREN option(scoped(parameter_type_list))", expecting "RPAREN"

translation_unit: ALIGNAS LPAREN BOOL LPAREN BOOL COMMA ELLIPSIS WHILE
##
## Ends in an error in state: 435.
##
## function_abstract_declarator -> LPAREN option(scoped(parameter_type_list)) . RPAREN [ RPAREN LPAREN LBRACK_LBRACK LBRACK GT COMMA COLON ]
##
## The known suffix of the stack is as follows:
## LPAREN option(scoped(parameter_type_list))
##

parsing "function_abstract_declarator": seen "LPAREN option(scoped(parameter_type_list))", expecting "RPAREN"

translation_unit: BOOL LNAME TYPE LPAREN LNAME VARIABLE COMMA WHILE
##
## Ends in an error in state: 442.
##
## identifier_list -> identifier_list COMMA . var_name [ RPAREN COMMA ]
##
## The known suffix of the stack is as follows:
## identifier_list COMMA
##

parsing "identifier_list": seen "identifier_list COMMA", expecting "var_name"

translation_unit: STRUCT LBRACE BOOL COLON STRING_LITERAL COMMA WHILE
##
## Ends in an error in state: 445.
##
## struct_declarator_list -> struct_declarator_list COMMA . struct_declarator [ SEMICOLON COMMA ]
##
## The known suffix of the stack is as follows:
## struct_declarator_list COMMA
##

parsing "struct_declarator_list": seen "struct_declarator_list COMMA", expecting "struct_declarator"

translation_unit: STRUCT LBRACE BOOL COLON WHILE
##
## Ends in an error in state: 448.
##
## struct_declarator -> option(declarator) COLON . constant_expression [ SEMICOLON COMMA ]
##
## The known suffix of the stack is as follows:
## option(declarator) COLON
##

parsing "struct_declarator": seen "option(declarator) COLON", expecting "constant_expression"

translation_unit: STRUCT LBRACE BOOL SEMICOLON WHILE
##
## Ends in an error in state: 453.
##
## struct_declaration -> specifier_qualifier_list option(struct_declarator_list) SEMICOLON . boption(nonempty_list(SEMICOLON)) [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF STRUCT STATIC_ASSERT SIGNED SHORT RESTRICT RBRACE LONG LNAME LBRACK_LBRACK INT FLOAT ENUM DOUBLE CONST COMPLEX CHAR BOOL ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## specifier_qualifier_list option(struct_declarator_list) SEMICOLON
##

parsing "struct_declaration": seen "specifier_qualifier_list option(struct_declarator_list) SEMICOLON", expecting "boption(nonempty_list(SEMICOLON))"

translation_unit: STRUCT LBRACE LBRACK_LBRACK ALIGNAS RBRACK RBRACK BOOL SEMICOLON WHILE
##
## Ends in an error in state: 479.
##
## struct_declaration -> attribute_specifier_sequence specifier_qualifier_list option(struct_declarator_list) SEMICOLON . boption(nonempty_list(SEMICOLON)) [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF STRUCT STATIC_ASSERT SIGNED SHORT RESTRICT RBRACE LONG LNAME LBRACK_LBRACK INT FLOAT ENUM DOUBLE CONST COMPLEX CHAR BOOL ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## attribute_specifier_sequence specifier_qualifier_list option(struct_declarator_list) SEMICOLON
##

parsing "struct_declaration": seen "attribute_specifier_sequence specifier_qualifier_list option(struct_declarator_list) SEMICOLON", expecting "boption(nonempty_list(SEMICOLON))"

translation_unit: ALIGNAS LPAREN BUILTIN_CHOOSE_EXPR LPAREN STRING_LITERAL COMMA WHILE
##
## Ends in an error in state: 495.
##
## postfix_expression -> BUILTIN_CHOOSE_EXPR LPAREN assignment_expression COMMA . assignment_expression COMMA assignment_expression RPAREN [ STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_GT MINUS_EQ MINUS LT_LT_EQ LT_LT LT_EQ LT LPAREN LBRACK GT_GT_EQ GT_GT GT_EQ GT EQ_EQ EQ ELLIPSIS DOT COMMA COLON CARET_EQ CARET BANG_EQ AMPERSAND_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## BUILTIN_CHOOSE_EXPR LPAREN assignment_expression COMMA
##

parsing "postfix_expression": seen "BUILTIN_CHOOSE_EXPR LPAREN assignment_expression COMMA", expecting "assignment_expression COMMA assignment_expression RPAREN"

translation_unit: ALIGNAS LPAREN BUILTIN_CHOOSE_EXPR LPAREN STRING_LITERAL COMMA STRING_LITERAL COMMA WHILE
##
## Ends in an error in state: 497.
##
## postfix_expression -> BUILTIN_CHOOSE_EXPR LPAREN assignment_expression COMMA assignment_expression COMMA . assignment_expression RPAREN [ STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_GT MINUS_EQ MINUS LT_LT_EQ LT_LT LT_EQ LT LPAREN LBRACK GT_GT_EQ GT_GT GT_EQ GT EQ_EQ EQ ELLIPSIS DOT COMMA COLON CARET_EQ CARET BANG_EQ AMPERSAND_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## BUILTIN_CHOOSE_EXPR LPAREN assignment_expression COMMA assignment_expression COMMA
##

parsing "postfix_expression": seen "BUILTIN_CHOOSE_EXPR LPAREN assignment_expression COMMA assignment_expression COMMA", expecting "assignment_expression RPAREN"

translation_unit: ALIGNAS LPAREN BUILTIN_TYPES_COMPATIBLE_P LPAREN BOOL COMMA WHILE
##
## Ends in an error in state: 507.
##
## postfix_expression -> BUILTIN_TYPES_COMPATIBLE_P LPAREN type_name COMMA . type_name RPAREN [ STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_GT MINUS_EQ MINUS LT_LT_EQ LT_LT LT_EQ LT LPAREN LBRACK GT_GT_EQ GT_GT GT_EQ GT EQ_EQ EQ ELLIPSIS DOT COMMA COLON CARET_EQ CARET BANG_EQ AMPERSAND_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## BUILTIN_TYPES_COMPATIBLE_P LPAREN type_name COMMA
##

parsing "postfix_expression": seen "BUILTIN_TYPES_COMPATIBLE_P LPAREN type_name COMMA", expecting "type_name RPAREN"

translation_unit: ALIGNAS LPAREN GENERIC LPAREN STRING_LITERAL COMMA WHILE
##
## Ends in an error in state: 511.
##
## generic_selection -> GENERIC LPAREN assignment_expression COMMA . generic_assoc_list RPAREN [ STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_GT MINUS_EQ MINUS LT_LT_EQ LT_LT LT_EQ LT LPAREN LBRACK GT_GT_EQ GT_GT GT_EQ GT EQ_EQ EQ ELLIPSIS DOT COMMA COLON CARET_EQ CARET BANG_EQ AMPERSAND_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## GENERIC LPAREN assignment_expression COMMA
##

parsing "generic_selection": seen "GENERIC LPAREN assignment_expression COMMA", expecting "generic_assoc_list RPAREN"

translation_unit: ALIGNAS LPAREN GENERIC LPAREN STRING_LITERAL COMMA DEFAULT WHILE
##
## Ends in an error in state: 512.
##
## generic_association -> DEFAULT . COLON assignment_expression [ RPAREN COMMA ]
##
## The known suffix of the stack is as follows:
## DEFAULT
##

parsing "generic_association": seen "DEFAULT", expecting "COLON assignment_expression"

translation_unit: ALIGNAS LPAREN GENERIC LPAREN STRING_LITERAL COMMA DEFAULT COLON WHILE
##
## Ends in an error in state: 513.
##
## generic_association -> DEFAULT COLON . assignment_expression [ RPAREN COMMA ]
##
## The known suffix of the stack is as follows:
## DEFAULT COLON
##

parsing "generic_association": seen "DEFAULT COLON", expecting "assignment_expression"

translation_unit: ALIGNAS LPAREN GENERIC LPAREN STRING_LITERAL COMMA BOOL COLON WHILE
##
## Ends in an error in state: 516.
##
## generic_association -> type_name COLON . assignment_expression [ RPAREN COMMA ]
##
## The known suffix of the stack is as follows:
## type_name COLON
##

parsing "generic_association": seen "type_name COLON", expecting "assignment_expression"

translation_unit: ALIGNAS LPAREN GENERIC LPAREN STRING_LITERAL COMMA BOOL COLON STRING_LITERAL COMMA WHILE
##
## Ends in an error in state: 521.
##
## generic_assoc_list -> generic_assoc_list COMMA . generic_association [ RPAREN COMMA ]
##
## The known suffix of the stack is as follows:
## generic_assoc_list COMMA
##

parsing "generic_assoc_list": seen "generic_assoc_list COMMA", expecting "generic_association"

translation_unit: ALIGNAS LPAREN LPAREN BOOL RPAREN LBRACE WHILE
##
## Ends in an error in state: 525.
##
## postfix_expression -> LPAREN type_name RPAREN LBRACE . initializer_list option(COMMA) RBRACE [ STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_GT MINUS_EQ MINUS LT_LT_EQ LT_LT LT_EQ LT LPAREN LBRACK GT_GT_EQ GT_GT GT_EQ GT EQ_EQ EQ ELLIPSIS DOT COMMA COLON CARET_EQ CARET BANG_EQ AMPERSAND_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## LPAREN type_name RPAREN LBRACE
##

parsing "postfix_expression": seen "LPAREN type_name RPAREN LBRACE", expecting "initializer_list option(COMMA) RBRACE"

translation_unit: BOOL LNAME TYPE EQ LBRACE LBRACK WHILE
##
## Ends in an error in state: 526.
##
## designator -> LBRACK . constant_expression RBRACK [ LBRACK EQ DOT ]
##
## The known suffix of the stack is as follows:
## LBRACK
##

parsing "designator": seen "LBRACK", expecting "constant_expression RBRACK"

translation_unit: BOOL LNAME TYPE EQ LBRACE DOT WHILE
##
## Ends in an error in state: 529.
##
## designator -> DOT . general_identifier [ LBRACK EQ DOT ]
##
## The known suffix of the stack is as follows:
## DOT
##

parsing "designator": seen "DOT", expecting "general_identifier"

translation_unit: BOOL LNAME TYPE EQ LBRACE DOT LNAME TYPE EQ WHILE
##
## Ends in an error in state: 531.
##
## initializer_list -> option(designation) . initializer_ [ RBRACE COMMA ]
##
## The known suffix of the stack is as follows:
## option(designation)
##

parsing "initializer_list": seen "option(designation)", expecting "initializer_"

translation_unit: BOOL LNAME TYPE EQ LBRACE STRING_LITERAL COMMA DOT LNAME TYPE EQ WHILE
##
## Ends in an error in state: 537.
##
## initializer_list -> initializer_list COMMA option(designation) . initializer_ [ RBRACE COMMA ]
##
## The known suffix of the stack is as follows:
## initializer_list COMMA option(designation)
##

parsing "initializer_list": seen "initializer_list COMMA option(designation)", expecting "initializer_"

translation_unit: ALIGNAS LPAREN LPAREN LBRACE RBRACE WHILE
##
## Ends in an error in state: 551.
##
## primary_expression -> LPAREN scoped(compound_statement) . RPAREN [ STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_GT MINUS_EQ MINUS LT_LT_EQ LT_LT LT_EQ LT LPAREN LBRACK GT_GT_EQ GT_GT GT_EQ GT EQ_EQ EQ ELLIPSIS DOT COMMA COLON CARET_EQ CARET BANG_EQ AMPERSAND_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## LPAREN scoped(compound_statement)
##

parsing "primary_expression": seen "LPAREN scoped(compound_statement)", expecting "RPAREN"

translation_unit: ALIGNAS LPAREN LPAREN LBRACES VOLATILE
##
## Ends in an error in state: 554.
##
## compound_statement -> LBRACES . separated_nonempty_list(PIPES,statement) RBRACES [ WHILE VOLATILE VOID VA_START VA_END VA_COPY VA_ARG UNSIGNED UNION UNAME TYPEOF TYPEDEF TILDE THREAD_LOCAL SWITCH STRUCT STRING_LITERAL STATIC_ASSERT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RPAREN RETURN RESTRICT REGISTER RBRACES RBRACE PRINT_TYPE PLUS_PLUS PLUS PIPES OFFSETOF NORETURN MINUS_MINUS MINUS LPAREN LONG LNAME LBRACK_LBRACK LBRACES LBRACE INT INLINE IF GOTO GENERIC FOR FLOAT EXTERN EOF ENUM ELSE DOUBLE DO DEFAULT CONTINUE CONSTANT CONST COMPLEX CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE CHAR CERB_MAGIC CASE BUILTIN_TYPES_COMPATIBLE_P BUILTIN_CHOOSE_EXPR BREAK BOOL BMC_ASSUME BANG AUTO ATOMIC ASSERT ASM AMPERSAND ALIGNOF ALIGNAS ]
##
## The known suffix of the stack is as follows:
## LBRACES
##

parsing "compound_statement": seen "LBRACES", expecting "separated_nonempty_list(PIPES,statement) RBRACES"

translation_unit: ALIGNAS LPAREN LPAREN LBRACE ASM LPAREN STRING_LITERAL COLON WHILE
##
## Ends in an error in state: 564.
##
## asm_with_output -> COLON . loption(separated_nonempty_list(COMMA,asm_output_input)) option(asm_with_input) [ RPAREN ]
##
## The known suffix of the stack is as follows:
## COLON
##

parsing "asm_with_output": seen "COLON", expecting "loption(separated_nonempty_list(COMMA,asm_output_input)) option(asm_with_input)"

translation_unit: ALIGNAS LPAREN LPAREN LBRACE ASM LPAREN STRING_LITERAL COLON LBRACK UNAME WHILE
##
## Ends in an error in state: 566.
##
## asm_output_input -> LBRACK UNAME . VARIABLE RBRACK string_literal LPAREN expression RPAREN [ RPAREN COMMA COLON ]
##
## The known suffix of the stack is as follows:
## LBRACK UNAME
##

parsing "asm_output_input": seen "LBRACK UNAME", expecting "VARIABLE RBRACK string_literal LPAREN expression RPAREN"

translation_unit: ALIGNAS LPAREN LPAREN LBRACE ASM LPAREN STRING_LITERAL COLON LBRACK UNAME VARIABLE WHILE
##
## Ends in an error in state: 567.
##
## asm_output_input -> LBRACK UNAME VARIABLE . RBRACK string_literal LPAREN expression RPAREN [ RPAREN COMMA COLON ]
##
## The known suffix of the stack is as follows:
## LBRACK UNAME VARIABLE
##

parsing "asm_output_input": seen "LBRACK UNAME VARIABLE", expecting "RBRACK string_literal LPAREN expression RPAREN"

translation_unit: ALIGNAS LPAREN LPAREN LBRACE ASM LPAREN STRING_LITERAL COLON LBRACK UNAME VARIABLE RBRACK WHILE
##
## Ends in an error in state: 568.
##
## asm_output_input -> LBRACK UNAME VARIABLE RBRACK . string_literal LPAREN expression RPAREN [ RPAREN COMMA COLON ]
##
## The known suffix of the stack is as follows:
## LBRACK UNAME VARIABLE RBRACK
##

parsing "asm_output_input": seen "LBRACK UNAME VARIABLE RBRACK", expecting "string_literal LPAREN expression RPAREN"

translation_unit: ALIGNAS LPAREN LPAREN LBRACE ASM LPAREN STRING_LITERAL COLON LBRACK UNAME VARIABLE RBRACK STRING_LITERAL LPAREN WHILE
##
## Ends in an error in state: 570.
##
## asm_output_input -> LBRACK UNAME VARIABLE RBRACK string_literal LPAREN . expression RPAREN [ RPAREN COMMA COLON ]
##
## The known suffix of the stack is as follows:
## LBRACK UNAME VARIABLE RBRACK string_literal LPAREN
##

parsing "asm_output_input": seen "LBRACK UNAME VARIABLE RBRACK string_literal LPAREN", expecting "expression RPAREN"

translation_unit: ALIGNAS LPAREN LPAREN LBRACE ASM LPAREN STRING_LITERAL COLON LBRACK LNAME WHILE
##
## Ends in an error in state: 573.
##
## asm_output_input -> LBRACK LNAME . VARIABLE RBRACK string_literal LPAREN expression RPAREN [ RPAREN COMMA COLON ]
##
## The known suffix of the stack is as follows:
## LBRACK LNAME
##

parsing "asm_output_input": seen "LBRACK LNAME", expecting "VARIABLE RBRACK string_literal LPAREN expression RPAREN"

translation_unit: ALIGNAS LPAREN LPAREN LBRACE ASM LPAREN STRING_LITERAL COLON LBRACK LNAME VARIABLE WHILE
##
## Ends in an error in state: 574.
##
## asm_output_input -> LBRACK LNAME VARIABLE . RBRACK string_literal LPAREN expression RPAREN [ RPAREN COMMA COLON ]
##
## The known suffix of the stack is as follows:
## LBRACK LNAME VARIABLE
##

parsing "asm_output_input": seen "LBRACK LNAME VARIABLE", expecting "RBRACK string_literal LPAREN expression RPAREN"

translation_unit: ALIGNAS LPAREN LPAREN LBRACE ASM LPAREN STRING_LITERAL COLON LBRACK LNAME VARIABLE RBRACK WHILE
##
## Ends in an error in state: 575.
##
## asm_output_input -> LBRACK LNAME VARIABLE RBRACK . string_literal LPAREN expression RPAREN [ RPAREN COMMA COLON ]
##
## The known suffix of the stack is as follows:
## LBRACK LNAME VARIABLE RBRACK
##

parsing "asm_output_input": seen "LBRACK LNAME VARIABLE RBRACK", expecting "string_literal LPAREN expression RPAREN"

translation_unit: ALIGNAS LPAREN LPAREN LBRACE ASM LPAREN STRING_LITERAL COLON LBRACK LNAME VARIABLE RBRACK STRING_LITERAL LPAREN WHILE
##
## Ends in an error in state: 577.
##
## asm_output_input -> LBRACK LNAME VARIABLE RBRACK string_literal LPAREN . expression RPAREN [ RPAREN COMMA COLON ]
##
## The known suffix of the stack is as follows:
## LBRACK LNAME VARIABLE RBRACK string_literal LPAREN
##

parsing "asm_output_input": seen "LBRACK LNAME VARIABLE RBRACK string_literal LPAREN", expecting "expression RPAREN"

translation_unit: ALIGNAS LPAREN LPAREN LBRACE ASM LPAREN STRING_LITERAL COLON STRING_LITERAL LPAREN WHILE
##
## Ends in an error in state: 581.
##
## asm_output_input -> string_literal LPAREN . expression RPAREN [ RPAREN COMMA COLON ]
##
## The known suffix of the stack is as follows:
## string_literal LPAREN
##

parsing "asm_output_input": seen "string_literal LPAREN", expecting "expression RPAREN"

translation_unit: ALIGNAS LPAREN LPAREN LBRACE ASM LPAREN STRING_LITERAL COLON COLON WHILE
##
## Ends in an error in state: 586.
##
## asm_with_input -> COLON . loption(separated_nonempty_list(COMMA,asm_output_input)) option(asm_with_clobbers) [ RPAREN ]
##
## The known suffix of the stack is as follows:
## COLON
##

parsing "asm_with_input": seen "COLON", expecting "loption(separated_nonempty_list(COMMA,asm_output_input)) option(asm_with_clobbers)"

translation_unit: ALIGNAS LPAREN LPAREN LBRACE ASM LPAREN STRING_LITERAL COLON COLON COLON WHILE
##
## Ends in an error in state: 588.
##
## asm_with_clobbers -> COLON . loption(separated_nonempty_list(COMMA,asm_clobber)) option(asm_with_labels) [ RPAREN ]
##
## The known suffix of the stack is as follows:
## COLON
##

parsing "asm_with_clobbers": seen "COLON", expecting "loption(separated_nonempty_list(COMMA,asm_clobber)) option(asm_with_labels)"

translation_unit: ALIGNAS LPAREN LPAREN LBRACE ASM LPAREN STRING_LITERAL COLON COLON COLON COLON WHILE
##
## Ends in an error in state: 592.
##
## asm_with_labels -> COLON . list(asm_label) [ RPAREN ]
##
## The known suffix of the stack is as follows:
## COLON
##

parsing "asm_with_labels": seen "COLON", expecting "list(asm_label)"

translation_unit: ALIGNAS LPAREN LPAREN LBRACE ASM LPAREN STRING_LITERAL COLON COLON COLON COLON UNAME WHILE
##
## Ends in an error in state: 593.
##
## asm_label -> UNAME . VARIABLE [ UNAME RPAREN LNAME ]
##
## The known suffix of the stack is as follows:
## UNAME
##

parsing "asm_label": seen "UNAME", expecting "VARIABLE"

translation_unit: ALIGNAS LPAREN LPAREN LBRACE ASM LPAREN STRING_LITERAL COLON COLON COLON COLON LNAME WHILE
##
## Ends in an error in state: 595.
##
## asm_label -> LNAME . VARIABLE [ UNAME RPAREN LNAME ]
##
## The known suffix of the stack is as follows:
## LNAME
##

parsing "asm_label": seen "LNAME", expecting "VARIABLE"

translation_unit: ALIGNAS LPAREN LPAREN LBRACE ASM LPAREN STRING_LITERAL COLON COLON COLON COLON LNAME VARIABLE WHILE
##
## Ends in an error in state: 598.
##
## list(asm_label) -> asm_label . list(asm_label) [ RPAREN ]
##
## The known suffix of the stack is as follows:
## asm_label
##

parsing "list(asm_label)": seen "asm_label", expecting "list(asm_label)"

translation_unit: ALIGNAS LPAREN LPAREN LBRACE ASM LPAREN STRING_LITERAL COLON COLON COLON STRING_LITERAL COMMA WHILE
##
## Ends in an error in state: 603.
##
## separated_nonempty_list(COMMA,asm_clobber) -> asm_clobber COMMA . separated_nonempty_list(COMMA,asm_clobber) [ RPAREN COLON ]
##
## The known suffix of the stack is as follows:
## asm_clobber COMMA
##

parsing "separated_nonempty_list(COMMA,asm_clobber)": seen "asm_clobber COMMA", expecting "separated_nonempty_list(COMMA,asm_clobber)"

translation_unit: ALIGNAS LPAREN LPAREN LBRACE ASM LPAREN STRING_LITERAL COLON STRING_LITERAL LPAREN STRING_LITERAL RPAREN COMMA WHILE
##
## Ends in an error in state: 608.
##
## separated_nonempty_list(COMMA,asm_output_input) -> asm_output_input COMMA . separated_nonempty_list(COMMA,asm_output_input) [ RPAREN COLON ]
##
## The known suffix of the stack is as follows:
## asm_output_input COMMA
##

parsing "separated_nonempty_list(COMMA,asm_output_input)": seen "asm_output_input COMMA", expecting "separated_nonempty_list(COMMA,asm_output_input)"

translation_unit: ALIGNAS LPAREN LPAREN LBRACE ASM ASM_VOLATILE WHILE
##
## Ends in an error in state: 614.
##
## list(asm_qualifier) -> asm_qualifier . list(asm_qualifier) [ LPAREN ]
##
## The known suffix of the stack is as follows:
## asm_qualifier
##

parsing "list(asm_qualifier)": seen "asm_qualifier", expecting "list(asm_qualifier)"

translation_unit: ALIGNAS LPAREN LPAREN LBRACES SEMICOLON PIPES VOLATILE
##
## Ends in an error in state: 618.
##
## separated_nonempty_list(PIPES,statement) -> statement PIPES . separated_nonempty_list(PIPES,statement) [ RBRACES ]
##
## The known suffix of the stack is as follows:
## statement PIPES
##

parsing "separated_nonempty_list(PIPES,statement)": seen "statement PIPES", expecting "separated_nonempty_list(PIPES,statement)"

translation_unit: ALIGNAS LPAREN LPAREN LBRACE RETURN WHILE
##
## Ends in an error in state: 623.
##
## jump_statement -> RETURN . option(full_expression) SEMICOLON [ WHILE VOLATILE VOID VA_START VA_END VA_COPY VA_ARG UNSIGNED UNION UNAME TYPEOF TYPEDEF TILDE THREAD_LOCAL SWITCH STRUCT STRING_LITERAL STATIC_ASSERT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACES RBRACE PRINT_TYPE PLUS_PLUS PLUS PIPES OFFSETOF NORETURN MINUS_MINUS MINUS LPAREN LONG LNAME LBRACK_LBRACK LBRACES LBRACE INT INLINE IF GOTO GENERIC FOR FLOAT EXTERN ENUM ELSE DOUBLE DO DEFAULT CONTINUE CONSTANT CONST COMPLEX CHAR CERB_MAGIC CASE BUILTIN_TYPES_COMPATIBLE_P BUILTIN_CHOOSE_EXPR BREAK BOOL BMC_ASSUME BANG AUTO ATOMIC ASSERT ASM AMPERSAND ALIGNOF ALIGNAS ]
##
## The known suffix of the stack is as follows:
## RETURN
##

parsing "jump_statement": seen "RETURN", expecting "option(full_expression) SEMICOLON"

translation_unit: ALIGNAS LPAREN LPAREN LBRACE GOTO WHILE
##
## Ends in an error in state: 629.
##
## jump_statement -> GOTO . general_identifier SEMICOLON [ WHILE VOLATILE VOID VA_START VA_END VA_COPY VA_ARG UNSIGNED UNION UNAME TYPEOF TYPEDEF TILDE THREAD_LOCAL SWITCH STRUCT STRING_LITERAL STATIC_ASSERT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACES RBRACE PRINT_TYPE PLUS_PLUS PLUS PIPES OFFSETOF NORETURN MINUS_MINUS MINUS LPAREN LONG LNAME LBRACK_LBRACK LBRACES LBRACE INT INLINE IF GOTO GENERIC FOR FLOAT EXTERN ENUM ELSE DOUBLE DO DEFAULT CONTINUE CONSTANT CONST COMPLEX CHAR CERB_MAGIC CASE BUILTIN_TYPES_COMPATIBLE_P BUILTIN_CHOOSE_EXPR BREAK BOOL BMC_ASSUME BANG AUTO ATOMIC ASSERT ASM AMPERSAND ALIGNOF ALIGNAS ]
##
## The known suffix of the stack is as follows:
## GOTO
##

parsing "jump_statement": seen "GOTO", expecting "general_identifier SEMICOLON"

translation_unit: ALIGNAS LPAREN LPAREN LBRACE GOTO LNAME TYPE WHILE
##
## Ends in an error in state: 630.
##
## jump_statement -> GOTO general_identifier . SEMICOLON [ WHILE VOLATILE VOID VA_START VA_END VA_COPY VA_ARG UNSIGNED UNION UNAME TYPEOF TYPEDEF TILDE THREAD_LOCAL SWITCH STRUCT STRING_LITERAL STATIC_ASSERT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACES RBRACE PRINT_TYPE PLUS_PLUS PLUS PIPES OFFSETOF NORETURN MINUS_MINUS MINUS LPAREN LONG LNAME LBRACK_LBRACK LBRACES LBRACE INT INLINE IF GOTO GENERIC FOR FLOAT EXTERN ENUM ELSE DOUBLE DO DEFAULT CONTINUE CONSTANT CONST COMPLEX CHAR CERB_MAGIC CASE BUILTIN_TYPES_COMPATIBLE_P BUILTIN_CHOOSE_EXPR BREAK BOOL BMC_ASSUME BANG AUTO ATOMIC ASSERT ASM AMPERSAND ALIGNOF ALIGNAS ]
##
## The known suffix of the stack is as follows:
## GOTO general_identifier
##

parsing "jump_statement": seen "GOTO general_identifier", expecting "SEMICOLON"

translation_unit: ALIGNAS LPAREN LPAREN LBRACE DEFAULT WHILE
##
## Ends in an error in state: 632.
##
## labeled_statement -> option(attribute_specifier_sequence) DEFAULT . COLON statement [ WHILE VOLATILE VOID VA_START VA_END VA_COPY VA_ARG UNSIGNED UNION UNAME TYPEOF TYPEDEF TILDE THREAD_LOCAL SWITCH STRUCT STRING_LITERAL STATIC_ASSERT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACES RBRACE PRINT_TYPE PLUS_PLUS PLUS PIPES OFFSETOF NORETURN MINUS_MINUS MINUS LPAREN LONG LNAME LBRACK_LBRACK LBRACES LBRACE INT INLINE IF GOTO GENERIC FOR FLOAT EXTERN ENUM ELSE DOUBLE DO DEFAULT CONTINUE CONSTANT CONST COMPLEX CHAR CERB_MAGIC CASE BUILTIN_TYPES_COMPATIBLE_P BUILTIN_CHOOSE_EXPR BREAK BOOL BMC_ASSUME BANG AUTO ATOMIC ASSERT ASM AMPERSAND ALIGNOF ALIGNAS ]
##
## The known suffix of the stack is as follows:
## option(attribute_specifier_sequence) DEFAULT
##

parsing "labeled_statement": seen "option(attribute_specifier_sequence) DEFAULT", expecting "COLON statement"

translation_unit: ALIGNAS LPAREN LPAREN LBRACE DEFAULT COLON VOLATILE
##
## Ends in an error in state: 633.
##
## labeled_statement -> option(attribute_specifier_sequence) DEFAULT COLON . statement [ WHILE VOLATILE VOID VA_START VA_END VA_COPY VA_ARG UNSIGNED UNION UNAME TYPEOF TYPEDEF TILDE THREAD_LOCAL SWITCH STRUCT STRING_LITERAL STATIC_ASSERT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACES RBRACE PRINT_TYPE PLUS_PLUS PLUS PIPES OFFSETOF NORETURN MINUS_MINUS MINUS LPAREN LONG LNAME LBRACK_LBRACK LBRACES LBRACE INT INLINE IF GOTO GENERIC FOR FLOAT EXTERN ENUM ELSE DOUBLE DO DEFAULT CONTINUE CONSTANT CONST COMPLEX CHAR CERB_MAGIC CASE BUILTIN_TYPES_COMPATIBLE_P BUILTIN_CHOOSE_EXPR BREAK BOOL BMC_ASSUME BANG AUTO ATOMIC ASSERT ASM AMPERSAND ALIGNOF ALIGNAS ]
##
## The known suffix of the stack is as follows:
## option(attribute_specifier_sequence) DEFAULT COLON
##

parsing "labeled_statement": seen "option(attribute_specifier_sequence) DEFAULT COLON", expecting "statement"

translation_unit: ALIGNAS LPAREN LPAREN LBRACES LNAME TYPE WHILE
##
## Ends in an error in state: 636.
##
## labeled_statement -> general_identifier . COLON statement [ WHILE VOLATILE VOID VA_START VA_END VA_COPY VA_ARG UNSIGNED UNION UNAME TYPEOF TYPEDEF TILDE THREAD_LOCAL SWITCH STRUCT STRING_LITERAL STATIC_ASSERT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACES RBRACE PRINT_TYPE PLUS_PLUS PLUS PIPES OFFSETOF NORETURN MINUS_MINUS MINUS LPAREN LONG LNAME LBRACK_LBRACK LBRACES LBRACE INT INLINE IF GOTO GENERIC FOR FLOAT EXTERN ENUM ELSE DOUBLE DO DEFAULT CONTINUE CONSTANT CONST COMPLEX CHAR CERB_MAGIC CASE BUILTIN_TYPES_COMPATIBLE_P BUILTIN_CHOOSE_EXPR BREAK BOOL BMC_ASSUME BANG AUTO ATOMIC ASSERT ASM AMPERSAND ALIGNOF ALIGNAS ]
##
## The known suffix of the stack is as follows:
## general_identifier
##

parsing "labeled_statement": seen "general_identifier", expecting "COLON statement"

translation_unit: ALIGNAS LPAREN LPAREN LBRACE LNAME VARIABLE COLON VOLATILE
##
## Ends in an error in state: 637.
##
## labeled_statement -> general_identifier COLON . statement [ WHILE VOLATILE VOID VA_START VA_END VA_COPY VA_ARG UNSIGNED UNION UNAME TYPEOF TYPEDEF TILDE THREAD_LOCAL SWITCH STRUCT STRING_LITERAL STATIC_ASSERT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACES RBRACE PRINT_TYPE PLUS_PLUS PLUS PIPES OFFSETOF NORETURN MINUS_MINUS MINUS LPAREN LONG LNAME LBRACK_LBRACK LBRACES LBRACE INT INLINE IF GOTO GENERIC FOR FLOAT EXTERN ENUM ELSE DOUBLE DO DEFAULT CONTINUE CONSTANT CONST COMPLEX CHAR CERB_MAGIC CASE BUILTIN_TYPES_COMPATIBLE_P BUILTIN_CHOOSE_EXPR BREAK BOOL BMC_ASSUME BANG AUTO ATOMIC ASSERT ASM AMPERSAND ALIGNOF ALIGNAS ]
##
## The known suffix of the stack is as follows:
## general_identifier COLON
##

parsing "labeled_statement": seen "general_identifier COLON", expecting "statement"

translation_unit: ALIGNAS LPAREN LPAREN LBRACES LBRACK_LBRACK ALIGNAS RBRACK RBRACK LNAME TYPE WHILE
##
## Ends in an error in state: 641.
##
## labeled_statement -> attribute_specifier_sequence general_identifier . COLON statement [ WHILE VOLATILE VOID VA_START VA_END VA_COPY VA_ARG UNSIGNED UNION UNAME TYPEOF TYPEDEF TILDE THREAD_LOCAL SWITCH STRUCT STRING_LITERAL STATIC_ASSERT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACES RBRACE PRINT_TYPE PLUS_PLUS PLUS PIPES OFFSETOF NORETURN MINUS_MINUS MINUS LPAREN LONG LNAME LBRACK_LBRACK LBRACES LBRACE INT INLINE IF GOTO GENERIC FOR FLOAT EXTERN ENUM ELSE DOUBLE DO DEFAULT CONTINUE CONSTANT CONST COMPLEX CHAR CERB_MAGIC CASE BUILTIN_TYPES_COMPATIBLE_P BUILTIN_CHOOSE_EXPR BREAK BOOL BMC_ASSUME BANG AUTO ATOMIC ASSERT ASM AMPERSAND ALIGNOF ALIGNAS ]
##
## The known suffix of the stack is as follows:
## attribute_specifier_sequence general_identifier
##

parsing "labeled_statement": seen "attribute_specifier_sequence general_identifier", expecting "COLON statement"

translation_unit: ALIGNAS LPAREN LPAREN LBRACE LBRACK_LBRACK ALIGNAS RBRACK RBRACK LNAME VARIABLE COLON VOLATILE
##
## Ends in an error in state: 642.
##
## labeled_statement -> attribute_specifier_sequence general_identifier COLON . statement [ WHILE VOLATILE VOID VA_START VA_END VA_COPY VA_ARG UNSIGNED UNION UNAME TYPEOF TYPEDEF TILDE THREAD_LOCAL SWITCH STRUCT STRING_LITERAL STATIC_ASSERT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACES RBRACE PRINT_TYPE PLUS_PLUS PLUS PIPES OFFSETOF NORETURN MINUS_MINUS MINUS LPAREN LONG LNAME LBRACK_LBRACK LBRACES LBRACE INT INLINE IF GOTO GENERIC FOR FLOAT EXTERN ENUM ELSE DOUBLE DO DEFAULT CONTINUE CONSTANT CONST COMPLEX CHAR CERB_MAGIC CASE BUILTIN_TYPES_COMPATIBLE_P BUILTIN_CHOOSE_EXPR BREAK BOOL BMC_ASSUME BANG AUTO ATOMIC ASSERT ASM AMPERSAND ALIGNOF ALIGNAS ]
##
## The known suffix of the stack is as follows:
## attribute_specifier_sequence general_identifier COLON
##

parsing "labeled_statement": seen "attribute_specifier_sequence general_identifier COLON", expecting "statement"

translation_unit: ALIGNAS LPAREN LPAREN LBRACE CONTINUE WHILE
##
## Ends in an error in state: 647.
##
## jump_statement -> CONTINUE . SEMICOLON [ WHILE VOLATILE VOID VA_START VA_END VA_COPY VA_ARG UNSIGNED UNION UNAME TYPEOF TYPEDEF TILDE THREAD_LOCAL SWITCH STRUCT STRING_LITERAL STATIC_ASSERT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACES RBRACE PRINT_TYPE PLUS_PLUS PLUS PIPES OFFSETOF NORETURN MINUS_MINUS MINUS LPAREN LONG LNAME LBRACK_LBRACK LBRACES LBRACE INT INLINE IF GOTO GENERIC FOR FLOAT EXTERN ENUM ELSE DOUBLE DO DEFAULT CONTINUE CONSTANT CONST COMPLEX CHAR CERB_MAGIC CASE BUILTIN_TYPES_COMPATIBLE_P BUILTIN_CHOOSE_EXPR BREAK BOOL BMC_ASSUME BANG AUTO ATOMIC ASSERT ASM AMPERSAND ALIGNOF ALIGNAS ]
##
## The known suffix of the stack is as follows:
## CONTINUE
##

parsing "jump_statement": seen "CONTINUE", expecting "SEMICOLON"

translation_unit: ALIGNAS LPAREN LPAREN LBRACE CASE STRING_LITERAL ELLIPSIS WHILE
##
## Ends in an error in state: 651.
##
## labeled_statement -> option(attribute_specifier_sequence) CASE constant_expression ELLIPSIS . constant_expression COLON statement [ WHILE VOLATILE VOID VA_START VA_END VA_COPY VA_ARG UNSIGNED UNION UNAME TYPEOF TYPEDEF TILDE THREAD_LOCAL SWITCH STRUCT STRING_LITERAL STATIC_ASSERT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACES RBRACE PRINT_TYPE PLUS_PLUS PLUS PIPES OFFSETOF NORETURN MINUS_MINUS MINUS LPAREN LONG LNAME LBRACK_LBRACK LBRACES LBRACE INT INLINE IF GOTO GENERIC FOR FLOAT EXTERN ENUM ELSE DOUBLE DO DEFAULT CONTINUE CONSTANT CONST COMPLEX CHAR CERB_MAGIC CASE BUILTIN_TYPES_COMPATIBLE_P BUILTIN_CHOOSE_EXPR BREAK BOOL BMC_ASSUME BANG AUTO ATOMIC ASSERT ASM AMPERSAND ALIGNOF ALIGNAS ]
##
## The known suffix of the stack is as follows:
## option(attribute_specifier_sequence) CASE constant_expression ELLIPSIS
##

parsing "labeled_statement": seen "option(attribute_specifier_sequence) CASE constant_expression ELLIPSIS", expecting "constant_expression COLON statement"

translation_unit: ALIGNAS LPAREN LPAREN LBRACE CASE STRING_LITERAL ELLIPSIS STRING_LITERAL COLON VOLATILE
##
## Ends in an error in state: 653.
##
## labeled_statement -> option(attribute_specifier_sequence) CASE constant_expression ELLIPSIS constant_expression COLON . statement [ WHILE VOLATILE VOID VA_START VA_END VA_COPY VA_ARG UNSIGNED UNION UNAME TYPEOF TYPEDEF TILDE THREAD_LOCAL SWITCH STRUCT STRING_LITERAL STATIC_ASSERT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACES RBRACE PRINT_TYPE PLUS_PLUS PLUS PIPES OFFSETOF NORETURN MINUS_MINUS MINUS LPAREN LONG LNAME LBRACK_LBRACK LBRACES LBRACE INT INLINE IF GOTO GENERIC FOR FLOAT EXTERN ENUM ELSE DOUBLE DO DEFAULT CONTINUE CONSTANT CONST COMPLEX CHAR CERB_MAGIC CASE BUILTIN_TYPES_COMPATIBLE_P BUILTIN_CHOOSE_EXPR BREAK BOOL BMC_ASSUME BANG AUTO ATOMIC ASSERT ASM AMPERSAND ALIGNOF ALIGNAS ]
##
## The known suffix of the stack is as follows:
## option(attribute_specifier_sequence) CASE constant_expression ELLIPSIS constant_expression COLON
##

parsing "labeled_statement": seen "option(attribute_specifier_sequence) CASE constant_expression ELLIPSIS constant_expression COLON", expecting "statement"

translation_unit: ALIGNAS LPAREN LPAREN LBRACE CASE STRING_LITERAL COLON VOLATILE
##
## Ends in an error in state: 655.
##
## labeled_statement -> option(attribute_specifier_sequence) CASE constant_expression COLON . statement [ WHILE VOLATILE VOID VA_START VA_END VA_COPY VA_ARG UNSIGNED UNION UNAME TYPEOF TYPEDEF TILDE THREAD_LOCAL SWITCH STRUCT STRING_LITERAL STATIC_ASSERT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACES RBRACE PRINT_TYPE PLUS_PLUS PLUS PIPES OFFSETOF NORETURN MINUS_MINUS MINUS LPAREN LONG LNAME LBRACK_LBRACK LBRACES LBRACE INT INLINE IF GOTO GENERIC FOR FLOAT EXTERN ENUM ELSE DOUBLE DO DEFAULT CONTINUE CONSTANT CONST COMPLEX CHAR CERB_MAGIC CASE BUILTIN_TYPES_COMPATIBLE_P BUILTIN_CHOOSE_EXPR BREAK BOOL BMC_ASSUME BANG AUTO ATOMIC ASSERT ASM AMPERSAND ALIGNOF ALIGNAS ]
##
## The known suffix of the stack is as follows:
## option(attribute_specifier_sequence) CASE constant_expression COLON
##

parsing "labeled_statement": seen "option(attribute_specifier_sequence) CASE constant_expression COLON", expecting "statement"

translation_unit: ALIGNAS LPAREN LPAREN LBRACE BREAK WHILE
##
## Ends in an error in state: 657.
##
## jump_statement -> BREAK . SEMICOLON [ WHILE VOLATILE VOID VA_START VA_END VA_COPY VA_ARG UNSIGNED UNION UNAME TYPEOF TYPEDEF TILDE THREAD_LOCAL SWITCH STRUCT STRING_LITERAL STATIC_ASSERT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACES RBRACE PRINT_TYPE PLUS_PLUS PLUS PIPES OFFSETOF NORETURN MINUS_MINUS MINUS LPAREN LONG LNAME LBRACK_LBRACK LBRACES LBRACE INT INLINE IF GOTO GENERIC FOR FLOAT EXTERN ENUM ELSE DOUBLE DO DEFAULT CONTINUE CONSTANT CONST COMPLEX CHAR CERB_MAGIC CASE BUILTIN_TYPES_COMPATIBLE_P BUILTIN_CHOOSE_EXPR BREAK BOOL BMC_ASSUME BANG AUTO ATOMIC ASSERT ASM AMPERSAND ALIGNOF ALIGNAS ]
##
## The known suffix of the stack is as follows:
## BREAK
##

parsing "jump_statement": seen "BREAK", expecting "SEMICOLON"

translation_unit: ALIGNAS LPAREN LPAREN LBRACE WHILE WHILE
##
## Ends in an error in state: 663.
##
## iteration_statement -> WHILE . LPAREN full_expression RPAREN magic_comment_list scoped(statement) [ WHILE VOLATILE VOID VA_START VA_END VA_COPY VA_ARG UNSIGNED UNION UNAME TYPEOF TYPEDEF TILDE THREAD_LOCAL SWITCH STRUCT STRING_LITERAL STATIC_ASSERT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACES RBRACE PRINT_TYPE PLUS_PLUS PLUS PIPES OFFSETOF NORETURN MINUS_MINUS MINUS LPAREN LONG LNAME LBRACK_LBRACK LBRACES LBRACE INT INLINE IF GOTO GENERIC FOR FLOAT EXTERN ENUM ELSE DOUBLE DO DEFAULT CONTINUE CONSTANT CONST COMPLEX CHAR CERB_MAGIC CASE BUILTIN_TYPES_COMPATIBLE_P BUILTIN_CHOOSE_EXPR BREAK BOOL BMC_ASSUME BANG AUTO ATOMIC ASSERT ASM AMPERSAND ALIGNOF ALIGNAS ]
##
## The known suffix of the stack is as follows:
## WHILE
##

parsing "iteration_statement": seen "WHILE", expecting "LPAREN full_expression RPAREN magic_comment_list scoped(statement)"

translation_unit: ALIGNAS LPAREN LPAREN LBRACE WHILE LPAREN WHILE
##
## Ends in an error in state: 664.
##
## iteration_statement -> WHILE LPAREN . full_expression RPAREN magic_comment_list scoped(statement) [ WHILE VOLATILE VOID VA_START VA_END VA_COPY VA_ARG UNSIGNED UNION UNAME TYPEOF TYPEDEF TILDE THREAD_LOCAL SWITCH STRUCT STRING_LITERAL STATIC_ASSERT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACES RBRACE PRINT_TYPE PLUS_PLUS PLUS PIPES OFFSETOF NORETURN MINUS_MINUS MINUS LPAREN LONG LNAME LBRACK_LBRACK LBRACES LBRACE INT INLINE IF GOTO GENERIC FOR FLOAT EXTERN ENUM ELSE DOUBLE DO DEFAULT CONTINUE CONSTANT CONST COMPLEX CHAR CERB_MAGIC CASE BUILTIN_TYPES_COMPATIBLE_P BUILTIN_CHOOSE_EXPR BREAK BOOL BMC_ASSUME BANG AUTO ATOMIC ASSERT ASM AMPERSAND ALIGNOF ALIGNAS ]
##
## The known suffix of the stack is as follows:
## WHILE LPAREN
##

parsing "iteration_statement": seen "WHILE LPAREN", expecting "full_expression RPAREN magic_comment_list scoped(statement)"

translation_unit: ALIGNAS LPAREN LPAREN LBRACE DO VOLATILE
##
## Ends in an error in state: 670.
##
## scoped(statement) -> save_context . statement [ WHILE VOLATILE VOID VA_START VA_END VA_COPY VA_ARG UNSIGNED UNION UNAME TYPEOF TYPEDEF TILDE THREAD_LOCAL SWITCH STRUCT STRING_LITERAL STATIC_ASSERT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACES RBRACE PRINT_TYPE PLUS_PLUS PLUS PIPES OFFSETOF NORETURN MINUS_MINUS MINUS LPAREN LONG LNAME LBRACK_LBRACK LBRACES LBRACE INT INLINE IF GOTO GENERIC FOR FLOAT EXTERN ENUM ELSE DOUBLE DO DEFAULT CONTINUE CONSTANT CONST COMPLEX CHAR CERB_MAGIC CASE BUILTIN_TYPES_COMPATIBLE_P BUILTIN_CHOOSE_EXPR BREAK BOOL BMC_ASSUME BANG AUTO ATOMIC ASSERT ASM AMPERSAND ALIGNOF ALIGNAS ]
##
## The known suffix of the stack is as follows:
## save_context
##

parsing "scoped(statement)": seen "save_context", expecting "statement"

translation_unit: ALIGNAS LPAREN LPAREN LBRACE SWITCH WHILE
##
## Ends in an error in state: 672.
##
## selection_statement -> SWITCH . LPAREN full_expression RPAREN scoped(statement) [ WHILE VOLATILE VOID VA_START VA_END VA_COPY VA_ARG UNSIGNED UNION UNAME TYPEOF TYPEDEF TILDE THREAD_LOCAL SWITCH STRUCT STRING_LITERAL STATIC_ASSERT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACES RBRACE PRINT_TYPE PLUS_PLUS PLUS PIPES OFFSETOF NORETURN MINUS_MINUS MINUS LPAREN LONG LNAME LBRACK_LBRACK LBRACES LBRACE INT INLINE IF GOTO GENERIC FOR FLOAT EXTERN ENUM ELSE DOUBLE DO DEFAULT CONTINUE CONSTANT CONST COMPLEX CHAR CERB_MAGIC CASE BUILTIN_TYPES_COMPATIBLE_P BUILTIN_CHOOSE_EXPR BREAK BOOL BMC_ASSUME BANG AUTO ATOMIC ASSERT ASM AMPERSAND ALIGNOF ALIGNAS ]
##
## The known suffix of the stack is as follows:
## SWITCH
##

parsing "selection_statement": seen "SWITCH", expecting "LPAREN full_expression RPAREN scoped(statement)"

translation_unit: ALIGNAS LPAREN LPAREN LBRACE SWITCH LPAREN WHILE
##
## Ends in an error in state: 673.
##
## selection_statement -> SWITCH LPAREN . full_expression RPAREN scoped(statement) [ WHILE VOLATILE VOID VA_START VA_END VA_COPY VA_ARG UNSIGNED UNION UNAME TYPEOF TYPEDEF TILDE THREAD_LOCAL SWITCH STRUCT STRING_LITERAL STATIC_ASSERT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACES RBRACE PRINT_TYPE PLUS_PLUS PLUS PIPES OFFSETOF NORETURN MINUS_MINUS MINUS LPAREN LONG LNAME LBRACK_LBRACK LBRACES LBRACE INT INLINE IF GOTO GENERIC FOR FLOAT EXTERN ENUM ELSE DOUBLE DO DEFAULT CONTINUE CONSTANT CONST COMPLEX CHAR CERB_MAGIC CASE BUILTIN_TYPES_COMPATIBLE_P BUILTIN_CHOOSE_EXPR BREAK BOOL BMC_ASSUME BANG AUTO ATOMIC ASSERT ASM AMPERSAND ALIGNOF ALIGNAS ]
##
## The known suffix of the stack is as follows:
## SWITCH LPAREN
##

parsing "selection_statement": seen "SWITCH LPAREN", expecting "full_expression RPAREN scoped(statement)"

translation_unit: ALIGNAS LPAREN LPAREN LBRACE VARIABLE
##
## Ends in an error in state: 677.
##
## compound_statement -> LBRACE . option(block_item_list) RBRACE [ WHILE VOLATILE VOID VA_START VA_END VA_COPY VA_ARG UNSIGNED UNION UNAME TYPEOF TYPEDEF TILDE THREAD_LOCAL SWITCH STRUCT STRING_LITERAL STATIC_ASSERT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RPAREN RETURN RESTRICT REGISTER RBRACES RBRACE PRINT_TYPE PLUS_PLUS PLUS PIPES OFFSETOF NORETURN MINUS_MINUS MINUS LPAREN LONG LNAME LBRACK_LBRACK LBRACES LBRACE INT INLINE IF GOTO GENERIC FOR FLOAT EXTERN EOF ENUM ELSE DOUBLE DO DEFAULT CONTINUE CONSTANT CONST COMPLEX CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE CHAR CERB_MAGIC CASE BUILTIN_TYPES_COMPATIBLE_P BUILTIN_CHOOSE_EXPR BREAK BOOL BMC_ASSUME BANG AUTO ATOMIC ASSERT ASM AMPERSAND ALIGNOF ALIGNAS ]
##
## The known suffix of the stack is as follows:
## LBRACE
##

parsing "compound_statement": seen "LBRACE", expecting "option(block_item_list) RBRACE"

translation_unit: BOOL TYPEDEF LNAME TYPE COMMA WHILE
##
## Ends in an error in state: 693.
##
## init_declarator_list(declarator_typedefname) -> init_declarator_list(declarator_typedefname) COMMA . init_declarator(declarator_typedefname) [ SEMICOLON COMMA ]
##
## The known suffix of the stack is as follows:
## init_declarator_list(declarator_typedefname) COMMA
##

parsing "init_declarator_list(declarator_typedefname)": seen "init_declarator_list(declarator_typedefname) COMMA", expecting "init_declarator(declarator_typedefname)"

translation_unit: BOOL TYPEDEF LNAME TYPE EQ WHILE
##
## Ends in an error in state: 696.
##
## init_declarator(declarator_typedefname) -> declarator_typedefname EQ . initializer_ [ SEMICOLON COMMA ]
##
## The known suffix of the stack is as follows:
## declarator_typedefname EQ
##

parsing "init_declarator(declarator_typedefname)": seen "declarator_typedefname EQ", expecting "initializer_"

translation_unit: BOOL LNAME TYPE ASM WHILE
##
## Ends in an error in state: 698.
##
## asm_register -> ASM . LPAREN string_literal RPAREN [ SEMICOLON EQ COMMA ]
##
## The known suffix of the stack is as follows:
## ASM
##

parsing "asm_register": seen "ASM", expecting "LPAREN string_literal RPAREN"

translation_unit: BOOL LNAME TYPE ASM LPAREN WHILE
##
## Ends in an error in state: 699.
##
## asm_register -> ASM LPAREN . string_literal RPAREN [ SEMICOLON EQ COMMA ]
##
## The known suffix of the stack is as follows:
## ASM LPAREN
##

parsing "asm_register": seen "ASM LPAREN", expecting "string_literal RPAREN"

translation_unit: BOOL TYPEDEF LNAME TYPE ASM LPAREN STRING_LITERAL RPAREN EQ WHILE
##
## Ends in an error in state: 703.
##
## init_declarator(declarator_typedefname) -> declarator_typedefname asm_register EQ . initializer_ [ SEMICOLON COMMA ]
##
## The known suffix of the stack is as follows:
## declarator_typedefname asm_register EQ
##

parsing "init_declarator(declarator_typedefname)": seen "declarator_typedefname asm_register EQ", expecting "initializer_"

translation_unit: BOOL LNAME TYPE COMMA WHILE
##
## Ends in an error in state: 711.
##
## init_declarator_list(declarator_varname) -> init_declarator_list(declarator_varname) COMMA . init_declarator(declarator_varname) [ SEMICOLON COMMA ]
##
## The known suffix of the stack is as follows:
## init_declarator_list(declarator_varname) COMMA
##

parsing "init_declarator_list(declarator_varname)": seen "init_declarator_list(declarator_varname) COMMA", expecting "init_declarator(declarator_varname)"

translation_unit: BOOL LNAME TYPE EQ WHILE
##
## Ends in an error in state: 714.
##
## init_declarator(declarator_varname) -> declarator_varname EQ . initializer_ [ SEMICOLON COMMA ]
##
## The known suffix of the stack is as follows:
## declarator_varname EQ
##

parsing "init_declarator(declarator_varname)": seen "declarator_varname EQ", expecting "initializer_"

translation_unit: BOOL LNAME TYPE ASM LPAREN STRING_LITERAL RPAREN EQ WHILE
##
## Ends in an error in state: 717.
##
## init_declarator(declarator_varname) -> declarator_varname asm_register EQ . initializer_ [ SEMICOLON COMMA ]
##
## The known suffix of the stack is as follows:
## declarator_varname asm_register EQ
##

parsing "init_declarator(declarator_varname)": seen "declarator_varname asm_register EQ", expecting "initializer_"

translation_unit: BOOL TYPEDEF WHILE
##
## Ends in an error in state: 724.
##
## list_eq1(TYPEDEF,declaration_specifier) -> TYPEDEF . list(declaration_specifier) [ UNAME STAR SEMICOLON LPAREN LNAME ]
##
## The known suffix of the stack is as follows:
## TYPEDEF
##

parsing "list_eq1(TYPEDEF,declaration_specifier)": seen "TYPEDEF", expecting "list(declaration_specifier)"

translation_unit: ALIGNAS LPAREN LPAREN LBRACE FOR LPAREN SEMICOLON WHILE
##
## Ends in an error in state: 757.
##
## iteration_statement -> FOR LPAREN option(full_expression) SEMICOLON . option(full_expression) SEMICOLON option(full_expression) RPAREN magic_comment_list scoped(statement) [ WHILE VOLATILE VOID VA_START VA_END VA_COPY VA_ARG UNSIGNED UNION UNAME TYPEOF TYPEDEF TILDE THREAD_LOCAL SWITCH STRUCT STRING_LITERAL STATIC_ASSERT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACES RBRACE PRINT_TYPE PLUS_PLUS PLUS PIPES OFFSETOF NORETURN MINUS_MINUS MINUS LPAREN LONG LNAME LBRACK_LBRACK LBRACES LBRACE INT INLINE IF GOTO GENERIC FOR FLOAT EXTERN ENUM ELSE DOUBLE DO DEFAULT CONTINUE CONSTANT CONST COMPLEX CHAR CERB_MAGIC CASE BUILTIN_TYPES_COMPATIBLE_P BUILTIN_CHOOSE_EXPR BREAK BOOL BMC_ASSUME BANG AUTO ATOMIC ASSERT ASM AMPERSAND ALIGNOF ALIGNAS ]
##
## The known suffix of the stack is as follows:
## FOR LPAREN option(full_expression) SEMICOLON
##

parsing "iteration_statement": seen "FOR LPAREN option(full_expression) SEMICOLON", expecting "option(full_expression) SEMICOLON option(full_expression) RPAREN magic_comment_list scoped(statement)"

translation_unit: ALIGNAS LPAREN LPAREN LBRACE FOR LPAREN SEMICOLON SEMICOLON WHILE
##
## Ends in an error in state: 759.
##
## iteration_statement -> FOR LPAREN option(full_expression) SEMICOLON option(full_expression) SEMICOLON . option(full_expression) RPAREN magic_comment_list scoped(statement) [ WHILE VOLATILE VOID VA_START VA_END VA_COPY VA_ARG UNSIGNED UNION UNAME TYPEOF TYPEDEF TILDE THREAD_LOCAL SWITCH STRUCT STRING_LITERAL STATIC_ASSERT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACES RBRACE PRINT_TYPE PLUS_PLUS PLUS PIPES OFFSETOF NORETURN MINUS_MINUS MINUS LPAREN LONG LNAME LBRACK_LBRACK LBRACES LBRACE INT INLINE IF GOTO GENERIC FOR FLOAT EXTERN ENUM ELSE DOUBLE DO DEFAULT CONTINUE CONSTANT CONST COMPLEX CHAR CERB_MAGIC CASE BUILTIN_TYPES_COMPATIBLE_P BUILTIN_CHOOSE_EXPR BREAK BOOL BMC_ASSUME BANG AUTO ATOMIC ASSERT ASM AMPERSAND ALIGNOF ALIGNAS ]
##
## The known suffix of the stack is as follows:
## FOR LPAREN option(full_expression) SEMICOLON option(full_expression) SEMICOLON
##

parsing "iteration_statement": seen "FOR LPAREN option(full_expression) SEMICOLON option(full_expression) SEMICOLON", expecting "option(full_expression) RPAREN magic_comment_list scoped(statement)"

translation_unit: ALIGNAS LPAREN LPAREN LBRACE FOR LPAREN BOOL SEMICOLON WHILE
##
## Ends in an error in state: 764.
##
## iteration_statement -> FOR LPAREN declaration . option(full_expression) SEMICOLON option(full_expression) RPAREN scoped(statement) [ WHILE VOLATILE VOID VA_START VA_END VA_COPY VA_ARG UNSIGNED UNION UNAME TYPEOF TYPEDEF TILDE THREAD_LOCAL SWITCH STRUCT STRING_LITERAL STATIC_ASSERT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACES RBRACE PRINT_TYPE PLUS_PLUS PLUS PIPES OFFSETOF NORETURN MINUS_MINUS MINUS LPAREN LONG LNAME LBRACK_LBRACK LBRACES LBRACE INT INLINE IF GOTO GENERIC FOR FLOAT EXTERN ENUM ELSE DOUBLE DO DEFAULT CONTINUE CONSTANT CONST COMPLEX CHAR CERB_MAGIC CASE BUILTIN_TYPES_COMPATIBLE_P BUILTIN_CHOOSE_EXPR BREAK BOOL BMC_ASSUME BANG AUTO ATOMIC ASSERT ASM AMPERSAND ALIGNOF ALIGNAS ]
##
## The known suffix of the stack is as follows:
## FOR LPAREN declaration
##

parsing "iteration_statement": seen "FOR LPAREN declaration", expecting "option(full_expression) SEMICOLON option(full_expression) RPAREN scoped(statement)"

translation_unit: ALIGNAS LPAREN LPAREN LBRACE FOR LPAREN BOOL SEMICOLON SEMICOLON WHILE
##
## Ends in an error in state: 766.
##
## iteration_statement -> FOR LPAREN declaration option(full_expression) SEMICOLON . option(full_expression) RPAREN scoped(statement) [ WHILE VOLATILE VOID VA_START VA_END VA_COPY VA_ARG UNSIGNED UNION UNAME TYPEOF TYPEDEF TILDE THREAD_LOCAL SWITCH STRUCT STRING_LITERAL STATIC_ASSERT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACES RBRACE PRINT_TYPE PLUS_PLUS PLUS PIPES OFFSETOF NORETURN MINUS_MINUS MINUS LPAREN LONG LNAME LBRACK_LBRACK LBRACES LBRACE INT INLINE IF GOTO GENERIC FOR FLOAT EXTERN ENUM ELSE DOUBLE DO DEFAULT CONTINUE CONSTANT CONST COMPLEX CHAR CERB_MAGIC CASE BUILTIN_TYPES_COMPATIBLE_P BUILTIN_CHOOSE_EXPR BREAK BOOL BMC_ASSUME BANG AUTO ATOMIC ASSERT ASM AMPERSAND ALIGNOF ALIGNAS ]
##
## The known suffix of the stack is as follows:
## FOR LPAREN declaration option(full_expression) SEMICOLON
##

parsing "iteration_statement": seen "FOR LPAREN declaration option(full_expression) SEMICOLON", expecting "option(full_expression) RPAREN scoped(statement)"

translation_unit: ALIGNAS LPAREN LPAREN LBRACE DO SEMICOLON VOLATILE
##
## Ends in an error in state: 772.
##
## iteration_statement -> DO scoped(statement) . WHILE LPAREN full_expression RPAREN SEMICOLON [ WHILE VOLATILE VOID VA_START VA_END VA_COPY VA_ARG UNSIGNED UNION UNAME TYPEOF TYPEDEF TILDE THREAD_LOCAL SWITCH STRUCT STRING_LITERAL STATIC_ASSERT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACES RBRACE PRINT_TYPE PLUS_PLUS PLUS PIPES OFFSETOF NORETURN MINUS_MINUS MINUS LPAREN LONG LNAME LBRACK_LBRACK LBRACES LBRACE INT INLINE IF GOTO GENERIC FOR FLOAT EXTERN ENUM ELSE DOUBLE DO DEFAULT CONTINUE CONSTANT CONST COMPLEX CHAR CERB_MAGIC CASE BUILTIN_TYPES_COMPATIBLE_P BUILTIN_CHOOSE_EXPR BREAK BOOL BMC_ASSUME BANG AUTO ATOMIC ASSERT ASM AMPERSAND ALIGNOF ALIGNAS ]
##
## The known suffix of the stack is as follows:
## DO scoped(statement)
##

parsing "iteration_statement": seen "DO scoped(statement)", expecting "WHILE LPAREN full_expression RPAREN SEMICOLON"

translation_unit: ALIGNAS LPAREN LPAREN LBRACE DO SEMICOLON WHILE WHILE
##
## Ends in an error in state: 773.
##
## iteration_statement -> DO scoped(statement) WHILE . LPAREN full_expression RPAREN SEMICOLON [ WHILE VOLATILE VOID VA_START VA_END VA_COPY VA_ARG UNSIGNED UNION UNAME TYPEOF TYPEDEF TILDE THREAD_LOCAL SWITCH STRUCT STRING_LITERAL STATIC_ASSERT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACES RBRACE PRINT_TYPE PLUS_PLUS PLUS PIPES OFFSETOF NORETURN MINUS_MINUS MINUS LPAREN LONG LNAME LBRACK_LBRACK LBRACES LBRACE INT INLINE IF GOTO GENERIC FOR FLOAT EXTERN ENUM ELSE DOUBLE DO DEFAULT CONTINUE CONSTANT CONST COMPLEX CHAR CERB_MAGIC CASE BUILTIN_TYPES_COMPATIBLE_P BUILTIN_CHOOSE_EXPR BREAK BOOL BMC_ASSUME BANG AUTO ATOMIC ASSERT ASM AMPERSAND ALIGNOF ALIGNAS ]
##
## The known suffix of the stack is as follows:
## DO scoped(statement) WHILE
##

parsing "iteration_statement": seen "DO scoped(statement) WHILE", expecting "LPAREN full_expression RPAREN SEMICOLON"

translation_unit: ALIGNAS LPAREN LPAREN LBRACE DO SEMICOLON WHILE LPAREN WHILE
##
## Ends in an error in state: 774.
##
## iteration_statement -> DO scoped(statement) WHILE LPAREN . full_expression RPAREN SEMICOLON [ WHILE VOLATILE VOID VA_START VA_END VA_COPY VA_ARG UNSIGNED UNION UNAME TYPEOF TYPEDEF TILDE THREAD_LOCAL SWITCH STRUCT STRING_LITERAL STATIC_ASSERT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACES RBRACE PRINT_TYPE PLUS_PLUS PLUS PIPES OFFSETOF NORETURN MINUS_MINUS MINUS LPAREN LONG LNAME LBRACK_LBRACK LBRACES LBRACE INT INLINE IF GOTO GENERIC FOR FLOAT EXTERN ENUM ELSE DOUBLE DO DEFAULT CONTINUE CONSTANT CONST COMPLEX CHAR CERB_MAGIC CASE BUILTIN_TYPES_COMPATIBLE_P BUILTIN_CHOOSE_EXPR BREAK BOOL BMC_ASSUME BANG AUTO ATOMIC ASSERT ASM AMPERSAND ALIGNOF ALIGNAS ]
##
## The known suffix of the stack is as follows:
## DO scoped(statement) WHILE LPAREN
##

parsing "iteration_statement": seen "DO scoped(statement) WHILE LPAREN", expecting "full_expression RPAREN SEMICOLON"

translation_unit: ALIGNAS LPAREN LPAREN LBRACE DO SEMICOLON WHILE LPAREN STRING_LITERAL RPAREN WHILE
##
## Ends in an error in state: 776.
##
## iteration_statement -> DO scoped(statement) WHILE LPAREN full_expression RPAREN . SEMICOLON [ WHILE VOLATILE VOID VA_START VA_END VA_COPY VA_ARG UNSIGNED UNION UNAME TYPEOF TYPEDEF TILDE THREAD_LOCAL SWITCH STRUCT STRING_LITERAL STATIC_ASSERT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACES RBRACE PRINT_TYPE PLUS_PLUS PLUS PIPES OFFSETOF NORETURN MINUS_MINUS MINUS LPAREN LONG LNAME LBRACK_LBRACK LBRACES LBRACE INT INLINE IF GOTO GENERIC FOR FLOAT EXTERN ENUM ELSE DOUBLE DO DEFAULT CONTINUE CONSTANT CONST COMPLEX CHAR CERB_MAGIC CASE BUILTIN_TYPES_COMPATIBLE_P BUILTIN_CHOOSE_EXPR BREAK BOOL BMC_ASSUME BANG AUTO ATOMIC ASSERT ASM AMPERSAND ALIGNOF ALIGNAS ]
##
## The known suffix of the stack is as follows:
## DO scoped(statement) WHILE LPAREN full_expression RPAREN
##

parsing "iteration_statement": seen "DO scoped(statement) WHILE LPAREN full_expression RPAREN", expecting "SEMICOLON"

translation_unit: ALIGNAS LPAREN MINUS_MINUS LPAREN BOOL RPAREN WHILE
##
## Ends in an error in state: 787.
##
## postfix_expression -> LPAREN type_name RPAREN . LBRACE initializer_list option(COMMA) RBRACE [ STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_GT MINUS_EQ MINUS LT_LT_EQ LT_LT LT_EQ LT LPAREN LBRACK GT_GT_EQ GT_GT GT_EQ GT EQ_EQ EQ ELLIPSIS DOT COMMA COLON CARET_EQ CARET BANG_EQ AMPERSAND_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## LPAREN type_name RPAREN
##

parsing "postfix_expression": seen "LPAREN type_name RPAREN", expecting "LBRACE initializer_list option(COMMA) RBRACE"

translation_unit: ENUM LBRACE LNAME TYPE LBRACK_LBRACK ALIGNAS RBRACK RBRACK EQ WHILE
##
## Ends in an error in state: 791.
##
## enumerator -> enumeration_constant attribute_specifier_sequence EQ . constant_expression [ RBRACE COMMA ]
##
## The known suffix of the stack is as follows:
## enumeration_constant attribute_specifier_sequence EQ
##

parsing "enumerator": seen "enumeration_constant attribute_specifier_sequence EQ", expecting "constant_expression"

translation_unit: ENUM LBRACK_LBRACK ALIGNAS RBRACK RBRACK LBRACE WHILE
##
## Ends in an error in state: 799.
##
## enum_specifier -> ENUM attribute_specifier_sequence option(general_identifier) LBRACE . enumerator_list option(COMMA) RBRACE [ VOLATILE UNAME TYPEDEF THREAD_LOCAL STATIC STAR SEMICOLON RPAREN RESTRICT REGISTER NORETURN LPAREN LNAME LBRACK_LBRACK LBRACK INLINE GT EXTERN CONST COMMA COLON AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## ENUM attribute_specifier_sequence option(general_identifier) LBRACE
##

parsing "enum_specifier": seen "ENUM attribute_specifier_sequence option(general_identifier) LBRACE", expecting "enumerator_list option(COMMA) RBRACE"

translation_unit: ALIGNAS LPAREN OFFSETOF LPAREN BOOL COMMA WHILE
##
## Ends in an error in state: 805.
##
## postfix_expression -> OFFSETOF LPAREN type_name COMMA . general_identifier RPAREN [ STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_GT MINUS_EQ MINUS LT_LT_EQ LT_LT LT_EQ LT LPAREN LBRACK GT_GT_EQ GT_GT GT_EQ GT EQ_EQ EQ ELLIPSIS DOT COMMA COLON CARET_EQ CARET BANG_EQ AMPERSAND_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## OFFSETOF LPAREN type_name COMMA
##

parsing "postfix_expression": seen "OFFSETOF LPAREN type_name COMMA", expecting "general_identifier RPAREN"

translation_unit: ALIGNAS LPAREN OFFSETOF LPAREN BOOL COMMA LNAME TYPE WHILE
##
## Ends in an error in state: 806.
##
## postfix_expression -> OFFSETOF LPAREN type_name COMMA general_identifier . RPAREN [ STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_GT MINUS_EQ MINUS LT_LT_EQ LT_LT LT_EQ LT LPAREN LBRACK GT_GT_EQ GT_GT GT_EQ GT EQ_EQ EQ ELLIPSIS DOT COMMA COLON CARET_EQ CARET BANG_EQ AMPERSAND_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## OFFSETOF LPAREN type_name COMMA general_identifier
##

parsing "postfix_expression": seen "OFFSETOF LPAREN type_name COMMA general_identifier", expecting "RPAREN"

translation_unit: ALIGNAS LPAREN VA_ARG LPAREN STRING_LITERAL COMMA WHILE
##
## Ends in an error in state: 816.
##
## postfix_expression -> VA_ARG LPAREN assignment_expression COMMA . type_name RPAREN [ STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_GT MINUS_EQ MINUS LT_LT_EQ LT_LT LT_EQ LT LPAREN LBRACK GT_GT_EQ GT_GT GT_EQ GT EQ_EQ EQ ELLIPSIS DOT COMMA COLON CARET_EQ CARET BANG_EQ AMPERSAND_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## VA_ARG LPAREN assignment_expression COMMA
##

parsing "postfix_expression": seen "VA_ARG LPAREN assignment_expression COMMA", expecting "type_name RPAREN"

translation_unit: ALIGNAS LPAREN VA_COPY LPAREN STRING_LITERAL COMMA WHILE
##
## Ends in an error in state: 820.
##
## postfix_expression -> VA_COPY LPAREN assignment_expression COMMA . assignment_expression RPAREN [ STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_GT MINUS_EQ MINUS LT_LT_EQ LT_LT LT_EQ LT LPAREN LBRACK GT_GT_EQ GT_GT GT_EQ GT EQ_EQ EQ ELLIPSIS DOT COMMA COLON CARET_EQ CARET BANG_EQ AMPERSAND_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## VA_COPY LPAREN assignment_expression COMMA
##

parsing "postfix_expression": seen "VA_COPY LPAREN assignment_expression COMMA", expecting "assignment_expression RPAREN"

translation_unit: ALIGNAS LPAREN VA_START LPAREN STRING_LITERAL COMMA WHILE
##
## Ends in an error in state: 826.
##
## postfix_expression -> VA_START LPAREN assignment_expression COMMA . general_identifier RPAREN [ STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_GT MINUS_EQ MINUS LT_LT_EQ LT_LT LT_EQ LT LPAREN LBRACK GT_GT_EQ GT_GT GT_EQ GT EQ_EQ EQ ELLIPSIS DOT COMMA COLON CARET_EQ CARET BANG_EQ AMPERSAND_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## VA_START LPAREN assignment_expression COMMA
##

parsing "postfix_expression": seen "VA_START LPAREN assignment_expression COMMA", expecting "general_identifier RPAREN"

translation_unit: ALIGNAS LPAREN VA_START LPAREN STRING_LITERAL COMMA LNAME TYPE WHILE
##
## Ends in an error in state: 827.
##
## postfix_expression -> VA_START LPAREN assignment_expression COMMA general_identifier . RPAREN [ STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_GT MINUS_EQ MINUS LT_LT_EQ LT_LT LT_EQ LT LPAREN LBRACK GT_GT_EQ GT_GT GT_EQ GT EQ_EQ EQ ELLIPSIS DOT COMMA COLON CARET_EQ CARET BANG_EQ AMPERSAND_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## VA_START LPAREN assignment_expression COMMA general_identifier
##

parsing "postfix_expression": seen "VA_START LPAREN assignment_expression COMMA general_identifier", expecting "RPAREN"

cn_statement: CN_EXTRACT CN_BLOCK WHILE
##
## Ends in an error in state: 836.
##
## pred -> CN_BLOCK . LT ctype GT [ LPAREN COMMA ]
##
## The known suffix of the stack is as follows:
## CN_BLOCK
##

parsing "pred": seen "CN_BLOCK", expecting "LT ctype GT"

cn_statement: CN_EXTRACT CN_BLOCK LT WHILE
##
## Ends in an error in state: 837.
##
## pred -> CN_BLOCK LT . ctype GT [ LPAREN COMMA ]
##
## The known suffix of the stack is as follows:
## CN_BLOCK LT
##

parsing "pred": seen "CN_BLOCK LT", expecting "ctype GT"

cn_statement: CN_UNPACK CN_OWNED LPAREN WHILE
##
## Ends in an error in state: 841.
##
## cn_statement -> CN_UNPACK pred LPAREN . loption(separated_nonempty_list(COMMA,expr)) RPAREN SEMICOLON [ # ]
##
## The known suffix of the stack is as follows:
## CN_UNPACK pred LPAREN
##

parsing "cn_statement": seen "CN_UNPACK pred LPAREN", expecting "loption(separated_nonempty_list(COMMA,expr)) RPAREN SEMICOLON"

cn_statement: CN_EXTRACT UNAME VARIABLE LPAREN WHILE
##
## Ends in an error in state: 844.
##
## prim_expr -> UNAME VARIABLE LPAREN . loption(separated_nonempty_list(COMMA,expr)) RPAREN [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS_GT MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE DOT CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
##
## The known suffix of the stack is as follows:
## UNAME VARIABLE LPAREN
##

parsing "prim_expr": seen "UNAME VARIABLE LPAREN", expecting "loption(separated_nonempty_list(COMMA,expr)) RPAREN"

cn_statement: CN_EXTRACT STAR WHILE
##
## Ends in an error in state: 845.
##
## unary_expr -> STAR . unary_expr [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
##
## The known suffix of the stack is as follows:
## STAR
##

parsing "unary_expr": seen "STAR", expecting "unary_expr"

cn_statement: CN_EXTRACT SIZEOF WHILE
##
## Ends in an error in state: 846.
##
## unary_expr -> SIZEOF . LT ctype GT [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
##
## The known suffix of the stack is as follows:
## SIZEOF
##

parsing "unary_expr": seen "SIZEOF", expecting "LT ctype GT"

cn_statement: CN_EXTRACT SIZEOF LT WHILE
##
## Ends in an error in state: 847.
##
## unary_expr -> SIZEOF LT . ctype GT [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
##
## The known suffix of the stack is as follows:
## SIZEOF LT
##

parsing "unary_expr": seen "SIZEOF LT", expecting "ctype GT"

cn_statement: CN_EXTRACT OFFSETOF LPAREN UNAME VARIABLE COMMA UNAME VARIABLE WHILE
##
## Ends in an error in state: 857.
##
## unary_expr -> OFFSETOF LPAREN UNAME VARIABLE COMMA UNAME VARIABLE . RPAREN [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
##
## The known suffix of the stack is as follows:
## OFFSETOF LPAREN UNAME VARIABLE COMMA UNAME VARIABLE
##

parsing "unary_expr": seen "OFFSETOF LPAREN UNAME VARIABLE COMMA UNAME VARIABLE", expecting "RPAREN"

cn_statement: CN_EXTRACT OFFSETOF LPAREN UNAME VARIABLE COMMA UNAME TYPE WHILE
##
## Ends in an error in state: 859.
##
## unary_expr -> OFFSETOF LPAREN UNAME VARIABLE COMMA UNAME TYPE . RPAREN [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
##
## The known suffix of the stack is as follows:
## OFFSETOF LPAREN UNAME VARIABLE COMMA UNAME TYPE
##

parsing "unary_expr": seen "OFFSETOF LPAREN UNAME VARIABLE COMMA UNAME TYPE", expecting "RPAREN"

cn_statement: CN_EXTRACT OFFSETOF LPAREN UNAME VARIABLE COMMA LNAME VARIABLE WHILE
##
## Ends in an error in state: 862.
##
## unary_expr -> OFFSETOF LPAREN UNAME VARIABLE COMMA LNAME VARIABLE . RPAREN [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
##
## The known suffix of the stack is as follows:
## OFFSETOF LPAREN UNAME VARIABLE COMMA LNAME VARIABLE
##

parsing "unary_expr": seen "OFFSETOF LPAREN UNAME VARIABLE COMMA LNAME VARIABLE", expecting "RPAREN"

cn_statement: CN_EXTRACT OFFSETOF LPAREN UNAME VARIABLE COMMA LNAME TYPE WHILE
##
## Ends in an error in state: 864.
##
## unary_expr -> OFFSETOF LPAREN UNAME VARIABLE COMMA LNAME TYPE . RPAREN [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
##
## The known suffix of the stack is as follows:
## OFFSETOF LPAREN UNAME VARIABLE COMMA LNAME TYPE
##

parsing "unary_expr": seen "OFFSETOF LPAREN UNAME VARIABLE COMMA LNAME TYPE", expecting "RPAREN"

cn_statement: CN_EXTRACT OFFSETOF LPAREN UNAME TYPE COMMA UNAME VARIABLE WHILE
##
## Ends in an error in state: 869.
##
## unary_expr -> OFFSETOF LPAREN UNAME TYPE COMMA UNAME VARIABLE . RPAREN [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
##
## The known suffix of the stack is as follows:
## OFFSETOF LPAREN UNAME TYPE COMMA UNAME VARIABLE
##

parsing "unary_expr": seen "OFFSETOF LPAREN UNAME TYPE COMMA UNAME VARIABLE", expecting "RPAREN"

cn_statement: CN_EXTRACT OFFSETOF LPAREN UNAME TYPE COMMA UNAME TYPE WHILE
##
## Ends in an error in state: 871.
##
## unary_expr -> OFFSETOF LPAREN UNAME TYPE COMMA UNAME TYPE . RPAREN [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
##
## The known suffix of the stack is as follows:
## OFFSETOF LPAREN UNAME TYPE COMMA UNAME TYPE
##

parsing "unary_expr": seen "OFFSETOF LPAREN UNAME TYPE COMMA UNAME TYPE", expecting "RPAREN"

cn_statement: CN_EXTRACT OFFSETOF LPAREN UNAME TYPE COMMA LNAME VARIABLE WHILE
##
## Ends in an error in state: 874.
##
## unary_expr -> OFFSETOF LPAREN UNAME TYPE COMMA LNAME VARIABLE . RPAREN [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
##
## The known suffix of the stack is as follows:
## OFFSETOF LPAREN UNAME TYPE COMMA LNAME VARIABLE
##

parsing "unary_expr": seen "OFFSETOF LPAREN UNAME TYPE COMMA LNAME VARIABLE", expecting "RPAREN"

cn_statement: CN_EXTRACT OFFSETOF LPAREN UNAME TYPE COMMA LNAME TYPE WHILE
##
## Ends in an error in state: 876.
##
## unary_expr -> OFFSETOF LPAREN UNAME TYPE COMMA LNAME TYPE . RPAREN [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
##
## The known suffix of the stack is as follows:
## OFFSETOF LPAREN UNAME TYPE COMMA LNAME TYPE
##

parsing "unary_expr": seen "OFFSETOF LPAREN UNAME TYPE COMMA LNAME TYPE", expecting "RPAREN"

cn_statement: CN_EXTRACT OFFSETOF LPAREN LNAME VARIABLE COMMA UNAME VARIABLE WHILE
##
## Ends in an error in state: 882.
##
## unary_expr -> OFFSETOF LPAREN LNAME VARIABLE COMMA UNAME VARIABLE . RPAREN [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
##
## The known suffix of the stack is as follows:
## OFFSETOF LPAREN LNAME VARIABLE COMMA UNAME VARIABLE
##

parsing "unary_expr": seen "OFFSETOF LPAREN LNAME VARIABLE COMMA UNAME VARIABLE", expecting "RPAREN"

cn_statement: CN_EXTRACT OFFSETOF LPAREN LNAME VARIABLE COMMA UNAME TYPE WHILE
##
## Ends in an error in state: 884.
##
## unary_expr -> OFFSETOF LPAREN LNAME VARIABLE COMMA UNAME TYPE . RPAREN [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
##
## The known suffix of the stack is as follows:
## OFFSETOF LPAREN LNAME VARIABLE COMMA UNAME TYPE
##

parsing "unary_expr": seen "OFFSETOF LPAREN LNAME VARIABLE COMMA UNAME TYPE", expecting "RPAREN"

cn_statement: CN_EXTRACT OFFSETOF LPAREN LNAME VARIABLE COMMA LNAME VARIABLE WHILE
##
## Ends in an error in state: 887.
##
## unary_expr -> OFFSETOF LPAREN LNAME VARIABLE COMMA LNAME VARIABLE . RPAREN [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
##
## The known suffix of the stack is as follows:
## OFFSETOF LPAREN LNAME VARIABLE COMMA LNAME VARIABLE
##

parsing "unary_expr": seen "OFFSETOF LPAREN LNAME VARIABLE COMMA LNAME VARIABLE", expecting "RPAREN"

cn_statement: CN_EXTRACT OFFSETOF LPAREN LNAME VARIABLE COMMA LNAME TYPE WHILE
##
## Ends in an error in state: 889.
##
## unary_expr -> OFFSETOF LPAREN LNAME VARIABLE COMMA LNAME TYPE . RPAREN [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
##
## The known suffix of the stack is as follows:
## OFFSETOF LPAREN LNAME VARIABLE COMMA LNAME TYPE
##

parsing "unary_expr": seen "OFFSETOF LPAREN LNAME VARIABLE COMMA LNAME TYPE", expecting "RPAREN"

cn_statement: CN_EXTRACT OFFSETOF LPAREN LNAME TYPE COMMA UNAME VARIABLE WHILE
##
## Ends in an error in state: 894.
##
## unary_expr -> OFFSETOF LPAREN LNAME TYPE COMMA UNAME VARIABLE . RPAREN [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
##
## The known suffix of the stack is as follows:
## OFFSETOF LPAREN LNAME TYPE COMMA UNAME VARIABLE
##

parsing "unary_expr": seen "OFFSETOF LPAREN LNAME TYPE COMMA UNAME VARIABLE", expecting "RPAREN"

cn_statement: CN_EXTRACT OFFSETOF LPAREN LNAME TYPE COMMA UNAME TYPE WHILE
##
## Ends in an error in state: 896.
##
## unary_expr -> OFFSETOF LPAREN LNAME TYPE COMMA UNAME TYPE . RPAREN [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
##
## The known suffix of the stack is as follows:
## OFFSETOF LPAREN LNAME TYPE COMMA UNAME TYPE
##

parsing "unary_expr": seen "OFFSETOF LPAREN LNAME TYPE COMMA UNAME TYPE", expecting "RPAREN"

cn_statement: CN_EXTRACT OFFSETOF LPAREN LNAME TYPE COMMA LNAME VARIABLE WHILE
##
## Ends in an error in state: 899.
##
## unary_expr -> OFFSETOF LPAREN LNAME TYPE COMMA LNAME VARIABLE . RPAREN [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
##
## The known suffix of the stack is as follows:
## OFFSETOF LPAREN LNAME TYPE COMMA LNAME VARIABLE
##

parsing "unary_expr": seen "OFFSETOF LPAREN LNAME TYPE COMMA LNAME VARIABLE", expecting "RPAREN"

cn_statement: CN_EXTRACT OFFSETOF LPAREN LNAME TYPE COMMA LNAME TYPE WHILE
##
## Ends in an error in state: 901.
##
## unary_expr -> OFFSETOF LPAREN LNAME TYPE COMMA LNAME TYPE . RPAREN [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
##
## The known suffix of the stack is as follows:
## OFFSETOF LPAREN LNAME TYPE COMMA LNAME TYPE
##

parsing "unary_expr": seen "OFFSETOF LPAREN LNAME TYPE COMMA LNAME TYPE", expecting "RPAREN"

cn_statement: CN_EXTRACT LNAME VARIABLE LPAREN WHILE
##
## Ends in an error in state: 914.
##
## prim_expr -> LNAME VARIABLE LPAREN . loption(separated_nonempty_list(COMMA,expr)) RPAREN [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS_GT MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE DOT CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
##
## The known suffix of the stack is as follows:
## LNAME VARIABLE LPAREN
##

parsing "prim_expr": seen "LNAME VARIABLE LPAREN", expecting "loption(separated_nonempty_list(COMMA,expr)) RPAREN"

cn_statement: CN_EXTRACT LBRACK WHILE
##
## Ends in an error in state: 915.
##
## list_expr -> LBRACK . separated_nonempty_list(COMMA,rel_expr) RBRACK [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## LBRACK
##

parsing "list_expr": seen "LBRACK", expecting "separated_nonempty_list(COMMA,rel_expr) RBRACK"

cn_statement: CN_EXTRACT LNAME TYPE LBRACE WHILE
##
## Ends in an error in state: 919.
##
## cons_args -> LBRACE . loption(separated_nonempty_list(COMMA,member_def)) RBRACE [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS_GT MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EQ EOF ENUM DOUBLE DOT CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
##
## The known suffix of the stack is as follows:
## LBRACE
##

parsing "cons_args": seen "LBRACE", expecting "loption(separated_nonempty_list(COMMA,member_def)) RBRACE"

cn_statement: CN_EXTRACT LNAME TYPE LBRACE UNAME VARIABLE WHILE
##
## Ends in an error in state: 921.
##
## member_def -> UNAME VARIABLE . COLON expr [ RBRACE COMMA ]
##
## The known suffix of the stack is as follows:
## UNAME VARIABLE
##

parsing "member_def": seen "UNAME VARIABLE", expecting "COLON expr"

cn_statement: CN_EXTRACT LBRACE UNAME VARIABLE COLON WHILE
##
## Ends in an error in state: 922.
##
## member_def -> UNAME VARIABLE COLON . expr [ RBRACE COMMA ]
##
## The known suffix of the stack is as follows:
## UNAME VARIABLE COLON
##

parsing "member_def": seen "UNAME VARIABLE COLON", expecting "expr"

cn_statement: CN_EXTRACT IF WHILE
##
## Ends in an error in state: 923.
##
## expr_without_let -> IF . LPAREN expr RPAREN LBRACE expr RBRACE ELSE LBRACE expr RBRACE [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX COMMA CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## IF
##

parsing "expr_without_let": seen "IF", expecting "LPAREN expr RPAREN LBRACE expr RBRACE ELSE LBRACE expr RBRACE"

cn_statement: CN_EXTRACT IF LPAREN WHILE
##
## Ends in an error in state: 924.
##
## expr_without_let -> IF LPAREN . expr RPAREN LBRACE expr RBRACE ELSE LBRACE expr RBRACE [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX COMMA CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## IF LPAREN
##

parsing "expr_without_let": seen "IF LPAREN", expecting "expr RPAREN LBRACE expr RBRACE ELSE LBRACE expr RBRACE"

cn_statement: CN_EXTRACT CN_MATCH WHILE
##
## Ends in an error in state: 928.
##
## expr_without_let -> CN_MATCH . match_target LBRACE match_cases RBRACE [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX COMMA CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## CN_MATCH
##

parsing "expr_without_let": seen "CN_MATCH", expecting "match_target LBRACE match_cases RBRACE"

cn_statement: CN_EXTRACT CN_MATCH LPAREN WHILE
##
## Ends in an error in state: 932.
##
## match_target -> LPAREN . expr RPAREN [ LBRACE ]
##
## The known suffix of the stack is as follows:
## LPAREN
##

parsing "match_target": seen "LPAREN", expecting "expr RPAREN"

cn_statement: CN_EXTRACT CN_LET UNAME VARIABLE WHILE
##
## Ends in an error in state: 935.
##
## expr -> CN_LET UNAME VARIABLE . EQ expr SEMICOLON expr [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX COMMA CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## CN_LET UNAME VARIABLE
##

parsing "expr": seen "CN_LET UNAME VARIABLE", expecting "EQ expr SEMICOLON expr"

cn_statement: CN_EXTRACT CN_LET UNAME VARIABLE EQ WHILE
##
## Ends in an error in state: 936.
##
## expr -> CN_LET UNAME VARIABLE EQ . expr SEMICOLON expr [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX COMMA CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## CN_LET UNAME VARIABLE EQ
##

parsing "expr": seen "CN_LET UNAME VARIABLE EQ", expecting "expr SEMICOLON expr"

cn_statement: CN_EXTRACT CN_GOOD WHILE
##
## Ends in an error in state: 937.
##
## cn_good -> CN_GOOD . LT ctype GT [ LPAREN COMMA ]
##
## The known suffix of the stack is as follows:
## CN_GOOD
##

parsing "cn_good": seen "CN_GOOD", expecting "LT ctype GT"

cn_statement: CN_EXTRACT CN_GOOD LT WHILE
##
## Ends in an error in state: 938.
##
## cn_good -> CN_GOOD LT . ctype GT [ LPAREN COMMA ]
##
## The known suffix of the stack is as follows:
## CN_GOOD LT
##

parsing "cn_good": seen "CN_GOOD LT", expecting "ctype GT"

cn_statement: CN_EXTRACT CN_EACH LPAREN UNAME VARIABLE WHILE
##
## Ends in an error in state: 945.
##
## expr_without_let -> CN_EACH LPAREN UNAME VARIABLE . COLON int_range SEMICOLON expr RPAREN [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX COMMA CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## CN_EACH LPAREN UNAME VARIABLE
##

parsing "expr_without_let": seen "CN_EACH LPAREN UNAME VARIABLE", expecting "COLON int_range SEMICOLON expr RPAREN"

cn_statement: CN_EXTRACT CN_EACH LPAREN UNAME VARIABLE COLON WHILE
##
## Ends in an error in state: 946.
##
## expr_without_let -> CN_EACH LPAREN UNAME VARIABLE COLON . int_range SEMICOLON expr RPAREN [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX COMMA CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## CN_EACH LPAREN UNAME VARIABLE COLON
##

parsing "expr_without_let": seen "CN_EACH LPAREN UNAME VARIABLE COLON", expecting "int_range SEMICOLON expr RPAREN"

cn_statement: CN_EXTRACT CN_EACH LPAREN LNAME TYPE COLON CONSTANT WHILE
##
## Ends in an error in state: 947.
##
## int_range -> CONSTANT . COMMA CONSTANT [ SEMICOLON ]
##
## The known suffix of the stack is as follows:
## CONSTANT
##

parsing "int_range": seen "CONSTANT", expecting "COMMA CONSTANT"

cn_statement: CN_EXTRACT CN_EACH LPAREN LNAME TYPE COLON CONSTANT COMMA WHILE
##
## Ends in an error in state: 948.
##
## int_range -> CONSTANT COMMA . CONSTANT [ SEMICOLON ]
##
## The known suffix of the stack is as follows:
## CONSTANT COMMA
##

parsing "int_range": seen "CONSTANT COMMA", expecting "CONSTANT"

cn_statement: CN_EXTRACT CN_EACH LPAREN UNAME VARIABLE COLON CONSTANT COMMA CONSTANT WHILE
##
## Ends in an error in state: 950.
##
## expr_without_let -> CN_EACH LPAREN UNAME VARIABLE COLON int_range . SEMICOLON expr RPAREN [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX COMMA CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## CN_EACH LPAREN UNAME VARIABLE COLON int_range
##

parsing "expr_without_let": seen "CN_EACH LPAREN UNAME VARIABLE COLON int_range", expecting "SEMICOLON expr RPAREN"

cn_statement: CN_EXTRACT CN_EACH LPAREN UNAME VARIABLE COLON CONSTANT COMMA CONSTANT SEMICOLON WHILE
##
## Ends in an error in state: 951.
##
## expr_without_let -> CN_EACH LPAREN UNAME VARIABLE COLON int_range SEMICOLON . expr RPAREN [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX COMMA CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## CN_EACH LPAREN UNAME VARIABLE COLON int_range SEMICOLON
##

parsing "expr_without_let": seen "CN_EACH LPAREN UNAME VARIABLE COLON int_range SEMICOLON", expecting "expr RPAREN"

cn_statement: CN_EXTRACT BANG WHILE
##
## Ends in an error in state: 952.
##
## unary_expr -> BANG . prim_expr [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
##
## The known suffix of the stack is as follows:
## BANG
##

parsing "unary_expr": seen "BANG", expecting "prim_expr"

cn_statement: CN_EXTRACT BANG LPAREN WHILE
##
## Ends in an error in state: 953.
##
## prim_expr -> LPAREN . expr RPAREN [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS_GT MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE DOT CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
##
## The known suffix of the stack is as follows:
## LPAREN
##

parsing "prim_expr": seen "LPAREN", expecting "expr RPAREN"

cn_statement: CN_EXTRACT LBRACE LNAME VARIABLE COLON WHILE
##
## Ends in an error in state: 962.
##
## member_def -> LNAME VARIABLE COLON . expr [ RBRACE COMMA ]
##
## The known suffix of the stack is as follows:
## LNAME VARIABLE COLON
##

parsing "member_def": seen "LNAME VARIABLE COLON", expecting "expr"

cn_statement: CN_EXTRACT CN_FALSE LT_EQ WHILE
##
## Ends in an error in state: 965.
##
## rel_expr -> rel_expr LT_EQ . add_expr [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PIPE_PIPE NORETURN LT_EQ LT LONG LNAME LBRACK_LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
##
## The known suffix of the stack is as follows:
## rel_expr LT_EQ
##

parsing "rel_expr": seen "rel_expr LT_EQ", expecting "add_expr"

cn_statement: CN_EXTRACT CN_FALSE LBRACK CN_FALSE COLON WHILE
##
## Ends in an error in state: 978.
##
## index_update -> prim_expr COLON . expr [ RBRACK COMMA ]
##
## The known suffix of the stack is as follows:
## prim_expr COLON
##

parsing "index_update": seen "prim_expr COLON", expecting "expr"

cn_statement: CN_EXTRACT CN_FALSE STAR WHILE
##
## Ends in an error in state: 980.
##
## mul_expr -> mul_expr STAR . unary_expr [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
##
## The known suffix of the stack is as follows:
## mul_expr STAR
##

parsing "mul_expr": seen "mul_expr STAR", expecting "unary_expr"

cn_statement: CN_EXTRACT CN_GOOD LT BOOL GT WHILE
##
## Ends in an error in state: 982.
##
## prim_expr -> cn_good . LPAREN expr RPAREN [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS_GT MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE DOT CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
##
## The known suffix of the stack is as follows:
## cn_good
##

parsing "prim_expr": seen "cn_good", expecting "LPAREN expr RPAREN"

cn_statement: CN_EXTRACT CN_GOOD LT BOOL GT LPAREN WHILE
##
## Ends in an error in state: 983.
##
## prim_expr -> cn_good LPAREN . expr RPAREN [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS_GT MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE DOT CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
##
## The known suffix of the stack is as follows:
## cn_good LPAREN
##

parsing "prim_expr": seen "cn_good LPAREN", expecting "expr RPAREN"

cn_statement: CN_EXTRACT CN_FALSE QUESTION WHILE
##
## Ends in an error in state: 985.
##
## expr_without_let -> list_expr QUESTION . list_expr COLON list_expr [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX COMMA CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## list_expr QUESTION
##

parsing "expr_without_let": seen "list_expr QUESTION", expecting "list_expr COLON list_expr"

cn_statement: CN_EXTRACT CN_FALSE QUESTION CN_FALSE COLON WHILE
##
## Ends in an error in state: 987.
##
## expr_without_let -> list_expr QUESTION list_expr COLON . list_expr [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX COMMA CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## list_expr QUESTION list_expr COLON
##

parsing "expr_without_let": seen "list_expr QUESTION list_expr COLON", expecting "list_expr"

cn_statement: CN_EXTRACT CN_FALSE PIPE_PIPE WHILE
##
## Ends in an error in state: 990.
##
## bool_bin_expr -> bool_bin_expr PIPE_PIPE . rel_expr [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PIPE_PIPE NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
##
## The known suffix of the stack is as follows:
## bool_bin_expr PIPE_PIPE
##

parsing "bool_bin_expr": seen "bool_bin_expr PIPE_PIPE", expecting "rel_expr"

cn_statement: CN_EXTRACT CN_FALSE LT WHILE
##
## Ends in an error in state: 992.
##
## rel_expr -> rel_expr LT . add_expr [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PIPE_PIPE NORETURN LT_EQ LT LONG LNAME LBRACK_LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
##
## The known suffix of the stack is as follows:
## rel_expr LT
##

parsing "rel_expr": seen "rel_expr LT", expecting "add_expr"

cn_statement: CN_EXTRACT CN_FALSE PLUS WHILE
##
## Ends in an error in state: 994.
##
## add_expr -> add_expr PLUS . mul_expr [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
##
## The known suffix of the stack is as follows:
## add_expr PLUS
##

parsing "add_expr": seen "add_expr PLUS", expecting "mul_expr"

cn_statement: CN_EXTRACT CN_FALSE SLASH WHILE
##
## Ends in an error in state: 996.
##
## mul_expr -> mul_expr SLASH . unary_expr [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
##
## The known suffix of the stack is as follows:
## mul_expr SLASH
##

parsing "mul_expr": seen "mul_expr SLASH", expecting "unary_expr"

cn_statement: CN_EXTRACT CN_FALSE MINUS WHILE
##
## Ends in an error in state: 998.
##
## add_expr -> add_expr MINUS . mul_expr [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
##
## The known suffix of the stack is as follows:
## add_expr MINUS
##

parsing "add_expr": seen "add_expr MINUS", expecting "mul_expr"

cn_statement: CN_EXTRACT CN_FALSE GT_EQ WHILE
##
## Ends in an error in state: 1000.
##
## rel_expr -> rel_expr GT_EQ . add_expr [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PIPE_PIPE NORETURN LT_EQ LT LONG LNAME LBRACK_LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
##
## The known suffix of the stack is as follows:
## rel_expr GT_EQ
##

parsing "rel_expr": seen "rel_expr GT_EQ", expecting "add_expr"

cn_statement: CN_EXTRACT CN_FALSE GT WHILE
##
## Ends in an error in state: 1002.
##
## rel_expr -> rel_expr GT . add_expr [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PIPE_PIPE NORETURN LT_EQ LT LONG LNAME LBRACK_LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
##
## The known suffix of the stack is as follows:
## rel_expr GT
##

parsing "rel_expr": seen "rel_expr GT", expecting "add_expr"

cn_statement: CN_EXTRACT CN_FALSE EQ_EQ WHILE
##
## Ends in an error in state: 1004.
##
## rel_expr -> rel_expr EQ_EQ . add_expr [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PIPE_PIPE NORETURN LT_EQ LT LONG LNAME LBRACK_LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
##
## The known suffix of the stack is as follows:
## rel_expr EQ_EQ
##

parsing "rel_expr": seen "rel_expr EQ_EQ", expecting "add_expr"

cn_statement: CN_EXTRACT CN_FALSE BANG_EQ WHILE
##
## Ends in an error in state: 1006.
##
## rel_expr -> rel_expr BANG_EQ . add_expr [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PIPE_PIPE NORETURN LT_EQ LT LONG LNAME LBRACK_LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
##
## The known suffix of the stack is as follows:
## rel_expr BANG_EQ
##

parsing "rel_expr": seen "rel_expr BANG_EQ", expecting "add_expr"

cn_statement: CN_EXTRACT CN_FALSE AMPERSAND_AMPERSAND WHILE
##
## Ends in an error in state: 1009.
##
## bool_bin_expr -> bool_bin_expr AMPERSAND_AMPERSAND . rel_expr [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PIPE_PIPE NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
##
## The known suffix of the stack is as follows:
## bool_bin_expr AMPERSAND_AMPERSAND
##

parsing "bool_bin_expr": seen "bool_bin_expr AMPERSAND_AMPERSAND", expecting "rel_expr"

cn_statement: CN_EXTRACT CN_FALSE LBRACK CN_FALSE COLON CN_FALSE COMMA WHILE
##
## Ends in an error in state: 1016.
##
## separated_nonempty_list(COMMA,index_update) -> index_update COMMA . separated_nonempty_list(COMMA,index_update) [ RBRACK ]
##
## The known suffix of the stack is as follows:
## index_update COMMA
##

parsing "separated_nonempty_list(COMMA,index_update)": seen "index_update COMMA", expecting "separated_nonempty_list(COMMA,index_update)"

cn_statement: CN_EXTRACT LNAME TYPE LPAREN WHILE
##
## Ends in an error in state: 1025.
##
## prim_expr -> LNAME TYPE LPAREN . loption(separated_nonempty_list(COMMA,expr)) RPAREN [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS_GT MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE DOT CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
##
## The known suffix of the stack is as follows:
## LNAME TYPE LPAREN
##

parsing "prim_expr": seen "LNAME TYPE LPAREN", expecting "loption(separated_nonempty_list(COMMA,expr)) RPAREN"

cn_statement: CN_PACK CN_OWNED LPAREN CN_FALSE COMMA WHILE
##
## Ends in an error in state: 1030.
##
## separated_nonempty_list(COMMA,expr) -> expr COMMA . separated_nonempty_list(COMMA,expr) [ RPAREN ]
##
## The known suffix of the stack is as follows:
## expr COMMA
##

parsing "separated_nonempty_list(COMMA,expr)": seen "expr COMMA", expecting "separated_nonempty_list(COMMA,expr)"

cn_statement: CN_EXTRACT LBRACE LNAME TYPE COLON WHILE
##
## Ends in an error in state: 1032.
##
## member_def -> LNAME TYPE COLON . expr [ RBRACE COMMA ]
##
## The known suffix of the stack is as follows:
## LNAME TYPE COLON
##

parsing "member_def": seen "LNAME TYPE COLON", expecting "expr"

cn_statement: CN_EXTRACT LNAME TYPE LBRACE LNAME VARIABLE WHILE
##
## Ends in an error in state: 1043.
##
## member_def -> LNAME VARIABLE . COLON expr [ RBRACE COMMA ]
##
## The known suffix of the stack is as follows:
## LNAME VARIABLE
##

parsing "member_def": seen "LNAME VARIABLE", expecting "COLON expr"

cn_statement: CN_EXTRACT LNAME TYPE LBRACE LNAME TYPE WHILE
##
## Ends in an error in state: 1044.
##
## member_def -> LNAME TYPE . COLON expr [ RBRACE COMMA ]
##
## The known suffix of the stack is as follows:
## LNAME TYPE
##

parsing "member_def": seen "LNAME TYPE", expecting "COLON expr"

cn_statement: CN_EXTRACT LBRACE UNAME TYPE COLON CN_FALSE COMMA DOT WHILE
##
## Ends in an error in state: 1045.
##
## member_updates -> DOT . DOT expr [ RBRACE ]
##
## The known suffix of the stack is as follows:
## DOT
##

parsing "member_updates": seen "DOT", expecting "DOT expr"

cn_statement: CN_EXTRACT LBRACE UNAME TYPE COLON CN_FALSE COMMA DOT DOT WHILE
##
## Ends in an error in state: 1046.
##
## member_updates -> DOT DOT . expr [ RBRACE ]
##
## The known suffix of the stack is as follows:
## DOT DOT
##

parsing "member_updates": seen "DOT DOT", expecting "expr"

cn_statement: CN_EXTRACT LBRACE CN_FALSE RBRACE PERCENT UNAME WHILE
##
## Ends in an error in state: 1056.
##
## prim_expr -> LBRACE expr RBRACE PERCENT UNAME . VARIABLE [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS_GT MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE DOT CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
##
## The known suffix of the stack is as follows:
## LBRACE expr RBRACE PERCENT UNAME
##

parsing "prim_expr": seen "LBRACE expr RBRACE PERCENT UNAME", expecting "VARIABLE"

cn_statement: CN_EXTRACT LBRACE CN_FALSE RBRACE PERCENT LNAME WHILE
##
## Ends in an error in state: 1058.
##
## prim_expr -> LBRACE expr RBRACE PERCENT LNAME . VARIABLE [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS_GT MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE DOT CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
##
## The known suffix of the stack is as follows:
## LBRACE expr RBRACE PERCENT LNAME
##

parsing "prim_expr": seen "LBRACE expr RBRACE PERCENT LNAME", expecting "VARIABLE"

cn_statement: CN_EXTRACT AMPERSAND LPAREN CN_FALSE MINUS_GT UNAME VARIABLE WHILE
##
## Ends in an error in state: 1063.
##
## unary_expr -> AMPERSAND LPAREN prim_expr MINUS_GT UNAME VARIABLE . RPAREN [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
##
## The known suffix of the stack is as follows:
## AMPERSAND LPAREN prim_expr MINUS_GT UNAME VARIABLE
##

parsing "unary_expr": seen "AMPERSAND LPAREN prim_expr MINUS_GT UNAME VARIABLE", expecting "RPAREN"

cn_statement: CN_EXTRACT AMPERSAND LPAREN CN_FALSE MINUS_GT UNAME TYPE WHILE
##
## Ends in an error in state: 1065.
##
## unary_expr -> AMPERSAND LPAREN prim_expr MINUS_GT UNAME TYPE . RPAREN [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
##
## The known suffix of the stack is as follows:
## AMPERSAND LPAREN prim_expr MINUS_GT UNAME TYPE
##

parsing "unary_expr": seen "AMPERSAND LPAREN prim_expr MINUS_GT UNAME TYPE", expecting "RPAREN"

cn_statement: CN_EXTRACT AMPERSAND LPAREN CN_FALSE MINUS_GT LNAME VARIABLE WHILE
##
## Ends in an error in state: 1068.
##
## unary_expr -> AMPERSAND LPAREN prim_expr MINUS_GT LNAME VARIABLE . RPAREN [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
##
## The known suffix of the stack is as follows:
## AMPERSAND LPAREN prim_expr MINUS_GT LNAME VARIABLE
##

parsing "unary_expr": seen "AMPERSAND LPAREN prim_expr MINUS_GT LNAME VARIABLE", expecting "RPAREN"

cn_statement: CN_EXTRACT AMPERSAND LPAREN CN_FALSE MINUS_GT LNAME TYPE WHILE
##
## Ends in an error in state: 1070.
##
## unary_expr -> AMPERSAND LPAREN prim_expr MINUS_GT LNAME TYPE . RPAREN [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
##
## The known suffix of the stack is as follows:
## AMPERSAND LPAREN prim_expr MINUS_GT LNAME TYPE
##

parsing "unary_expr": seen "AMPERSAND LPAREN prim_expr MINUS_GT LNAME TYPE", expecting "RPAREN"

cn_statement: CN_EXTRACT CN_EACH LPAREN UNAME TYPE WHILE
##
## Ends in an error in state: 1080.
##
## expr_without_let -> CN_EACH LPAREN UNAME TYPE . COLON int_range SEMICOLON expr RPAREN [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX COMMA CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## CN_EACH LPAREN UNAME TYPE
##

parsing "expr_without_let": seen "CN_EACH LPAREN UNAME TYPE", expecting "COLON int_range SEMICOLON expr RPAREN"

cn_statement: CN_EXTRACT CN_EACH LPAREN UNAME TYPE COLON WHILE
##
## Ends in an error in state: 1081.
##
## expr_without_let -> CN_EACH LPAREN UNAME TYPE COLON . int_range SEMICOLON expr RPAREN [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX COMMA CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## CN_EACH LPAREN UNAME TYPE COLON
##

parsing "expr_without_let": seen "CN_EACH LPAREN UNAME TYPE COLON", expecting "int_range SEMICOLON expr RPAREN"

cn_statement: CN_EXTRACT CN_EACH LPAREN UNAME TYPE COLON CONSTANT COMMA CONSTANT WHILE
##
## Ends in an error in state: 1082.
##
## expr_without_let -> CN_EACH LPAREN UNAME TYPE COLON int_range . SEMICOLON expr RPAREN [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX COMMA CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## CN_EACH LPAREN UNAME TYPE COLON int_range
##

parsing "expr_without_let": seen "CN_EACH LPAREN UNAME TYPE COLON int_range", expecting "SEMICOLON expr RPAREN"

cn_statement: CN_EXTRACT CN_EACH LPAREN UNAME TYPE COLON CONSTANT COMMA CONSTANT SEMICOLON WHILE
##
## Ends in an error in state: 1083.
##
## expr_without_let -> CN_EACH LPAREN UNAME TYPE COLON int_range SEMICOLON . expr RPAREN [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX COMMA CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## CN_EACH LPAREN UNAME TYPE COLON int_range SEMICOLON
##

parsing "expr_without_let": seen "CN_EACH LPAREN UNAME TYPE COLON int_range SEMICOLON", expecting "expr RPAREN"

cn_statement: CN_EXTRACT CN_EACH LPAREN LNAME VARIABLE WHILE
##
## Ends in an error in state: 1087.
##
## expr_without_let -> CN_EACH LPAREN LNAME VARIABLE . COLON int_range SEMICOLON expr RPAREN [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX COMMA CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## CN_EACH LPAREN LNAME VARIABLE
##

parsing "expr_without_let": seen "CN_EACH LPAREN LNAME VARIABLE", expecting "COLON int_range SEMICOLON expr RPAREN"

cn_statement: CN_EXTRACT CN_EACH LPAREN LNAME VARIABLE COLON WHILE
##
## Ends in an error in state: 1088.
##
## expr_without_let -> CN_EACH LPAREN LNAME VARIABLE COLON . int_range SEMICOLON expr RPAREN [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX COMMA CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## CN_EACH LPAREN LNAME VARIABLE COLON
##

parsing "expr_without_let": seen "CN_EACH LPAREN LNAME VARIABLE COLON", expecting "int_range SEMICOLON expr RPAREN"

cn_statement: CN_EXTRACT CN_EACH LPAREN LNAME VARIABLE COLON CONSTANT COMMA CONSTANT WHILE
##
## Ends in an error in state: 1089.
##
## expr_without_let -> CN_EACH LPAREN LNAME VARIABLE COLON int_range . SEMICOLON expr RPAREN [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX COMMA CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## CN_EACH LPAREN LNAME VARIABLE COLON int_range
##

parsing "expr_without_let": seen "CN_EACH LPAREN LNAME VARIABLE COLON int_range", expecting "SEMICOLON expr RPAREN"

cn_statement: CN_EXTRACT CN_EACH LPAREN LNAME VARIABLE COLON CONSTANT COMMA CONSTANT SEMICOLON WHILE
##
## Ends in an error in state: 1090.
##
## expr_without_let -> CN_EACH LPAREN LNAME VARIABLE COLON int_range SEMICOLON . expr RPAREN [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX COMMA CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## CN_EACH LPAREN LNAME VARIABLE COLON int_range SEMICOLON
##

parsing "expr_without_let": seen "CN_EACH LPAREN LNAME VARIABLE COLON int_range SEMICOLON", expecting "expr RPAREN"

cn_statement: CN_EXTRACT CN_EACH LPAREN LNAME TYPE WHILE
##
## Ends in an error in state: 1093.
##
## expr_without_let -> CN_EACH LPAREN LNAME TYPE . COLON int_range SEMICOLON expr RPAREN [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX COMMA CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## CN_EACH LPAREN LNAME TYPE
##

parsing "expr_without_let": seen "CN_EACH LPAREN LNAME TYPE", expecting "COLON int_range SEMICOLON expr RPAREN"

cn_statement: CN_EXTRACT CN_EACH LPAREN LNAME TYPE COLON WHILE
##
## Ends in an error in state: 1094.
##
## expr_without_let -> CN_EACH LPAREN LNAME TYPE COLON . int_range SEMICOLON expr RPAREN [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX COMMA CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## CN_EACH LPAREN LNAME TYPE COLON
##

parsing "expr_without_let": seen "CN_EACH LPAREN LNAME TYPE COLON", expecting "int_range SEMICOLON expr RPAREN"

cn_statement: CN_EXTRACT CN_EACH LPAREN LNAME TYPE COLON CONSTANT COMMA CONSTANT WHILE
##
## Ends in an error in state: 1095.
##
## expr_without_let -> CN_EACH LPAREN LNAME TYPE COLON int_range . SEMICOLON expr RPAREN [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX COMMA CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## CN_EACH LPAREN LNAME TYPE COLON int_range
##

parsing "expr_without_let": seen "CN_EACH LPAREN LNAME TYPE COLON int_range", expecting "SEMICOLON expr RPAREN"

cn_statement: CN_EXTRACT CN_EACH LPAREN LNAME TYPE COLON CONSTANT COMMA CONSTANT SEMICOLON WHILE
##
## Ends in an error in state: 1096.
##
## expr_without_let -> CN_EACH LPAREN LNAME TYPE COLON int_range SEMICOLON . expr RPAREN [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX COMMA CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## CN_EACH LPAREN LNAME TYPE COLON int_range SEMICOLON
##

parsing "expr_without_let": seen "CN_EACH LPAREN LNAME TYPE COLON int_range SEMICOLON", expecting "expr RPAREN"

cn_statement: CN_EXTRACT CN_LET UNAME VARIABLE EQ CN_FALSE SEMICOLON WHILE
##
## Ends in an error in state: 1100.
##
## expr -> CN_LET UNAME VARIABLE EQ expr SEMICOLON . expr [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX COMMA CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## CN_LET UNAME VARIABLE EQ expr SEMICOLON
##

parsing "expr": seen "CN_LET UNAME VARIABLE EQ expr SEMICOLON", expecting "expr"

cn_statement: CN_EXTRACT CN_LET UNAME TYPE WHILE
##
## Ends in an error in state: 1102.
##
## expr -> CN_LET UNAME TYPE . EQ expr SEMICOLON expr [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX COMMA CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## CN_LET UNAME TYPE
##

parsing "expr": seen "CN_LET UNAME TYPE", expecting "EQ expr SEMICOLON expr"

cn_statement: CN_EXTRACT CN_LET UNAME TYPE EQ WHILE
##
## Ends in an error in state: 1103.
##
## expr -> CN_LET UNAME TYPE EQ . expr SEMICOLON expr [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX COMMA CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## CN_LET UNAME TYPE EQ
##

parsing "expr": seen "CN_LET UNAME TYPE EQ", expecting "expr SEMICOLON expr"

cn_statement: CN_EXTRACT CN_LET UNAME TYPE EQ CN_FALSE SEMICOLON WHILE
##
## Ends in an error in state: 1105.
##
## expr -> CN_LET UNAME TYPE EQ expr SEMICOLON . expr [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX COMMA CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## CN_LET UNAME TYPE EQ expr SEMICOLON
##

parsing "expr": seen "CN_LET UNAME TYPE EQ expr SEMICOLON", expecting "expr"

cn_statement: CN_EXTRACT CN_LET LNAME VARIABLE WHILE
##
## Ends in an error in state: 1108.
##
## expr -> CN_LET LNAME VARIABLE . EQ expr SEMICOLON expr [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX COMMA CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## CN_LET LNAME VARIABLE
##

parsing "expr": seen "CN_LET LNAME VARIABLE", expecting "EQ expr SEMICOLON expr"

cn_statement: CN_EXTRACT CN_LET LNAME VARIABLE EQ WHILE
##
## Ends in an error in state: 1109.
##
## expr -> CN_LET LNAME VARIABLE EQ . expr SEMICOLON expr [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX COMMA CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## CN_LET LNAME VARIABLE EQ
##

parsing "expr": seen "CN_LET LNAME VARIABLE EQ", expecting "expr SEMICOLON expr"

cn_statement: CN_EXTRACT CN_LET LNAME VARIABLE EQ CN_FALSE SEMICOLON WHILE
##
## Ends in an error in state: 1111.
##
## expr -> CN_LET LNAME VARIABLE EQ expr SEMICOLON . expr [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX COMMA CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## CN_LET LNAME VARIABLE EQ expr SEMICOLON
##

parsing "expr": seen "CN_LET LNAME VARIABLE EQ expr SEMICOLON", expecting "expr"

cn_statement: CN_EXTRACT CN_LET LNAME TYPE WHILE
##
## Ends in an error in state: 1113.
##
## expr -> CN_LET LNAME TYPE . EQ expr SEMICOLON expr [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX COMMA CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## CN_LET LNAME TYPE
##

parsing "expr": seen "CN_LET LNAME TYPE", expecting "EQ expr SEMICOLON expr"

cn_statement: CN_EXTRACT CN_LET LNAME TYPE EQ WHILE
##
## Ends in an error in state: 1114.
##
## expr -> CN_LET LNAME TYPE EQ . expr SEMICOLON expr [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX COMMA CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## CN_LET LNAME TYPE EQ
##

parsing "expr": seen "CN_LET LNAME TYPE EQ", expecting "expr SEMICOLON expr"

cn_statement: CN_EXTRACT CN_LET LNAME TYPE EQ CN_FALSE SEMICOLON WHILE
##
## Ends in an error in state: 1116.
##
## expr -> CN_LET LNAME TYPE EQ expr SEMICOLON . expr [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX COMMA CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## CN_LET LNAME TYPE EQ expr SEMICOLON
##

parsing "expr": seen "CN_LET LNAME TYPE EQ expr SEMICOLON", expecting "expr"

cn_statement: CN_EXTRACT CN_MATCH LNAME TYPE WHILE
##
## Ends in an error in state: 1123.
##
## expr_without_let -> CN_MATCH match_target . LBRACE match_cases RBRACE [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX COMMA CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## CN_MATCH match_target
##

parsing "expr_without_let": seen "CN_MATCH match_target", expecting "LBRACE match_cases RBRACE"

cn_statement: CN_EXTRACT CN_MATCH LNAME TYPE LBRACE WHILE
##
## Ends in an error in state: 1124.
##
## expr_without_let -> CN_MATCH match_target LBRACE . match_cases RBRACE [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX COMMA CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## CN_MATCH match_target LBRACE
##

parsing "expr_without_let": seen "CN_MATCH match_target LBRACE", expecting "match_cases RBRACE"

cn_statement: CN_EXTRACT CN_MATCH LNAME TYPE LBRACE LNAME TYPE LBRACE RBRACE WHILE
##
## Ends in an error in state: 1137.
##
## match_case -> match_case_lhs . EQ GT LBRACE expr RBRACE [ UNAME RBRACE LNAME ]
##
## The known suffix of the stack is as follows:
## match_case_lhs
##

parsing "match_case": seen "match_case_lhs", expecting "EQ GT LBRACE expr RBRACE"

cn_statement: CN_EXTRACT CN_MATCH LNAME TYPE LBRACE LNAME TYPE EQ WHILE
##
## Ends in an error in state: 1138.
##
## match_case -> match_case_lhs EQ . GT LBRACE expr RBRACE [ UNAME RBRACE LNAME ]
##
## The known suffix of the stack is as follows:
## match_case_lhs EQ
##

parsing "match_case": seen "match_case_lhs EQ", expecting "GT LBRACE expr RBRACE"

cn_statement: CN_EXTRACT CN_MATCH LNAME TYPE LBRACE LNAME TYPE EQ GT WHILE
##
## Ends in an error in state: 1139.
##
## match_case -> match_case_lhs EQ GT . LBRACE expr RBRACE [ UNAME RBRACE LNAME ]
##
## The known suffix of the stack is as follows:
## match_case_lhs EQ GT
##

parsing "match_case": seen "match_case_lhs EQ GT", expecting "LBRACE expr RBRACE"

cn_statement: CN_EXTRACT CN_MATCH LNAME TYPE LBRACE LNAME TYPE EQ GT LBRACE WHILE
##
## Ends in an error in state: 1140.
##
## match_case -> match_case_lhs EQ GT LBRACE . expr RBRACE [ UNAME RBRACE LNAME ]
##
## The known suffix of the stack is as follows:
## match_case_lhs EQ GT LBRACE
##

parsing "match_case": seen "match_case_lhs EQ GT LBRACE", expecting "expr RBRACE"

cn_statement: CN_EXTRACT IF LPAREN CN_FALSE RPAREN WHILE
##
## Ends in an error in state: 1146.
##
## expr_without_let -> IF LPAREN expr RPAREN . LBRACE expr RBRACE ELSE LBRACE expr RBRACE [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX COMMA CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## IF LPAREN expr RPAREN
##

parsing "expr_without_let": seen "IF LPAREN expr RPAREN", expecting "LBRACE expr RBRACE ELSE LBRACE expr RBRACE"

cn_statement: CN_EXTRACT IF LPAREN CN_FALSE RPAREN LBRACE WHILE
##
## Ends in an error in state: 1147.
##
## expr_without_let -> IF LPAREN expr RPAREN LBRACE . expr RBRACE ELSE LBRACE expr RBRACE [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX COMMA CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## IF LPAREN expr RPAREN LBRACE
##

parsing "expr_without_let": seen "IF LPAREN expr RPAREN LBRACE", expecting "expr RBRACE ELSE LBRACE expr RBRACE"

cn_statement: CN_EXTRACT IF LPAREN CN_FALSE RPAREN LBRACE CN_FALSE RBRACE WHILE
##
## Ends in an error in state: 1149.
##
## expr_without_let -> IF LPAREN expr RPAREN LBRACE expr RBRACE . ELSE LBRACE expr RBRACE [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX COMMA CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## IF LPAREN expr RPAREN LBRACE expr RBRACE
##

parsing "expr_without_let": seen "IF LPAREN expr RPAREN LBRACE expr RBRACE", expecting "ELSE LBRACE expr RBRACE"

cn_statement: CN_EXTRACT IF LPAREN CN_FALSE RPAREN LBRACE CN_FALSE RBRACE ELSE WHILE
##
## Ends in an error in state: 1150.
##
## expr_without_let -> IF LPAREN expr RPAREN LBRACE expr RBRACE ELSE . LBRACE expr RBRACE [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX COMMA CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## IF LPAREN expr RPAREN LBRACE expr RBRACE ELSE
##

parsing "expr_without_let": seen "IF LPAREN expr RPAREN LBRACE expr RBRACE ELSE", expecting "LBRACE expr RBRACE"

cn_statement: CN_EXTRACT IF LPAREN CN_FALSE RPAREN LBRACE CN_FALSE RBRACE ELSE LBRACE WHILE
##
## Ends in an error in state: 1151.
##
## expr_without_let -> IF LPAREN expr RPAREN LBRACE expr RBRACE ELSE LBRACE . expr RBRACE [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX COMMA CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## IF LPAREN expr RPAREN LBRACE expr RBRACE ELSE LBRACE
##

parsing "expr_without_let": seen "IF LPAREN expr RPAREN LBRACE expr RBRACE ELSE LBRACE", expecting "expr RBRACE"

cn_statement: CN_EXTRACT LNAME TYPE LBRACE UNAME TYPE WHILE
##
## Ends in an error in state: 1155.
##
## member_def -> UNAME TYPE . COLON expr [ RBRACE COMMA ]
##
## The known suffix of the stack is as follows:
## UNAME TYPE
##

parsing "member_def": seen "UNAME TYPE", expecting "COLON expr"

cn_statement: CN_EXTRACT LBRACE UNAME TYPE COLON WHILE
##
## Ends in an error in state: 1156.
##
## member_def -> UNAME TYPE COLON . expr [ RBRACE COMMA ]
##
## The known suffix of the stack is as follows:
## UNAME TYPE COLON
##

parsing "member_def": seen "UNAME TYPE COLON", expecting "expr"

cn_statement: CN_EXTRACT LNAME TYPE LBRACE UNAME TYPE COLON CN_FALSE COMMA WHILE
##
## Ends in an error in state: 1160.
##
## separated_nonempty_list(COMMA,member_def) -> member_def COMMA . separated_nonempty_list(COMMA,member_def) [ RBRACE ]
##
## The known suffix of the stack is as follows:
## member_def COMMA
##

parsing "separated_nonempty_list(COMMA,member_def)": seen "member_def COMMA", expecting "separated_nonempty_list(COMMA,member_def)"

cn_statement: CN_EXTRACT UNAME TYPE LPAREN WHILE
##
## Ends in an error in state: 1165.
##
## prim_expr -> UNAME TYPE LPAREN . loption(separated_nonempty_list(COMMA,expr)) RPAREN [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS_GT MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE DOT CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
##
## The known suffix of the stack is as follows:
## UNAME TYPE LPAREN
##

parsing "prim_expr": seen "UNAME TYPE LPAREN", expecting "loption(separated_nonempty_list(COMMA,expr)) RPAREN"

cn_statement: CN_EXTRACT LBRACK CN_FALSE COMMA WHILE
##
## Ends in an error in state: 1175.
##
## separated_nonempty_list(COMMA,rel_expr) -> rel_expr COMMA . separated_nonempty_list(COMMA,rel_expr) [ RBRACK ]
##
## The known suffix of the stack is as follows:
## rel_expr COMMA
##

parsing "separated_nonempty_list(COMMA,rel_expr)": seen "rel_expr COMMA", expecting "separated_nonempty_list(COMMA,rel_expr)"

cn_toplevel: CN_PREDICATE CN_TUPLE WHILE
##
## Ends in an error in state: 1181.
##
## base_type -> CN_TUPLE . LT loption(separated_nonempty_list(COMMA,base_type)) GT [ UNAME RPAREN LNAME GT COMMA ]
##
## The known suffix of the stack is as follows:
## CN_TUPLE
##

parsing "base_type": seen "CN_TUPLE", expecting "LT loption(separated_nonempty_list(COMMA,base_type)) GT"

cn_toplevel: CN_PREDICATE CN_TUPLE LT WHILE
##
## Ends in an error in state: 1182.
##
## base_type -> CN_TUPLE LT . loption(separated_nonempty_list(COMMA,base_type)) GT [ UNAME RPAREN LNAME GT COMMA ]
##
## The known suffix of the stack is as follows:
## CN_TUPLE LT
##

parsing "base_type": seen "CN_TUPLE LT", expecting "loption(separated_nonempty_list(COMMA,base_type)) GT"

cn_toplevel: CN_PREDICATE LBRACE WHILE
##
## Ends in an error in state: 1183.
##
## base_type -> LBRACE . nonempty_args RBRACE [ UNAME RPAREN LNAME GT COMMA ]
##
## The known suffix of the stack is as follows:
## LBRACE
##

parsing "base_type": seen "LBRACE", expecting "nonempty_args RBRACE"

cn_toplevel: CN_PREDICATE CN_SET WHILE
##
## Ends in an error in state: 1184.
##
## base_type -> CN_SET . LT base_type GT [ UNAME RPAREN LNAME GT COMMA ]
##
## The known suffix of the stack is as follows:
## CN_SET
##

parsing "base_type": seen "CN_SET", expecting "LT base_type GT"

cn_toplevel: CN_PREDICATE CN_SET LT WHILE
##
## Ends in an error in state: 1185.
##
## base_type -> CN_SET LT . base_type GT [ UNAME RPAREN LNAME GT COMMA ]
##
## The known suffix of the stack is as follows:
## CN_SET LT
##

parsing "base_type": seen "CN_SET LT", expecting "base_type GT"

cn_toplevel: CN_PREDICATE CN_MAP WHILE
##
## Ends in an error in state: 1188.
##
## base_type -> CN_MAP . LT base_type COMMA base_type GT [ UNAME RPAREN LNAME GT COMMA ]
##
## The known suffix of the stack is as follows:
## CN_MAP
##

parsing "base_type": seen "CN_MAP", expecting "LT base_type COMMA base_type GT"

cn_toplevel: CN_PREDICATE CN_MAP LT WHILE
##
## Ends in an error in state: 1189.
##
## base_type -> CN_MAP LT . base_type COMMA base_type GT [ UNAME RPAREN LNAME GT COMMA ]
##
## The known suffix of the stack is as follows:
## CN_MAP LT
##

parsing "base_type": seen "CN_MAP LT", expecting "base_type COMMA base_type GT"

cn_toplevel: CN_PREDICATE CN_LIST WHILE
##
## Ends in an error in state: 1190.
##
## base_type -> CN_LIST . LT base_type GT [ UNAME RPAREN LNAME GT COMMA ]
##
## The known suffix of the stack is as follows:
## CN_LIST
##

parsing "base_type": seen "CN_LIST", expecting "LT base_type GT"

cn_toplevel: CN_PREDICATE CN_LIST LT WHILE
##
## Ends in an error in state: 1191.
##
## base_type -> CN_LIST LT . base_type GT [ UNAME RPAREN LNAME GT COMMA ]
##
## The known suffix of the stack is as follows:
## CN_LIST LT
##

parsing "base_type": seen "CN_LIST LT", expecting "base_type GT"

cn_toplevel: CN_PREDICATE CN_LIST LT CN_BOOL WHILE
##
## Ends in an error in state: 1201.
##
## base_type -> CN_LIST LT base_type . GT [ UNAME RPAREN LNAME GT COMMA ]
##
## The known suffix of the stack is as follows:
## CN_LIST LT base_type
##

parsing "base_type": seen "CN_LIST LT base_type", expecting "GT"

cn_toplevel: CN_PREDICATE CN_MAP LT CN_BOOL WHILE
##
## Ends in an error in state: 1203.
##
## base_type -> CN_MAP LT base_type . COMMA base_type GT [ UNAME RPAREN LNAME GT COMMA ]
##
## The known suffix of the stack is as follows:
## CN_MAP LT base_type
##

parsing "base_type": seen "CN_MAP LT base_type", expecting "COMMA base_type GT"

cn_toplevel: CN_PREDICATE CN_MAP LT CN_BOOL COMMA WHILE
##
## Ends in an error in state: 1204.
##
## base_type -> CN_MAP LT base_type COMMA . base_type GT [ UNAME RPAREN LNAME GT COMMA ]
##
## The known suffix of the stack is as follows:
## CN_MAP LT base_type COMMA
##

parsing "base_type": seen "CN_MAP LT base_type COMMA", expecting "base_type GT"

cn_toplevel: CN_PREDICATE CN_MAP LT CN_BOOL COMMA CN_BOOL WHILE
##
## Ends in an error in state: 1205.
##
## base_type -> CN_MAP LT base_type COMMA base_type . GT [ UNAME RPAREN LNAME GT COMMA ]
##
## The known suffix of the stack is as follows:
## CN_MAP LT base_type COMMA base_type
##

parsing "base_type": seen "CN_MAP LT base_type COMMA base_type", expecting "GT"

cn_toplevel: CN_PREDICATE CN_SET LT CN_BOOL WHILE
##
## Ends in an error in state: 1207.
##
## base_type -> CN_SET LT base_type . GT [ UNAME RPAREN LNAME GT COMMA ]
##
## The known suffix of the stack is as follows:
## CN_SET LT base_type
##

parsing "base_type": seen "CN_SET LT base_type", expecting "GT"

cn_toplevel: CN_PREDICATE LBRACE CN_BOOL UNAME VARIABLE COMMA WHILE
##
## Ends in an error in state: 1215.
##
## separated_nonempty_list(COMMA,pair(base_type,cn_variable)) -> base_type UNAME VARIABLE COMMA . separated_nonempty_list(COMMA,pair(base_type,cn_variable)) [ RPAREN RBRACE ]
##
## The known suffix of the stack is as follows:
## base_type UNAME VARIABLE COMMA
##

parsing "separated_nonempty_list(COMMA,pair(base_type,cn_variable))": seen "base_type UNAME VARIABLE COMMA", expecting "separated_nonempty_list(COMMA,pair(base_type,cn_variable))"

cn_toplevel: CN_PREDICATE LBRACE CN_BOOL UNAME TYPE COMMA WHILE
##
## Ends in an error in state: 1218.
##
## separated_nonempty_list(COMMA,pair(base_type,cn_variable)) -> base_type UNAME TYPE COMMA . separated_nonempty_list(COMMA,pair(base_type,cn_variable)) [ RPAREN RBRACE ]
##
## The known suffix of the stack is as follows:
## base_type UNAME TYPE COMMA
##

parsing "separated_nonempty_list(COMMA,pair(base_type,cn_variable))": seen "base_type UNAME TYPE COMMA", expecting "separated_nonempty_list(COMMA,pair(base_type,cn_variable))"

cn_toplevel: CN_PREDICATE LBRACE CN_BOOL LNAME VARIABLE COMMA WHILE
##
## Ends in an error in state: 1222.
##
## separated_nonempty_list(COMMA,pair(base_type,cn_variable)) -> base_type LNAME VARIABLE COMMA . separated_nonempty_list(COMMA,pair(base_type,cn_variable)) [ RPAREN RBRACE ]
##
## The known suffix of the stack is as follows:
## base_type LNAME VARIABLE COMMA
##

parsing "separated_nonempty_list(COMMA,pair(base_type,cn_variable))": seen "base_type LNAME VARIABLE COMMA", expecting "separated_nonempty_list(COMMA,pair(base_type,cn_variable))"

cn_toplevel: CN_PREDICATE LBRACE CN_BOOL LNAME TYPE COMMA WHILE
##
## Ends in an error in state: 1225.
##
## separated_nonempty_list(COMMA,pair(base_type,cn_variable)) -> base_type LNAME TYPE COMMA . separated_nonempty_list(COMMA,pair(base_type,cn_variable)) [ RPAREN RBRACE ]
##
## The known suffix of the stack is as follows:
## base_type LNAME TYPE COMMA
##

parsing "separated_nonempty_list(COMMA,pair(base_type,cn_variable))": seen "base_type LNAME TYPE COMMA", expecting "separated_nonempty_list(COMMA,pair(base_type,cn_variable))"

cn_toplevel: CN_PREDICATE CN_TUPLE LT CN_BOOL COMMA WHILE
##
## Ends in an error in state: 1231.
##
## separated_nonempty_list(COMMA,base_type) -> base_type COMMA . separated_nonempty_list(COMMA,base_type) [ GT ]
##
## The known suffix of the stack is as follows:
## base_type COMMA
##

parsing "separated_nonempty_list(COMMA,base_type)": seen "base_type COMMA", expecting "separated_nonempty_list(COMMA,base_type)"

cn_statement: CN_EXTRACT LPAREN CN_BOOL WHILE
##
## Ends in an error in state: 1233.
##
## unary_expr -> LPAREN base_type . RPAREN prim_expr [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
##
## The known suffix of the stack is as follows:
## LPAREN base_type
##

parsing "unary_expr": seen "LPAREN base_type", expecting "RPAREN prim_expr"

cn_statement: CN_EXTRACT LPAREN CN_BOOL RPAREN WHILE
##
## Ends in an error in state: 1234.
##
## unary_expr -> LPAREN base_type RPAREN . prim_expr [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
##
## The known suffix of the stack is as follows:
## LPAREN base_type RPAREN
##

parsing "unary_expr": seen "LPAREN base_type RPAREN", expecting "prim_expr"

cn_statement: CN_UNPACK CN_OWNED LPAREN RPAREN WHILE
##
## Ends in an error in state: 1241.
##
## cn_statement -> CN_UNPACK pred LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN . SEMICOLON [ # ]
##
## The known suffix of the stack is as follows:
## CN_UNPACK pred LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN
##

parsing "cn_statement": seen "CN_UNPACK pred LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN", expecting "SEMICOLON"

cn_statement: CN_UNFOLD UNAME VARIABLE WHILE
##
## Ends in an error in state: 1245.
##
## cn_statement -> CN_UNFOLD UNAME VARIABLE . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN SEMICOLON [ # ]
##
## The known suffix of the stack is as follows:
## CN_UNFOLD UNAME VARIABLE
##

parsing "cn_statement": seen "CN_UNFOLD UNAME VARIABLE", expecting "LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN SEMICOLON"

cn_statement: CN_UNFOLD UNAME VARIABLE LPAREN WHILE
##
## Ends in an error in state: 1246.
##
## cn_statement -> CN_UNFOLD UNAME VARIABLE LPAREN . loption(separated_nonempty_list(COMMA,expr)) RPAREN SEMICOLON [ # ]
##
## The known suffix of the stack is as follows:
## CN_UNFOLD UNAME VARIABLE LPAREN
##

parsing "cn_statement": seen "CN_UNFOLD UNAME VARIABLE LPAREN", expecting "loption(separated_nonempty_list(COMMA,expr)) RPAREN SEMICOLON"

cn_statement: CN_UNFOLD UNAME VARIABLE LPAREN RPAREN WHILE
##
## Ends in an error in state: 1248.
##
## cn_statement -> CN_UNFOLD UNAME VARIABLE LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN . SEMICOLON [ # ]
##
## The known suffix of the stack is as follows:
## CN_UNFOLD UNAME VARIABLE LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN
##

parsing "cn_statement": seen "CN_UNFOLD UNAME VARIABLE LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN", expecting "SEMICOLON"

cn_statement: CN_UNFOLD UNAME TYPE WHILE
##
## Ends in an error in state: 1250.
##
## cn_statement -> CN_UNFOLD UNAME TYPE . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN SEMICOLON [ # ]
##
## The known suffix of the stack is as follows:
## CN_UNFOLD UNAME TYPE
##

parsing "cn_statement": seen "CN_UNFOLD UNAME TYPE", expecting "LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN SEMICOLON"

cn_statement: CN_UNFOLD UNAME TYPE LPAREN WHILE
##
## Ends in an error in state: 1251.
##
## cn_statement -> CN_UNFOLD UNAME TYPE LPAREN . loption(separated_nonempty_list(COMMA,expr)) RPAREN SEMICOLON [ # ]
##
## The known suffix of the stack is as follows:
## CN_UNFOLD UNAME TYPE LPAREN
##

parsing "cn_statement": seen "CN_UNFOLD UNAME TYPE LPAREN", expecting "loption(separated_nonempty_list(COMMA,expr)) RPAREN SEMICOLON"

cn_statement: CN_UNFOLD UNAME TYPE LPAREN RPAREN WHILE
##
## Ends in an error in state: 1253.
##
## cn_statement -> CN_UNFOLD UNAME TYPE LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN . SEMICOLON [ # ]
##
## The known suffix of the stack is as follows:
## CN_UNFOLD UNAME TYPE LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN
##

parsing "cn_statement": seen "CN_UNFOLD UNAME TYPE LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN", expecting "SEMICOLON"

cn_statement: CN_UNFOLD LNAME VARIABLE WHILE
##
## Ends in an error in state: 1256.
##
## cn_statement -> CN_UNFOLD LNAME VARIABLE . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN SEMICOLON [ # ]
##
## The known suffix of the stack is as follows:
## CN_UNFOLD LNAME VARIABLE
##

parsing "cn_statement": seen "CN_UNFOLD LNAME VARIABLE", expecting "LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN SEMICOLON"

cn_statement: CN_UNFOLD LNAME VARIABLE LPAREN WHILE
##
## Ends in an error in state: 1257.
##
## cn_statement -> CN_UNFOLD LNAME VARIABLE LPAREN . loption(separated_nonempty_list(COMMA,expr)) RPAREN SEMICOLON [ # ]
##
## The known suffix of the stack is as follows:
## CN_UNFOLD LNAME VARIABLE LPAREN
##

parsing "cn_statement": seen "CN_UNFOLD LNAME VARIABLE LPAREN", expecting "loption(separated_nonempty_list(COMMA,expr)) RPAREN SEMICOLON"

cn_statement: CN_UNFOLD LNAME VARIABLE LPAREN RPAREN WHILE
##
## Ends in an error in state: 1259.
##
## cn_statement -> CN_UNFOLD LNAME VARIABLE LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN . SEMICOLON [ # ]
##
## The known suffix of the stack is as follows:
## CN_UNFOLD LNAME VARIABLE LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN
##

parsing "cn_statement": seen "CN_UNFOLD LNAME VARIABLE LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN", expecting "SEMICOLON"

cn_statement: CN_UNFOLD LNAME TYPE WHILE
##
## Ends in an error in state: 1261.
##
## cn_statement -> CN_UNFOLD LNAME TYPE . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN SEMICOLON [ # ]
##
## The known suffix of the stack is as follows:
## CN_UNFOLD LNAME TYPE
##

parsing "cn_statement": seen "CN_UNFOLD LNAME TYPE", expecting "LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN SEMICOLON"

cn_statement: CN_UNFOLD LNAME TYPE LPAREN WHILE
##
## Ends in an error in state: 1262.
##
## cn_statement -> CN_UNFOLD LNAME TYPE LPAREN . loption(separated_nonempty_list(COMMA,expr)) RPAREN SEMICOLON [ # ]
##
## The known suffix of the stack is as follows:
## CN_UNFOLD LNAME TYPE LPAREN
##

parsing "cn_statement": seen "CN_UNFOLD LNAME TYPE LPAREN", expecting "loption(separated_nonempty_list(COMMA,expr)) RPAREN SEMICOLON"

cn_statement: CN_UNFOLD LNAME TYPE LPAREN RPAREN WHILE
##
## Ends in an error in state: 1264.
##
## cn_statement -> CN_UNFOLD LNAME TYPE LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN . SEMICOLON [ # ]
##
## The known suffix of the stack is as follows:
## CN_UNFOLD LNAME TYPE LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN
##

parsing "cn_statement": seen "CN_UNFOLD LNAME TYPE LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN", expecting "SEMICOLON"

cn_statement: CN_PACK WHILE
##
## Ends in an error in state: 1266.
##
## cn_statement -> CN_PACK . pred LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN SEMICOLON [ # ]
##
## The known suffix of the stack is as follows:
## CN_PACK
##

parsing "cn_statement": seen "CN_PACK", expecting "pred LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN SEMICOLON"

cn_statement: CN_PACK CN_OWNED LPAREN WHILE
##
## Ends in an error in state: 1268.
##
## cn_statement -> CN_PACK pred LPAREN . loption(separated_nonempty_list(COMMA,expr)) RPAREN SEMICOLON [ # ]
##
## The known suffix of the stack is as follows:
## CN_PACK pred LPAREN
##

parsing "cn_statement": seen "CN_PACK pred LPAREN", expecting "loption(separated_nonempty_list(COMMA,expr)) RPAREN SEMICOLON"

cn_statement: CN_PACK CN_OWNED LPAREN RPAREN WHILE
##
## Ends in an error in state: 1270.
##
## cn_statement -> CN_PACK pred LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN . SEMICOLON [ # ]
##
## The known suffix of the stack is as follows:
## CN_PACK pred LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN
##

parsing "cn_statement": seen "CN_PACK pred LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN", expecting "SEMICOLON"

cn_statement: CN_INSTANTIATE UNAME VARIABLE COMMA WHILE
##
## Ends in an error in state: 1275.
##
## cn_statement -> CN_INSTANTIATE UNAME VARIABLE COMMA . expr SEMICOLON [ # ]
##
## The known suffix of the stack is as follows:
## CN_INSTANTIATE UNAME VARIABLE COMMA
##

parsing "cn_statement": seen "CN_INSTANTIATE UNAME VARIABLE COMMA", expecting "expr SEMICOLON"

cn_statement: CN_INSTANTIATE UNAME TYPE COMMA WHILE
##
## Ends in an error in state: 1279.
##
## cn_statement -> CN_INSTANTIATE UNAME TYPE COMMA . expr SEMICOLON [ # ]
##
## The known suffix of the stack is as follows:
## CN_INSTANTIATE UNAME TYPE COMMA
##

parsing "cn_statement": seen "CN_INSTANTIATE UNAME TYPE COMMA", expecting "expr SEMICOLON"

cn_statement: CN_INSTANTIATE LNAME VARIABLE COMMA WHILE
##
## Ends in an error in state: 1284.
##
## cn_statement -> CN_INSTANTIATE LNAME VARIABLE COMMA . expr SEMICOLON [ # ]
##
## The known suffix of the stack is as follows:
## CN_INSTANTIATE LNAME VARIABLE COMMA
##

parsing "cn_statement": seen "CN_INSTANTIATE LNAME VARIABLE COMMA", expecting "expr SEMICOLON"

cn_statement: CN_INSTANTIATE LNAME TYPE COMMA WHILE
##
## Ends in an error in state: 1288.
##
## cn_statement -> CN_INSTANTIATE LNAME TYPE COMMA . expr SEMICOLON [ # ]
##
## The known suffix of the stack is as follows:
## CN_INSTANTIATE LNAME TYPE COMMA
##

parsing "cn_statement": seen "CN_INSTANTIATE LNAME TYPE COMMA", expecting "expr SEMICOLON"

cn_statement: CN_INSTANTIATE CN_GOOD LT BOOL GT COMMA WHILE
##
## Ends in an error in state: 1294.
##
## cn_statement -> CN_INSTANTIATE cn_good COMMA . expr SEMICOLON [ # ]
##
## The known suffix of the stack is as follows:
## CN_INSTANTIATE cn_good COMMA
##

parsing "cn_statement": seen "CN_INSTANTIATE cn_good COMMA", expecting "expr SEMICOLON"

cn_statement: CN_HAVE WHILE
##
## Ends in an error in state: 1297.
##
## cn_statement -> CN_HAVE . assert_expr SEMICOLON [ # ]
##
## The known suffix of the stack is as follows:
## CN_HAVE
##

parsing "cn_statement": seen "CN_HAVE", expecting "assert_expr SEMICOLON"

cn_statement: CN_HAVE CN_EACH LPAREN CN_BOOL UNAME VARIABLE WHILE
##
## Ends in an error in state: 1302.
##
## assert_expr -> CN_EACH LPAREN base_type UNAME VARIABLE . SEMICOLON expr RPAREN LBRACE expr RBRACE [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## CN_EACH LPAREN base_type UNAME VARIABLE
##

parsing "assert_expr": seen "CN_EACH LPAREN base_type UNAME VARIABLE", expecting "SEMICOLON expr RPAREN LBRACE expr RBRACE"

cn_statement: CN_HAVE CN_EACH LPAREN CN_BOOL UNAME VARIABLE SEMICOLON WHILE
##
## Ends in an error in state: 1303.
##
## assert_expr -> CN_EACH LPAREN base_type UNAME VARIABLE SEMICOLON . expr RPAREN LBRACE expr RBRACE [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## CN_EACH LPAREN base_type UNAME VARIABLE SEMICOLON
##

parsing "assert_expr": seen "CN_EACH LPAREN base_type UNAME VARIABLE SEMICOLON", expecting "expr RPAREN LBRACE expr RBRACE"

cn_statement: CN_HAVE CN_EACH LPAREN CN_BOOL UNAME VARIABLE SEMICOLON CN_FALSE RPAREN WHILE
##
## Ends in an error in state: 1305.
##
## assert_expr -> CN_EACH LPAREN base_type UNAME VARIABLE SEMICOLON expr RPAREN . LBRACE expr RBRACE [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## CN_EACH LPAREN base_type UNAME VARIABLE SEMICOLON expr RPAREN
##

parsing "assert_expr": seen "CN_EACH LPAREN base_type UNAME VARIABLE SEMICOLON expr RPAREN", expecting "LBRACE expr RBRACE"

cn_statement: CN_HAVE CN_EACH LPAREN CN_BOOL UNAME VARIABLE SEMICOLON CN_FALSE RPAREN LBRACE WHILE
##
## Ends in an error in state: 1306.
##
## assert_expr -> CN_EACH LPAREN base_type UNAME VARIABLE SEMICOLON expr RPAREN LBRACE . expr RBRACE [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## CN_EACH LPAREN base_type UNAME VARIABLE SEMICOLON expr RPAREN LBRACE
##

parsing "assert_expr": seen "CN_EACH LPAREN base_type UNAME VARIABLE SEMICOLON expr RPAREN LBRACE", expecting "expr RBRACE"

cn_statement: CN_HAVE CN_EACH LPAREN CN_BOOL UNAME TYPE WHILE
##
## Ends in an error in state: 1309.
##
## assert_expr -> CN_EACH LPAREN base_type UNAME TYPE . SEMICOLON expr RPAREN LBRACE expr RBRACE [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## CN_EACH LPAREN base_type UNAME TYPE
##

parsing "assert_expr": seen "CN_EACH LPAREN base_type UNAME TYPE", expecting "SEMICOLON expr RPAREN LBRACE expr RBRACE"

cn_statement: CN_HAVE CN_EACH LPAREN CN_BOOL UNAME TYPE SEMICOLON WHILE
##
## Ends in an error in state: 1310.
##
## assert_expr -> CN_EACH LPAREN base_type UNAME TYPE SEMICOLON . expr RPAREN LBRACE expr RBRACE [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## CN_EACH LPAREN base_type UNAME TYPE SEMICOLON
##

parsing "assert_expr": seen "CN_EACH LPAREN base_type UNAME TYPE SEMICOLON", expecting "expr RPAREN LBRACE expr RBRACE"

cn_statement: CN_HAVE CN_EACH LPAREN CN_BOOL UNAME TYPE SEMICOLON CN_FALSE RPAREN WHILE
##
## Ends in an error in state: 1312.
##
## assert_expr -> CN_EACH LPAREN base_type UNAME TYPE SEMICOLON expr RPAREN . LBRACE expr RBRACE [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## CN_EACH LPAREN base_type UNAME TYPE SEMICOLON expr RPAREN
##

parsing "assert_expr": seen "CN_EACH LPAREN base_type UNAME TYPE SEMICOLON expr RPAREN", expecting "LBRACE expr RBRACE"

cn_statement: CN_HAVE CN_EACH LPAREN CN_BOOL UNAME TYPE SEMICOLON CN_FALSE RPAREN LBRACE WHILE
##
## Ends in an error in state: 1313.
##
## assert_expr -> CN_EACH LPAREN base_type UNAME TYPE SEMICOLON expr RPAREN LBRACE . expr RBRACE [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## CN_EACH LPAREN base_type UNAME TYPE SEMICOLON expr RPAREN LBRACE
##

parsing "assert_expr": seen "CN_EACH LPAREN base_type UNAME TYPE SEMICOLON expr RPAREN LBRACE", expecting "expr RBRACE"

cn_statement: CN_HAVE CN_EACH LPAREN CN_BOOL LNAME VARIABLE WHILE
##
## Ends in an error in state: 1317.
##
## assert_expr -> CN_EACH LPAREN base_type LNAME VARIABLE . SEMICOLON expr RPAREN LBRACE expr RBRACE [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## CN_EACH LPAREN base_type LNAME VARIABLE
##

parsing "assert_expr": seen "CN_EACH LPAREN base_type LNAME VARIABLE", expecting "SEMICOLON expr RPAREN LBRACE expr RBRACE"

cn_statement: CN_HAVE CN_EACH LPAREN CN_BOOL LNAME VARIABLE SEMICOLON WHILE
##
## Ends in an error in state: 1318.
##
## assert_expr -> CN_EACH LPAREN base_type LNAME VARIABLE SEMICOLON . expr RPAREN LBRACE expr RBRACE [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## CN_EACH LPAREN base_type LNAME VARIABLE SEMICOLON
##

parsing "assert_expr": seen "CN_EACH LPAREN base_type LNAME VARIABLE SEMICOLON", expecting "expr RPAREN LBRACE expr RBRACE"

cn_statement: CN_HAVE CN_EACH LPAREN CN_BOOL LNAME VARIABLE SEMICOLON CN_FALSE RPAREN WHILE
##
## Ends in an error in state: 1320.
##
## assert_expr -> CN_EACH LPAREN base_type LNAME VARIABLE SEMICOLON expr RPAREN . LBRACE expr RBRACE [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## CN_EACH LPAREN base_type LNAME VARIABLE SEMICOLON expr RPAREN
##

parsing "assert_expr": seen "CN_EACH LPAREN base_type LNAME VARIABLE SEMICOLON expr RPAREN", expecting "LBRACE expr RBRACE"

cn_statement: CN_HAVE CN_EACH LPAREN CN_BOOL LNAME VARIABLE SEMICOLON CN_FALSE RPAREN LBRACE WHILE
##
## Ends in an error in state: 1321.
##
## assert_expr -> CN_EACH LPAREN base_type LNAME VARIABLE SEMICOLON expr RPAREN LBRACE . expr RBRACE [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## CN_EACH LPAREN base_type LNAME VARIABLE SEMICOLON expr RPAREN LBRACE
##

parsing "assert_expr": seen "CN_EACH LPAREN base_type LNAME VARIABLE SEMICOLON expr RPAREN LBRACE", expecting "expr RBRACE"

cn_statement: CN_HAVE CN_EACH LPAREN CN_BOOL LNAME TYPE WHILE
##
## Ends in an error in state: 1324.
##
## assert_expr -> CN_EACH LPAREN base_type LNAME TYPE . SEMICOLON expr RPAREN LBRACE expr RBRACE [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## CN_EACH LPAREN base_type LNAME TYPE
##

parsing "assert_expr": seen "CN_EACH LPAREN base_type LNAME TYPE", expecting "SEMICOLON expr RPAREN LBRACE expr RBRACE"

cn_statement: CN_HAVE CN_EACH LPAREN CN_BOOL LNAME TYPE SEMICOLON WHILE
##
## Ends in an error in state: 1325.
##
## assert_expr -> CN_EACH LPAREN base_type LNAME TYPE SEMICOLON . expr RPAREN LBRACE expr RBRACE [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## CN_EACH LPAREN base_type LNAME TYPE SEMICOLON
##

parsing "assert_expr": seen "CN_EACH LPAREN base_type LNAME TYPE SEMICOLON", expecting "expr RPAREN LBRACE expr RBRACE"

cn_statement: CN_HAVE CN_EACH LPAREN CN_BOOL LNAME TYPE SEMICOLON CN_FALSE RPAREN WHILE
##
## Ends in an error in state: 1327.
##
## assert_expr -> CN_EACH LPAREN base_type LNAME TYPE SEMICOLON expr RPAREN . LBRACE expr RBRACE [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## CN_EACH LPAREN base_type LNAME TYPE SEMICOLON expr RPAREN
##

parsing "assert_expr": seen "CN_EACH LPAREN base_type LNAME TYPE SEMICOLON expr RPAREN", expecting "LBRACE expr RBRACE"

cn_statement: CN_HAVE CN_EACH LPAREN CN_BOOL LNAME TYPE SEMICOLON CN_FALSE RPAREN LBRACE WHILE
##
## Ends in an error in state: 1328.
##
## assert_expr -> CN_EACH LPAREN base_type LNAME TYPE SEMICOLON expr RPAREN LBRACE . expr RBRACE [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## CN_EACH LPAREN base_type LNAME TYPE SEMICOLON expr RPAREN LBRACE
##

parsing "assert_expr": seen "CN_EACH LPAREN base_type LNAME TYPE SEMICOLON expr RPAREN LBRACE", expecting "expr RBRACE"

cn_statement: CN_EXTRACT CN_OWNED COMMA WHILE
##
## Ends in an error in state: 1338.
##
## cn_statement -> CN_EXTRACT pred COMMA . expr SEMICOLON [ # ]
##
## The known suffix of the stack is as follows:
## CN_EXTRACT pred COMMA
##

parsing "cn_statement": seen "CN_EXTRACT pred COMMA", expecting "expr SEMICOLON"

cn_statement: CN_APPLY UNAME VARIABLE WHILE
##
## Ends in an error in state: 1345.
##
## cn_statement -> CN_APPLY UNAME VARIABLE . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN SEMICOLON [ # ]
##
## The known suffix of the stack is as follows:
## CN_APPLY UNAME VARIABLE
##

parsing "cn_statement": seen "CN_APPLY UNAME VARIABLE", expecting "LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN SEMICOLON"

cn_statement: CN_APPLY UNAME VARIABLE LPAREN WHILE
##
## Ends in an error in state: 1346.
##
## cn_statement -> CN_APPLY UNAME VARIABLE LPAREN . loption(separated_nonempty_list(COMMA,expr)) RPAREN SEMICOLON [ # ]
##
## The known suffix of the stack is as follows:
## CN_APPLY UNAME VARIABLE LPAREN
##

parsing "cn_statement": seen "CN_APPLY UNAME VARIABLE LPAREN", expecting "loption(separated_nonempty_list(COMMA,expr)) RPAREN SEMICOLON"

cn_statement: CN_APPLY UNAME VARIABLE LPAREN RPAREN WHILE
##
## Ends in an error in state: 1348.
##
## cn_statement -> CN_APPLY UNAME VARIABLE LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN . SEMICOLON [ # ]
##
## The known suffix of the stack is as follows:
## CN_APPLY UNAME VARIABLE LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN
##

parsing "cn_statement": seen "CN_APPLY UNAME VARIABLE LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN", expecting "SEMICOLON"

cn_statement: CN_APPLY UNAME TYPE WHILE
##
## Ends in an error in state: 1350.
##
## cn_statement -> CN_APPLY UNAME TYPE . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN SEMICOLON [ # ]
##
## The known suffix of the stack is as follows:
## CN_APPLY UNAME TYPE
##

parsing "cn_statement": seen "CN_APPLY UNAME TYPE", expecting "LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN SEMICOLON"

cn_statement: CN_APPLY UNAME TYPE LPAREN WHILE
##
## Ends in an error in state: 1351.
##
## cn_statement -> CN_APPLY UNAME TYPE LPAREN . loption(separated_nonempty_list(COMMA,expr)) RPAREN SEMICOLON [ # ]
##
## The known suffix of the stack is as follows:
## CN_APPLY UNAME TYPE LPAREN
##

parsing "cn_statement": seen "CN_APPLY UNAME TYPE LPAREN", expecting "loption(separated_nonempty_list(COMMA,expr)) RPAREN SEMICOLON"

cn_statement: CN_APPLY UNAME TYPE LPAREN RPAREN WHILE
##
## Ends in an error in state: 1353.
##
## cn_statement -> CN_APPLY UNAME TYPE LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN . SEMICOLON [ # ]
##
## The known suffix of the stack is as follows:
## CN_APPLY UNAME TYPE LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN
##

parsing "cn_statement": seen "CN_APPLY UNAME TYPE LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN", expecting "SEMICOLON"

cn_statement: CN_APPLY LNAME VARIABLE WHILE
##
## Ends in an error in state: 1356.
##
## cn_statement -> CN_APPLY LNAME VARIABLE . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN SEMICOLON [ # ]
##
## The known suffix of the stack is as follows:
## CN_APPLY LNAME VARIABLE
##

parsing "cn_statement": seen "CN_APPLY LNAME VARIABLE", expecting "LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN SEMICOLON"

cn_statement: CN_APPLY LNAME VARIABLE LPAREN WHILE
##
## Ends in an error in state: 1357.
##
## cn_statement -> CN_APPLY LNAME VARIABLE LPAREN . loption(separated_nonempty_list(COMMA,expr)) RPAREN SEMICOLON [ # ]
##
## The known suffix of the stack is as follows:
## CN_APPLY LNAME VARIABLE LPAREN
##

parsing "cn_statement": seen "CN_APPLY LNAME VARIABLE LPAREN", expecting "loption(separated_nonempty_list(COMMA,expr)) RPAREN SEMICOLON"

cn_statement: CN_APPLY LNAME VARIABLE LPAREN RPAREN WHILE
##
## Ends in an error in state: 1359.
##
## cn_statement -> CN_APPLY LNAME VARIABLE LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN . SEMICOLON [ # ]
##
## The known suffix of the stack is as follows:
## CN_APPLY LNAME VARIABLE LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN
##

parsing "cn_statement": seen "CN_APPLY LNAME VARIABLE LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN", expecting "SEMICOLON"

cn_statement: CN_APPLY LNAME TYPE WHILE
##
## Ends in an error in state: 1361.
##
## cn_statement -> CN_APPLY LNAME TYPE . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN SEMICOLON [ # ]
##
## The known suffix of the stack is as follows:
## CN_APPLY LNAME TYPE
##

parsing "cn_statement": seen "CN_APPLY LNAME TYPE", expecting "LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN SEMICOLON"

cn_statement: CN_APPLY LNAME TYPE LPAREN WHILE
##
## Ends in an error in state: 1362.
##
## cn_statement -> CN_APPLY LNAME TYPE LPAREN . loption(separated_nonempty_list(COMMA,expr)) RPAREN SEMICOLON [ # ]
##
## The known suffix of the stack is as follows:
## CN_APPLY LNAME TYPE LPAREN
##

parsing "cn_statement": seen "CN_APPLY LNAME TYPE LPAREN", expecting "loption(separated_nonempty_list(COMMA,expr)) RPAREN SEMICOLON"

cn_statement: CN_APPLY LNAME TYPE LPAREN RPAREN WHILE
##
## Ends in an error in state: 1364.
##
## cn_statement -> CN_APPLY LNAME TYPE LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN . SEMICOLON [ # ]
##
## The known suffix of the stack is as follows:
## CN_APPLY LNAME TYPE LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN
##

parsing "cn_statement": seen "CN_APPLY LNAME TYPE LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN", expecting "SEMICOLON"

cn_statement: ASSERT WHILE
##
## Ends in an error in state: 1366.
##
## cn_statement -> ASSERT . LPAREN assert_expr RPAREN SEMICOLON [ # ]
##
## The known suffix of the stack is as follows:
## ASSERT
##

parsing "cn_statement": seen "ASSERT", expecting "LPAREN assert_expr RPAREN SEMICOLON"

cn_statement: ASSERT LPAREN WHILE
##
## Ends in an error in state: 1367.
##
## cn_statement -> ASSERT LPAREN . assert_expr RPAREN SEMICOLON [ # ]
##
## The known suffix of the stack is as follows:
## ASSERT LPAREN
##

parsing "cn_statement": seen "ASSERT LPAREN", expecting "assert_expr RPAREN SEMICOLON"

cn_statement: ASSERT LPAREN CN_FALSE RPAREN WHILE
##
## Ends in an error in state: 1369.
##
## cn_statement -> ASSERT LPAREN assert_expr RPAREN . SEMICOLON [ # ]
##
## The known suffix of the stack is as follows:
## ASSERT LPAREN assert_expr RPAREN
##

parsing "cn_statement": seen "ASSERT LPAREN assert_expr RPAREN", expecting "SEMICOLON"

cn_toplevel: WHILE
##
## Ends in an error in state: 1372.
##
## cn_toplevel' -> . cn_toplevel [ # ]
##
## The known suffix of the stack is as follows:
##
##

parsing "cn_toplevel'": expected "cn_toplevel"

cn_toplevel: CN_SPEC UNAME VARIABLE WHILE
##
## Ends in an error in state: 1377.
##
## cn_fun_spec -> CN_SPEC enter_cn UNAME VARIABLE . LPAREN args RPAREN CN_REQUIRES separated_nonempty_list(SEMICOLON,condition) CN_ENSURES separated_nonempty_list(SEMICOLON,condition) exit_cn [ EOF CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE ]
##
## The known suffix of the stack is as follows:
## CN_SPEC enter_cn UNAME VARIABLE
##

parsing "cn_fun_spec": seen "CN_SPEC enter_cn UNAME VARIABLE", expecting "LPAREN args RPAREN CN_REQUIRES separated_nonempty_list(SEMICOLON,condition) CN_ENSURES separated_nonempty_list(SEMICOLON,condition) exit_cn"

cn_toplevel: CN_SPEC UNAME VARIABLE LPAREN WHILE
##
## Ends in an error in state: 1378.
##
## cn_fun_spec -> CN_SPEC enter_cn UNAME VARIABLE LPAREN . args RPAREN CN_REQUIRES separated_nonempty_list(SEMICOLON,condition) CN_ENSURES separated_nonempty_list(SEMICOLON,condition) exit_cn [ EOF CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE ]
##
## The known suffix of the stack is as follows:
## CN_SPEC enter_cn UNAME VARIABLE LPAREN
##

parsing "cn_fun_spec": seen "CN_SPEC enter_cn UNAME VARIABLE LPAREN", expecting "args RPAREN CN_REQUIRES separated_nonempty_list(SEMICOLON,condition) CN_ENSURES separated_nonempty_list(SEMICOLON,condition) exit_cn"

cn_toplevel: CN_SPEC UNAME VARIABLE LPAREN RPAREN WHILE
##
## Ends in an error in state: 1382.
##
## cn_fun_spec -> CN_SPEC enter_cn UNAME VARIABLE LPAREN args RPAREN . CN_REQUIRES separated_nonempty_list(SEMICOLON,condition) CN_ENSURES separated_nonempty_list(SEMICOLON,condition) exit_cn [ EOF CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE ]
##
## The known suffix of the stack is as follows:
## CN_SPEC enter_cn UNAME VARIABLE LPAREN args RPAREN
##

parsing "cn_fun_spec": seen "CN_SPEC enter_cn UNAME VARIABLE LPAREN args RPAREN", expecting "CN_REQUIRES separated_nonempty_list(SEMICOLON,condition) CN_ENSURES separated_nonempty_list(SEMICOLON,condition) exit_cn"

cn_toplevel: CN_SPEC UNAME VARIABLE LPAREN RPAREN CN_REQUIRES WHILE
##
## Ends in an error in state: 1383.
##
## cn_fun_spec -> CN_SPEC enter_cn UNAME VARIABLE LPAREN args RPAREN CN_REQUIRES . separated_nonempty_list(SEMICOLON,condition) CN_ENSURES separated_nonempty_list(SEMICOLON,condition) exit_cn [ EOF CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE ]
##
## The known suffix of the stack is as follows:
## CN_SPEC enter_cn UNAME VARIABLE LPAREN args RPAREN CN_REQUIRES
##

parsing "cn_fun_spec": seen "CN_SPEC enter_cn UNAME VARIABLE LPAREN args RPAREN CN_REQUIRES", expecting "separated_nonempty_list(SEMICOLON,condition) CN_ENSURES separated_nonempty_list(SEMICOLON,condition) exit_cn"

function_spec: CN_ENSURES CN_TAKE UNAME VARIABLE WHILE
##
## Ends in an error in state: 1386.
##
## condition -> CN_TAKE UNAME VARIABLE . EQ resource [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## CN_TAKE UNAME VARIABLE
##

parsing "condition": seen "CN_TAKE UNAME VARIABLE", expecting "EQ resource"

function_spec: CN_ENSURES CN_TAKE UNAME VARIABLE EQ WHILE
##
## Ends in an error in state: 1387.
##
## condition -> CN_TAKE UNAME VARIABLE EQ . resource [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## CN_TAKE UNAME VARIABLE EQ
##

parsing "condition": seen "CN_TAKE UNAME VARIABLE EQ", expecting "resource"

function_spec: CN_ENSURES CN_TAKE LNAME TYPE EQ CN_EACH LPAREN CN_BOOL UNAME VARIABLE WHILE
##
## Ends in an error in state: 1392.
##
## resource -> CN_EACH LPAREN base_type UNAME VARIABLE . SEMICOLON expr RPAREN LBRACE pred LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN RBRACE [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## CN_EACH LPAREN base_type UNAME VARIABLE
##

parsing "resource": seen "CN_EACH LPAREN base_type UNAME VARIABLE", expecting "SEMICOLON expr RPAREN LBRACE pred LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN RBRACE"

function_spec: CN_ENSURES CN_TAKE LNAME TYPE EQ CN_EACH LPAREN CN_BOOL UNAME VARIABLE SEMICOLON WHILE
##
## Ends in an error in state: 1393.
##
## resource -> CN_EACH LPAREN base_type UNAME VARIABLE SEMICOLON . expr RPAREN LBRACE pred LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN RBRACE [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## CN_EACH LPAREN base_type UNAME VARIABLE SEMICOLON
##

parsing "resource": seen "CN_EACH LPAREN base_type UNAME VARIABLE SEMICOLON", expecting "expr RPAREN LBRACE pred LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN RBRACE"

function_spec: CN_ENSURES CN_TAKE LNAME TYPE EQ CN_EACH LPAREN CN_BOOL UNAME VARIABLE SEMICOLON CN_FALSE RPAREN WHILE
##
## Ends in an error in state: 1395.
##
## resource -> CN_EACH LPAREN base_type UNAME VARIABLE SEMICOLON expr RPAREN . LBRACE pred LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN RBRACE [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## CN_EACH LPAREN base_type UNAME VARIABLE SEMICOLON expr RPAREN
##

parsing "resource": seen "CN_EACH LPAREN base_type UNAME VARIABLE SEMICOLON expr RPAREN", expecting "LBRACE pred LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN RBRACE"

function_spec: CN_ENSURES CN_TAKE LNAME TYPE EQ CN_EACH LPAREN CN_BOOL UNAME VARIABLE SEMICOLON CN_FALSE RPAREN LBRACE WHILE
##
## Ends in an error in state: 1396.
##
## resource -> CN_EACH LPAREN base_type UNAME VARIABLE SEMICOLON expr RPAREN LBRACE . pred LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN RBRACE [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## CN_EACH LPAREN base_type UNAME VARIABLE SEMICOLON expr RPAREN LBRACE
##

parsing "resource": seen "CN_EACH LPAREN base_type UNAME VARIABLE SEMICOLON expr RPAREN LBRACE", expecting "pred LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN RBRACE"

function_spec: CN_ENSURES CN_TAKE LNAME TYPE EQ CN_EACH LPAREN CN_BOOL UNAME VARIABLE SEMICOLON CN_FALSE RPAREN LBRACE CN_OWNED LPAREN WHILE
##
## Ends in an error in state: 1398.
##
## resource -> CN_EACH LPAREN base_type UNAME VARIABLE SEMICOLON expr RPAREN LBRACE pred LPAREN . loption(separated_nonempty_list(COMMA,expr)) RPAREN RBRACE [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## CN_EACH LPAREN base_type UNAME VARIABLE SEMICOLON expr RPAREN LBRACE pred LPAREN
##

parsing "resource": seen "CN_EACH LPAREN base_type UNAME VARIABLE SEMICOLON expr RPAREN LBRACE pred LPAREN", expecting "loption(separated_nonempty_list(COMMA,expr)) RPAREN RBRACE"

function_spec: CN_ENSURES CN_TAKE LNAME TYPE EQ CN_EACH LPAREN CN_BOOL UNAME VARIABLE SEMICOLON CN_FALSE RPAREN LBRACE CN_OWNED LPAREN RPAREN WHILE
##
## Ends in an error in state: 1400.
##
## resource -> CN_EACH LPAREN base_type UNAME VARIABLE SEMICOLON expr RPAREN LBRACE pred LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN . RBRACE [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## CN_EACH LPAREN base_type UNAME VARIABLE SEMICOLON expr RPAREN LBRACE pred LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN
##

parsing "resource": seen "CN_EACH LPAREN base_type UNAME VARIABLE SEMICOLON expr RPAREN LBRACE pred LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN", expecting "RBRACE"

function_spec: CN_ENSURES CN_TAKE LNAME TYPE EQ CN_EACH LPAREN CN_BOOL UNAME TYPE WHILE
##
## Ends in an error in state: 1402.
##
## resource -> CN_EACH LPAREN base_type UNAME TYPE . SEMICOLON expr RPAREN LBRACE pred LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN RBRACE [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## CN_EACH LPAREN base_type UNAME TYPE
##

parsing "resource": seen "CN_EACH LPAREN base_type UNAME TYPE", expecting "SEMICOLON expr RPAREN LBRACE pred LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN RBRACE"

function_spec: CN_ENSURES CN_TAKE LNAME TYPE EQ CN_EACH LPAREN CN_BOOL UNAME TYPE SEMICOLON WHILE
##
## Ends in an error in state: 1403.
##
## resource -> CN_EACH LPAREN base_type UNAME TYPE SEMICOLON . expr RPAREN LBRACE pred LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN RBRACE [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## CN_EACH LPAREN base_type UNAME TYPE SEMICOLON
##

parsing "resource": seen "CN_EACH LPAREN base_type UNAME TYPE SEMICOLON", expecting "expr RPAREN LBRACE pred LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN RBRACE"

function_spec: CN_ENSURES CN_TAKE LNAME TYPE EQ CN_EACH LPAREN CN_BOOL UNAME TYPE SEMICOLON CN_FALSE RPAREN WHILE
##
## Ends in an error in state: 1405.
##
## resource -> CN_EACH LPAREN base_type UNAME TYPE SEMICOLON expr RPAREN . LBRACE pred LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN RBRACE [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## CN_EACH LPAREN base_type UNAME TYPE SEMICOLON expr RPAREN
##

parsing "resource": seen "CN_EACH LPAREN base_type UNAME TYPE SEMICOLON expr RPAREN", expecting "LBRACE pred LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN RBRACE"

function_spec: CN_ENSURES CN_TAKE LNAME TYPE EQ CN_EACH LPAREN CN_BOOL UNAME TYPE SEMICOLON CN_FALSE RPAREN LBRACE WHILE
##
## Ends in an error in state: 1406.
##
## resource -> CN_EACH LPAREN base_type UNAME TYPE SEMICOLON expr RPAREN LBRACE . pred LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN RBRACE [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## CN_EACH LPAREN base_type UNAME TYPE SEMICOLON expr RPAREN LBRACE
##

parsing "resource": seen "CN_EACH LPAREN base_type UNAME TYPE SEMICOLON expr RPAREN LBRACE", expecting "pred LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN RBRACE"

function_spec: CN_ENSURES CN_TAKE LNAME TYPE EQ CN_EACH LPAREN CN_BOOL UNAME TYPE SEMICOLON CN_FALSE RPAREN LBRACE CN_OWNED LPAREN WHILE
##
## Ends in an error in state: 1408.
##
## resource -> CN_EACH LPAREN base_type UNAME TYPE SEMICOLON expr RPAREN LBRACE pred LPAREN . loption(separated_nonempty_list(COMMA,expr)) RPAREN RBRACE [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## CN_EACH LPAREN base_type UNAME TYPE SEMICOLON expr RPAREN LBRACE pred LPAREN
##

parsing "resource": seen "CN_EACH LPAREN base_type UNAME TYPE SEMICOLON expr RPAREN LBRACE pred LPAREN", expecting "loption(separated_nonempty_list(COMMA,expr)) RPAREN RBRACE"

function_spec: CN_ENSURES CN_TAKE LNAME TYPE EQ CN_EACH LPAREN CN_BOOL UNAME TYPE SEMICOLON CN_FALSE RPAREN LBRACE CN_OWNED LPAREN RPAREN WHILE
##
## Ends in an error in state: 1410.
##
## resource -> CN_EACH LPAREN base_type UNAME TYPE SEMICOLON expr RPAREN LBRACE pred LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN . RBRACE [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## CN_EACH LPAREN base_type UNAME TYPE SEMICOLON expr RPAREN LBRACE pred LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN
##

parsing "resource": seen "CN_EACH LPAREN base_type UNAME TYPE SEMICOLON expr RPAREN LBRACE pred LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN", expecting "RBRACE"

function_spec: CN_ENSURES CN_TAKE LNAME TYPE EQ CN_EACH LPAREN CN_BOOL LNAME VARIABLE WHILE
##
## Ends in an error in state: 1413.
##
## resource -> CN_EACH LPAREN base_type LNAME VARIABLE . SEMICOLON expr RPAREN LBRACE pred LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN RBRACE [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## CN_EACH LPAREN base_type LNAME VARIABLE
##

parsing "resource": seen "CN_EACH LPAREN base_type LNAME VARIABLE", expecting "SEMICOLON expr RPAREN LBRACE pred LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN RBRACE"

function_spec: CN_ENSURES CN_TAKE LNAME TYPE EQ CN_EACH LPAREN CN_BOOL LNAME VARIABLE SEMICOLON WHILE
##
## Ends in an error in state: 1414.
##
## resource -> CN_EACH LPAREN base_type LNAME VARIABLE SEMICOLON . expr RPAREN LBRACE pred LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN RBRACE [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## CN_EACH LPAREN base_type LNAME VARIABLE SEMICOLON
##

parsing "resource": seen "CN_EACH LPAREN base_type LNAME VARIABLE SEMICOLON", expecting "expr RPAREN LBRACE pred LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN RBRACE"

function_spec: CN_ENSURES CN_TAKE LNAME TYPE EQ CN_EACH LPAREN CN_BOOL LNAME VARIABLE SEMICOLON CN_FALSE RPAREN WHILE
##
## Ends in an error in state: 1416.
##
## resource -> CN_EACH LPAREN base_type LNAME VARIABLE SEMICOLON expr RPAREN . LBRACE pred LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN RBRACE [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## CN_EACH LPAREN base_type LNAME VARIABLE SEMICOLON expr RPAREN
##

parsing "resource": seen "CN_EACH LPAREN base_type LNAME VARIABLE SEMICOLON expr RPAREN", expecting "LBRACE pred LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN RBRACE"

function_spec: CN_ENSURES CN_TAKE LNAME TYPE EQ CN_EACH LPAREN CN_BOOL LNAME VARIABLE SEMICOLON CN_FALSE RPAREN LBRACE WHILE
##
## Ends in an error in state: 1417.
##
## resource -> CN_EACH LPAREN base_type LNAME VARIABLE SEMICOLON expr RPAREN LBRACE . pred LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN RBRACE [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## CN_EACH LPAREN base_type LNAME VARIABLE SEMICOLON expr RPAREN LBRACE
##

parsing "resource": seen "CN_EACH LPAREN base_type LNAME VARIABLE SEMICOLON expr RPAREN LBRACE", expecting "pred LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN RBRACE"

function_spec: CN_ENSURES CN_TAKE LNAME TYPE EQ CN_EACH LPAREN CN_BOOL LNAME VARIABLE SEMICOLON CN_FALSE RPAREN LBRACE CN_OWNED LPAREN WHILE
##
## Ends in an error in state: 1419.
##
## resource -> CN_EACH LPAREN base_type LNAME VARIABLE SEMICOLON expr RPAREN LBRACE pred LPAREN . loption(separated_nonempty_list(COMMA,expr)) RPAREN RBRACE [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## CN_EACH LPAREN base_type LNAME VARIABLE SEMICOLON expr RPAREN LBRACE pred LPAREN
##

parsing "resource": seen "CN_EACH LPAREN base_type LNAME VARIABLE SEMICOLON expr RPAREN LBRACE pred LPAREN", expecting "loption(separated_nonempty_list(COMMA,expr)) RPAREN RBRACE"

function_spec: CN_ENSURES CN_TAKE LNAME TYPE EQ CN_EACH LPAREN CN_BOOL LNAME VARIABLE SEMICOLON CN_FALSE RPAREN LBRACE CN_OWNED LPAREN RPAREN WHILE
##
## Ends in an error in state: 1421.
##
## resource -> CN_EACH LPAREN base_type LNAME VARIABLE SEMICOLON expr RPAREN LBRACE pred LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN . RBRACE [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## CN_EACH LPAREN base_type LNAME VARIABLE SEMICOLON expr RPAREN LBRACE pred LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN
##

parsing "resource": seen "CN_EACH LPAREN base_type LNAME VARIABLE SEMICOLON expr RPAREN LBRACE pred LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN", expecting "RBRACE"

function_spec: CN_ENSURES CN_TAKE LNAME TYPE EQ CN_EACH LPAREN CN_BOOL LNAME TYPE WHILE
##
## Ends in an error in state: 1423.
##
## resource -> CN_EACH LPAREN base_type LNAME TYPE . SEMICOLON expr RPAREN LBRACE pred LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN RBRACE [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## CN_EACH LPAREN base_type LNAME TYPE
##

parsing "resource": seen "CN_EACH LPAREN base_type LNAME TYPE", expecting "SEMICOLON expr RPAREN LBRACE pred LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN RBRACE"

function_spec: CN_ENSURES CN_TAKE LNAME TYPE EQ CN_EACH LPAREN CN_BOOL LNAME TYPE SEMICOLON WHILE
##
## Ends in an error in state: 1424.
##
## resource -> CN_EACH LPAREN base_type LNAME TYPE SEMICOLON . expr RPAREN LBRACE pred LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN RBRACE [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## CN_EACH LPAREN base_type LNAME TYPE SEMICOLON
##

parsing "resource": seen "CN_EACH LPAREN base_type LNAME TYPE SEMICOLON", expecting "expr RPAREN LBRACE pred LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN RBRACE"

function_spec: CN_ENSURES CN_TAKE LNAME TYPE EQ CN_EACH LPAREN CN_BOOL LNAME TYPE SEMICOLON CN_FALSE RPAREN WHILE
##
## Ends in an error in state: 1426.
##
## resource -> CN_EACH LPAREN base_type LNAME TYPE SEMICOLON expr RPAREN . LBRACE pred LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN RBRACE [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## CN_EACH LPAREN base_type LNAME TYPE SEMICOLON expr RPAREN
##

parsing "resource": seen "CN_EACH LPAREN base_type LNAME TYPE SEMICOLON expr RPAREN", expecting "LBRACE pred LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN RBRACE"

function_spec: CN_ENSURES CN_TAKE LNAME TYPE EQ CN_EACH LPAREN CN_BOOL LNAME TYPE SEMICOLON CN_FALSE RPAREN LBRACE WHILE
##
## Ends in an error in state: 1427.
##
## resource -> CN_EACH LPAREN base_type LNAME TYPE SEMICOLON expr RPAREN LBRACE . pred LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN RBRACE [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## CN_EACH LPAREN base_type LNAME TYPE SEMICOLON expr RPAREN LBRACE
##

parsing "resource": seen "CN_EACH LPAREN base_type LNAME TYPE SEMICOLON expr RPAREN LBRACE", expecting "pred LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN RBRACE"

function_spec: CN_ENSURES CN_TAKE LNAME TYPE EQ CN_EACH LPAREN CN_BOOL LNAME TYPE SEMICOLON CN_FALSE RPAREN LBRACE CN_OWNED LPAREN WHILE
##
## Ends in an error in state: 1429.
##
## resource -> CN_EACH LPAREN base_type LNAME TYPE SEMICOLON expr RPAREN LBRACE pred LPAREN . loption(separated_nonempty_list(COMMA,expr)) RPAREN RBRACE [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## CN_EACH LPAREN base_type LNAME TYPE SEMICOLON expr RPAREN LBRACE pred LPAREN
##

parsing "resource": seen "CN_EACH LPAREN base_type LNAME TYPE SEMICOLON expr RPAREN LBRACE pred LPAREN", expecting "loption(separated_nonempty_list(COMMA,expr)) RPAREN RBRACE"

function_spec: CN_ENSURES CN_TAKE LNAME TYPE EQ CN_EACH LPAREN CN_BOOL LNAME TYPE SEMICOLON CN_FALSE RPAREN LBRACE CN_OWNED LPAREN RPAREN WHILE
##
## Ends in an error in state: 1431.
##
## resource -> CN_EACH LPAREN base_type LNAME TYPE SEMICOLON expr RPAREN LBRACE pred LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN . RBRACE [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## CN_EACH LPAREN base_type LNAME TYPE SEMICOLON expr RPAREN LBRACE pred LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN
##

parsing "resource": seen "CN_EACH LPAREN base_type LNAME TYPE SEMICOLON expr RPAREN LBRACE pred LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN", expecting "RBRACE"

function_spec: CN_ENSURES CN_TAKE LNAME TYPE EQ CN_OWNED LPAREN WHILE
##
## Ends in an error in state: 1435.
##
## resource -> pred LPAREN . loption(separated_nonempty_list(COMMA,expr)) RPAREN [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## pred LPAREN
##

parsing "resource": seen "pred LPAREN", expecting "loption(separated_nonempty_list(COMMA,expr)) RPAREN"

function_spec: CN_ENSURES CN_TAKE UNAME TYPE WHILE
##
## Ends in an error in state: 1438.
##
## condition -> CN_TAKE UNAME TYPE . EQ resource [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## CN_TAKE UNAME TYPE
##

parsing "condition": seen "CN_TAKE UNAME TYPE", expecting "EQ resource"

function_spec: CN_ENSURES CN_TAKE UNAME TYPE EQ WHILE
##
## Ends in an error in state: 1439.
##
## condition -> CN_TAKE UNAME TYPE EQ . resource [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## CN_TAKE UNAME TYPE EQ
##

parsing "condition": seen "CN_TAKE UNAME TYPE EQ", expecting "resource"

function_spec: CN_ENSURES CN_TAKE LNAME VARIABLE WHILE
##
## Ends in an error in state: 1442.
##
## condition -> CN_TAKE LNAME VARIABLE . EQ resource [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## CN_TAKE LNAME VARIABLE
##

parsing "condition": seen "CN_TAKE LNAME VARIABLE", expecting "EQ resource"

function_spec: CN_ENSURES CN_TAKE LNAME VARIABLE EQ WHILE
##
## Ends in an error in state: 1443.
##
## condition -> CN_TAKE LNAME VARIABLE EQ . resource [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## CN_TAKE LNAME VARIABLE EQ
##

parsing "condition": seen "CN_TAKE LNAME VARIABLE EQ", expecting "resource"

function_spec: CN_ENSURES CN_TAKE LNAME TYPE WHILE
##
## Ends in an error in state: 1445.
##
## condition -> CN_TAKE LNAME TYPE . EQ resource [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## CN_TAKE LNAME TYPE
##

parsing "condition": seen "CN_TAKE LNAME TYPE", expecting "EQ resource"

function_spec: CN_ENSURES CN_TAKE LNAME TYPE EQ WHILE
##
## Ends in an error in state: 1446.
##
## condition -> CN_TAKE LNAME TYPE EQ . resource [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## CN_TAKE LNAME TYPE EQ
##

parsing "condition": seen "CN_TAKE LNAME TYPE EQ", expecting "resource"

function_spec: CN_ENSURES CN_LET UNAME VARIABLE WHILE
##
## Ends in an error in state: 1450.
##
## condition -> CN_LET UNAME VARIABLE . EQ expr [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## CN_LET UNAME VARIABLE
##

parsing "condition": seen "CN_LET UNAME VARIABLE", expecting "EQ expr"

function_spec: CN_ENSURES CN_LET UNAME VARIABLE EQ WHILE
##
## Ends in an error in state: 1451.
##
## condition -> CN_LET UNAME VARIABLE EQ . expr [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## CN_LET UNAME VARIABLE EQ
##

parsing "condition": seen "CN_LET UNAME VARIABLE EQ", expecting "expr"

function_spec: CN_ENSURES CN_LET UNAME TYPE WHILE
##
## Ends in an error in state: 1453.
##
## condition -> CN_LET UNAME TYPE . EQ expr [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## CN_LET UNAME TYPE
##

parsing "condition": seen "CN_LET UNAME TYPE", expecting "EQ expr"

function_spec: CN_ENSURES CN_LET UNAME TYPE EQ WHILE
##
## Ends in an error in state: 1454.
##
## condition -> CN_LET UNAME TYPE EQ . expr [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## CN_LET UNAME TYPE EQ
##

parsing "condition": seen "CN_LET UNAME TYPE EQ", expecting "expr"

function_spec: CN_ENSURES CN_LET LNAME VARIABLE WHILE
##
## Ends in an error in state: 1457.
##
## condition -> CN_LET LNAME VARIABLE . EQ expr [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## CN_LET LNAME VARIABLE
##

parsing "condition": seen "CN_LET LNAME VARIABLE", expecting "EQ expr"

function_spec: CN_ENSURES CN_LET LNAME VARIABLE EQ WHILE
##
## Ends in an error in state: 1458.
##
## condition -> CN_LET LNAME VARIABLE EQ . expr [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## CN_LET LNAME VARIABLE EQ
##

parsing "condition": seen "CN_LET LNAME VARIABLE EQ", expecting "expr"

function_spec: CN_ENSURES CN_LET LNAME TYPE WHILE
##
## Ends in an error in state: 1460.
##
## condition -> CN_LET LNAME TYPE . EQ expr [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## CN_LET LNAME TYPE
##

parsing "condition": seen "CN_LET LNAME TYPE", expecting "EQ expr"

function_spec: CN_ENSURES CN_LET LNAME TYPE EQ WHILE
##
## Ends in an error in state: 1461.
##
## condition -> CN_LET LNAME TYPE EQ . expr [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## CN_LET LNAME TYPE EQ
##

parsing "condition": seen "CN_LET LNAME TYPE EQ", expecting "expr"

cn_toplevel: CN_SPEC UNAME VARIABLE LPAREN RPAREN CN_REQUIRES CN_FALSE CN_ENSURES WHILE
##
## Ends in an error in state: 1464.
##
## cn_fun_spec -> CN_SPEC enter_cn UNAME VARIABLE LPAREN args RPAREN CN_REQUIRES separated_nonempty_list(SEMICOLON,condition) CN_ENSURES . separated_nonempty_list(SEMICOLON,condition) exit_cn [ EOF CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE ]
##
## The known suffix of the stack is as follows:
## CN_SPEC enter_cn UNAME VARIABLE LPAREN args RPAREN CN_REQUIRES separated_nonempty_list(SEMICOLON,condition) CN_ENSURES
##

parsing "cn_fun_spec": seen "CN_SPEC enter_cn UNAME VARIABLE LPAREN args RPAREN CN_REQUIRES separated_nonempty_list(SEMICOLON,condition) CN_ENSURES", expecting "separated_nonempty_list(SEMICOLON,condition) exit_cn"

function_spec: CN_ENSURES CN_FALSE SEMICOLON WHILE
##
## Ends in an error in state: 1468.
##
## separated_nonempty_list(SEMICOLON,condition) -> condition SEMICOLON . separated_nonempty_list(SEMICOLON,condition) [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## condition SEMICOLON
##

parsing "separated_nonempty_list(SEMICOLON,condition)": seen "condition SEMICOLON", expecting "separated_nonempty_list(SEMICOLON,condition)"

cn_toplevel: CN_SPEC UNAME TYPE WHILE
##
## Ends in an error in state: 1471.
##
## cn_fun_spec -> CN_SPEC enter_cn UNAME TYPE . LPAREN args RPAREN CN_REQUIRES separated_nonempty_list(SEMICOLON,condition) CN_ENSURES separated_nonempty_list(SEMICOLON,condition) exit_cn [ EOF CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE ]
##
## The known suffix of the stack is as follows:
## CN_SPEC enter_cn UNAME TYPE
##

parsing "cn_fun_spec": seen "CN_SPEC enter_cn UNAME TYPE", expecting "LPAREN args RPAREN CN_REQUIRES separated_nonempty_list(SEMICOLON,condition) CN_ENSURES separated_nonempty_list(SEMICOLON,condition) exit_cn"

cn_toplevel: CN_SPEC UNAME TYPE LPAREN WHILE
##
## Ends in an error in state: 1472.
##
## cn_fun_spec -> CN_SPEC enter_cn UNAME TYPE LPAREN . args RPAREN CN_REQUIRES separated_nonempty_list(SEMICOLON,condition) CN_ENSURES separated_nonempty_list(SEMICOLON,condition) exit_cn [ EOF CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE ]
##
## The known suffix of the stack is as follows:
## CN_SPEC enter_cn UNAME TYPE LPAREN
##

parsing "cn_fun_spec": seen "CN_SPEC enter_cn UNAME TYPE LPAREN", expecting "args RPAREN CN_REQUIRES separated_nonempty_list(SEMICOLON,condition) CN_ENSURES separated_nonempty_list(SEMICOLON,condition) exit_cn"

cn_toplevel: CN_SPEC UNAME TYPE LPAREN RPAREN WHILE
##
## Ends in an error in state: 1474.
##
## cn_fun_spec -> CN_SPEC enter_cn UNAME TYPE LPAREN args RPAREN . CN_REQUIRES separated_nonempty_list(SEMICOLON,condition) CN_ENSURES separated_nonempty_list(SEMICOLON,condition) exit_cn [ EOF CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE ]
##
## The known suffix of the stack is as follows:
## CN_SPEC enter_cn UNAME TYPE LPAREN args RPAREN
##

parsing "cn_fun_spec": seen "CN_SPEC enter_cn UNAME TYPE LPAREN args RPAREN", expecting "CN_REQUIRES separated_nonempty_list(SEMICOLON,condition) CN_ENSURES separated_nonempty_list(SEMICOLON,condition) exit_cn"

cn_toplevel: CN_SPEC UNAME TYPE LPAREN RPAREN CN_REQUIRES WHILE
##
## Ends in an error in state: 1475.
##
## cn_fun_spec -> CN_SPEC enter_cn UNAME TYPE LPAREN args RPAREN CN_REQUIRES . separated_nonempty_list(SEMICOLON,condition) CN_ENSURES separated_nonempty_list(SEMICOLON,condition) exit_cn [ EOF CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE ]
##
## The known suffix of the stack is as follows:
## CN_SPEC enter_cn UNAME TYPE LPAREN args RPAREN CN_REQUIRES
##

parsing "cn_fun_spec": seen "CN_SPEC enter_cn UNAME TYPE LPAREN args RPAREN CN_REQUIRES", expecting "separated_nonempty_list(SEMICOLON,condition) CN_ENSURES separated_nonempty_list(SEMICOLON,condition) exit_cn"

cn_toplevel: CN_SPEC UNAME TYPE LPAREN RPAREN CN_REQUIRES CN_FALSE CN_ENSURES WHILE
##
## Ends in an error in state: 1477.
##
## cn_fun_spec -> CN_SPEC enter_cn UNAME TYPE LPAREN args RPAREN CN_REQUIRES separated_nonempty_list(SEMICOLON,condition) CN_ENSURES . separated_nonempty_list(SEMICOLON,condition) exit_cn [ EOF CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE ]
##
## The known suffix of the stack is as follows:
## CN_SPEC enter_cn UNAME TYPE LPAREN args RPAREN CN_REQUIRES separated_nonempty_list(SEMICOLON,condition) CN_ENSURES
##

parsing "cn_fun_spec": seen "CN_SPEC enter_cn UNAME TYPE LPAREN args RPAREN CN_REQUIRES separated_nonempty_list(SEMICOLON,condition) CN_ENSURES", expecting "separated_nonempty_list(SEMICOLON,condition) exit_cn"

cn_toplevel: CN_SPEC LNAME VARIABLE WHILE
##
## Ends in an error in state: 1481.
##
## cn_fun_spec -> CN_SPEC enter_cn LNAME VARIABLE . LPAREN args RPAREN CN_REQUIRES separated_nonempty_list(SEMICOLON,condition) CN_ENSURES separated_nonempty_list(SEMICOLON,condition) exit_cn [ EOF CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE ]
##
## The known suffix of the stack is as follows:
## CN_SPEC enter_cn LNAME VARIABLE
##

parsing "cn_fun_spec": seen "CN_SPEC enter_cn LNAME VARIABLE", expecting "LPAREN args RPAREN CN_REQUIRES separated_nonempty_list(SEMICOLON,condition) CN_ENSURES separated_nonempty_list(SEMICOLON,condition) exit_cn"

cn_toplevel: CN_SPEC LNAME VARIABLE LPAREN WHILE
##
## Ends in an error in state: 1482.
##
## cn_fun_spec -> CN_SPEC enter_cn LNAME VARIABLE LPAREN . args RPAREN CN_REQUIRES separated_nonempty_list(SEMICOLON,condition) CN_ENSURES separated_nonempty_list(SEMICOLON,condition) exit_cn [ EOF CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE ]
##
## The known suffix of the stack is as follows:
## CN_SPEC enter_cn LNAME VARIABLE LPAREN
##

parsing "cn_fun_spec": seen "CN_SPEC enter_cn LNAME VARIABLE LPAREN", expecting "args RPAREN CN_REQUIRES separated_nonempty_list(SEMICOLON,condition) CN_ENSURES separated_nonempty_list(SEMICOLON,condition) exit_cn"

cn_toplevel: CN_SPEC LNAME VARIABLE LPAREN RPAREN WHILE
##
## Ends in an error in state: 1484.
##
## cn_fun_spec -> CN_SPEC enter_cn LNAME VARIABLE LPAREN args RPAREN . CN_REQUIRES separated_nonempty_list(SEMICOLON,condition) CN_ENSURES separated_nonempty_list(SEMICOLON,condition) exit_cn [ EOF CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE ]
##
## The known suffix of the stack is as follows:
## CN_SPEC enter_cn LNAME VARIABLE LPAREN args RPAREN
##

parsing "cn_fun_spec": seen "CN_SPEC enter_cn LNAME VARIABLE LPAREN args RPAREN", expecting "CN_REQUIRES separated_nonempty_list(SEMICOLON,condition) CN_ENSURES separated_nonempty_list(SEMICOLON,condition) exit_cn"

cn_toplevel: CN_SPEC LNAME VARIABLE LPAREN RPAREN CN_REQUIRES WHILE
##
## Ends in an error in state: 1485.
##
## cn_fun_spec -> CN_SPEC enter_cn LNAME VARIABLE LPAREN args RPAREN CN_REQUIRES . separated_nonempty_list(SEMICOLON,condition) CN_ENSURES separated_nonempty_list(SEMICOLON,condition) exit_cn [ EOF CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE ]
##
## The known suffix of the stack is as follows:
## CN_SPEC enter_cn LNAME VARIABLE LPAREN args RPAREN CN_REQUIRES
##

parsing "cn_fun_spec": seen "CN_SPEC enter_cn LNAME VARIABLE LPAREN args RPAREN CN_REQUIRES", expecting "separated_nonempty_list(SEMICOLON,condition) CN_ENSURES separated_nonempty_list(SEMICOLON,condition) exit_cn"

cn_toplevel: CN_SPEC LNAME VARIABLE LPAREN RPAREN CN_REQUIRES CN_FALSE CN_ENSURES WHILE
##
## Ends in an error in state: 1487.
##
## cn_fun_spec -> CN_SPEC enter_cn LNAME VARIABLE LPAREN args RPAREN CN_REQUIRES separated_nonempty_list(SEMICOLON,condition) CN_ENSURES . separated_nonempty_list(SEMICOLON,condition) exit_cn [ EOF CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE ]
##
## The known suffix of the stack is as follows:
## CN_SPEC enter_cn LNAME VARIABLE LPAREN args RPAREN CN_REQUIRES separated_nonempty_list(SEMICOLON,condition) CN_ENSURES
##

parsing "cn_fun_spec": seen "CN_SPEC enter_cn LNAME VARIABLE LPAREN args RPAREN CN_REQUIRES separated_nonempty_list(SEMICOLON,condition) CN_ENSURES", expecting "separated_nonempty_list(SEMICOLON,condition) exit_cn"

cn_toplevel: CN_SPEC LNAME TYPE WHILE
##
## Ends in an error in state: 1490.
##
## cn_fun_spec -> CN_SPEC enter_cn LNAME TYPE . LPAREN args RPAREN CN_REQUIRES separated_nonempty_list(SEMICOLON,condition) CN_ENSURES separated_nonempty_list(SEMICOLON,condition) exit_cn [ EOF CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE ]
##
## The known suffix of the stack is as follows:
## CN_SPEC enter_cn LNAME TYPE
##

parsing "cn_fun_spec": seen "CN_SPEC enter_cn LNAME TYPE", expecting "LPAREN args RPAREN CN_REQUIRES separated_nonempty_list(SEMICOLON,condition) CN_ENSURES separated_nonempty_list(SEMICOLON,condition) exit_cn"

cn_toplevel: CN_SPEC LNAME TYPE LPAREN WHILE
##
## Ends in an error in state: 1491.
##
## cn_fun_spec -> CN_SPEC enter_cn LNAME TYPE LPAREN . args RPAREN CN_REQUIRES separated_nonempty_list(SEMICOLON,condition) CN_ENSURES separated_nonempty_list(SEMICOLON,condition) exit_cn [ EOF CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE ]
##
## The known suffix of the stack is as follows:
## CN_SPEC enter_cn LNAME TYPE LPAREN
##

parsing "cn_fun_spec": seen "CN_SPEC enter_cn LNAME TYPE LPAREN", expecting "args RPAREN CN_REQUIRES separated_nonempty_list(SEMICOLON,condition) CN_ENSURES separated_nonempty_list(SEMICOLON,condition) exit_cn"

cn_toplevel: CN_SPEC LNAME TYPE LPAREN RPAREN WHILE
##
## Ends in an error in state: 1493.
##
## cn_fun_spec -> CN_SPEC enter_cn LNAME TYPE LPAREN args RPAREN . CN_REQUIRES separated_nonempty_list(SEMICOLON,condition) CN_ENSURES separated_nonempty_list(SEMICOLON,condition) exit_cn [ EOF CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE ]
##
## The known suffix of the stack is as follows:
## CN_SPEC enter_cn LNAME TYPE LPAREN args RPAREN
##

parsing "cn_fun_spec": seen "CN_SPEC enter_cn LNAME TYPE LPAREN args RPAREN", expecting "CN_REQUIRES separated_nonempty_list(SEMICOLON,condition) CN_ENSURES separated_nonempty_list(SEMICOLON,condition) exit_cn"

cn_toplevel: CN_SPEC LNAME TYPE LPAREN RPAREN CN_REQUIRES WHILE
##
## Ends in an error in state: 1494.
##
## cn_fun_spec -> CN_SPEC enter_cn LNAME TYPE LPAREN args RPAREN CN_REQUIRES . separated_nonempty_list(SEMICOLON,condition) CN_ENSURES separated_nonempty_list(SEMICOLON,condition) exit_cn [ EOF CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE ]
##
## The known suffix of the stack is as follows:
## CN_SPEC enter_cn LNAME TYPE LPAREN args RPAREN CN_REQUIRES
##

parsing "cn_fun_spec": seen "CN_SPEC enter_cn LNAME TYPE LPAREN args RPAREN CN_REQUIRES", expecting "separated_nonempty_list(SEMICOLON,condition) CN_ENSURES separated_nonempty_list(SEMICOLON,condition) exit_cn"

cn_toplevel: CN_SPEC LNAME TYPE LPAREN RPAREN CN_REQUIRES CN_FALSE CN_ENSURES WHILE
##
## Ends in an error in state: 1496.
##
## cn_fun_spec -> CN_SPEC enter_cn LNAME TYPE LPAREN args RPAREN CN_REQUIRES separated_nonempty_list(SEMICOLON,condition) CN_ENSURES . separated_nonempty_list(SEMICOLON,condition) exit_cn [ EOF CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE ]
##
## The known suffix of the stack is as follows:
## CN_SPEC enter_cn LNAME TYPE LPAREN args RPAREN CN_REQUIRES separated_nonempty_list(SEMICOLON,condition) CN_ENSURES
##

parsing "cn_fun_spec": seen "CN_SPEC enter_cn LNAME TYPE LPAREN args RPAREN CN_REQUIRES separated_nonempty_list(SEMICOLON,condition) CN_ENSURES", expecting "separated_nonempty_list(SEMICOLON,condition) exit_cn"

cn_toplevel: CN_PREDICATE WHILE
##
## Ends in an error in state: 1500.
##
## cn_predicate -> CN_PREDICATE enter_cn . cn_attrs cn_pred_output UNAME VARIABLE LPAREN args RPAREN cn_option_pred_clauses exit_cn [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## CN_PREDICATE enter_cn
##

parsing "cn_predicate": seen "CN_PREDICATE enter_cn", expecting "cn_attrs cn_pred_output UNAME VARIABLE LPAREN args RPAREN cn_option_pred_clauses exit_cn"

cn_toplevel: CN_FUNCTION LBRACK WHILE
##
## Ends in an error in state: 1501.
##
## cn_attrs -> LBRACK . loption(separated_nonempty_list(COMMA,cn_variable)) RBRACK [ VOID STRUCT LPAREN LBRACE CN_TUPLE CN_SET CN_REAL CN_POINTER CN_MAP CN_LIST CN_INTEGER CN_DATATYPE CN_BOOL ]
##
## The known suffix of the stack is as follows:
## LBRACK
##

parsing "cn_attrs": seen "LBRACK", expecting "loption(separated_nonempty_list(COMMA,cn_variable)) RBRACK"

cn_toplevel: CN_FUNCTION LBRACK UNAME VARIABLE COMMA WHILE
##
## Ends in an error in state: 1504.
##
## separated_nonempty_list(COMMA,cn_variable) -> UNAME VARIABLE COMMA . separated_nonempty_list(COMMA,cn_variable) [ RBRACK ]
##
## The known suffix of the stack is as follows:
## UNAME VARIABLE COMMA
##

parsing "separated_nonempty_list(COMMA,cn_variable)": seen "UNAME VARIABLE COMMA", expecting "separated_nonempty_list(COMMA,cn_variable)"

cn_toplevel: CN_FUNCTION LBRACK LNAME VARIABLE COMMA WHILE
##
## Ends in an error in state: 1507.
##
## separated_nonempty_list(COMMA,cn_variable) -> LNAME VARIABLE COMMA . separated_nonempty_list(COMMA,cn_variable) [ RBRACK ]
##
## The known suffix of the stack is as follows:
## LNAME VARIABLE COMMA
##

parsing "separated_nonempty_list(COMMA,cn_variable)": seen "LNAME VARIABLE COMMA", expecting "separated_nonempty_list(COMMA,cn_variable)"

cn_toplevel: CN_FUNCTION LBRACK LNAME TYPE COMMA WHILE
##
## Ends in an error in state: 1510.
##
## separated_nonempty_list(COMMA,cn_variable) -> LNAME TYPE COMMA . separated_nonempty_list(COMMA,cn_variable) [ RBRACK ]
##
## The known suffix of the stack is as follows:
## LNAME TYPE COMMA
##

parsing "separated_nonempty_list(COMMA,cn_variable)": seen "LNAME TYPE COMMA", expecting "separated_nonempty_list(COMMA,cn_variable)"

cn_toplevel: CN_FUNCTION LBRACK UNAME TYPE COMMA WHILE
##
## Ends in an error in state: 1514.
##
## separated_nonempty_list(COMMA,cn_variable) -> UNAME TYPE COMMA . separated_nonempty_list(COMMA,cn_variable) [ RBRACK ]
##
## The known suffix of the stack is as follows:
## UNAME TYPE COMMA
##

parsing "separated_nonempty_list(COMMA,cn_variable)": seen "UNAME TYPE COMMA", expecting "separated_nonempty_list(COMMA,cn_variable)"

cn_toplevel: CN_PREDICATE LBRACK RBRACK WHILE
##
## Ends in an error in state: 1519.
##
## cn_predicate -> CN_PREDICATE enter_cn cn_attrs . cn_pred_output UNAME VARIABLE LPAREN args RPAREN cn_option_pred_clauses exit_cn [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## CN_PREDICATE enter_cn cn_attrs
##

parsing "cn_predicate": seen "CN_PREDICATE enter_cn cn_attrs", expecting "cn_pred_output UNAME VARIABLE LPAREN args RPAREN cn_option_pred_clauses exit_cn"

cn_toplevel: CN_PREDICATE LPAREN WHILE
##
## Ends in an error in state: 1520.
##
## cn_pred_output -> LPAREN . base_type RPAREN [ UNAME ]
##
## The known suffix of the stack is as follows:
## LPAREN
##

parsing "cn_pred_output": seen "LPAREN", expecting "base_type RPAREN"

cn_toplevel: CN_PREDICATE LPAREN CN_BOOL WHILE
##
## Ends in an error in state: 1521.
##
## cn_pred_output -> LPAREN base_type . RPAREN [ UNAME ]
##
## The known suffix of the stack is as follows:
## LPAREN base_type
##

parsing "cn_pred_output": seen "LPAREN base_type", expecting "RPAREN"

cn_toplevel: CN_PREDICATE CN_BOOL WHILE
##
## Ends in an error in state: 1523.
##
## cn_predicate -> CN_PREDICATE enter_cn cn_attrs cn_pred_output . UNAME VARIABLE LPAREN args RPAREN cn_option_pred_clauses exit_cn [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## CN_PREDICATE enter_cn cn_attrs cn_pred_output
##

parsing "cn_predicate": seen "CN_PREDICATE enter_cn cn_attrs cn_pred_output", expecting "UNAME VARIABLE LPAREN args RPAREN cn_option_pred_clauses exit_cn"

cn_toplevel: CN_PREDICATE CN_BOOL UNAME WHILE
##
## Ends in an error in state: 1524.
##
## cn_predicate -> CN_PREDICATE enter_cn cn_attrs cn_pred_output UNAME . VARIABLE LPAREN args RPAREN cn_option_pred_clauses exit_cn [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## CN_PREDICATE enter_cn cn_attrs cn_pred_output UNAME
##

parsing "cn_predicate": seen "CN_PREDICATE enter_cn cn_attrs cn_pred_output UNAME", expecting "VARIABLE LPAREN args RPAREN cn_option_pred_clauses exit_cn"

cn_toplevel: CN_PREDICATE CN_BOOL UNAME VARIABLE WHILE
##
## Ends in an error in state: 1525.
##
## cn_predicate -> CN_PREDICATE enter_cn cn_attrs cn_pred_output UNAME VARIABLE . LPAREN args RPAREN cn_option_pred_clauses exit_cn [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## CN_PREDICATE enter_cn cn_attrs cn_pred_output UNAME VARIABLE
##

parsing "cn_predicate": seen "CN_PREDICATE enter_cn cn_attrs cn_pred_output UNAME VARIABLE", expecting "LPAREN args RPAREN cn_option_pred_clauses exit_cn"

cn_toplevel: CN_PREDICATE CN_BOOL UNAME VARIABLE LPAREN WHILE
##
## Ends in an error in state: 1526.
##
## cn_predicate -> CN_PREDICATE enter_cn cn_attrs cn_pred_output UNAME VARIABLE LPAREN . args RPAREN cn_option_pred_clauses exit_cn [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## CN_PREDICATE enter_cn cn_attrs cn_pred_output UNAME VARIABLE LPAREN
##

parsing "cn_predicate": seen "CN_PREDICATE enter_cn cn_attrs cn_pred_output UNAME VARIABLE LPAREN", expecting "args RPAREN cn_option_pred_clauses exit_cn"

cn_toplevel: CN_PREDICATE CN_BOOL UNAME VARIABLE LPAREN RPAREN WHILE
##
## Ends in an error in state: 1528.
##
## cn_predicate -> CN_PREDICATE enter_cn cn_attrs cn_pred_output UNAME VARIABLE LPAREN args RPAREN . cn_option_pred_clauses exit_cn [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## CN_PREDICATE enter_cn cn_attrs cn_pred_output UNAME VARIABLE LPAREN args RPAREN
##

parsing "cn_predicate": seen "CN_PREDICATE enter_cn cn_attrs cn_pred_output UNAME VARIABLE LPAREN args RPAREN", expecting "cn_option_pred_clauses exit_cn"

cn_toplevel: CN_PREDICATE CN_BOOL UNAME VARIABLE LPAREN RPAREN LBRACE WHILE
##
## Ends in an error in state: 1529.
##
## cn_option_pred_clauses -> LBRACE . clauses RBRACE [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## LBRACE
##

parsing "cn_option_pred_clauses": seen "LBRACE", expecting "clauses RBRACE"

cn_toplevel: CN_PREDICATE CN_BOOL UNAME VARIABLE LPAREN RPAREN LBRACE IF WHILE
##
## Ends in an error in state: 1532.
##
## clauses -> IF . LPAREN expr RPAREN LBRACE clause SEMICOLON RBRACE ELSE LBRACE clauses RBRACE [ RBRACE ]
##
## The known suffix of the stack is as follows:
## IF
##

parsing "clauses": seen "IF", expecting "LPAREN expr RPAREN LBRACE clause SEMICOLON RBRACE ELSE LBRACE clauses RBRACE"

cn_toplevel: CN_PREDICATE CN_BOOL UNAME VARIABLE LPAREN RPAREN LBRACE IF LPAREN WHILE
##
## Ends in an error in state: 1533.
##
## clauses -> IF LPAREN . expr RPAREN LBRACE clause SEMICOLON RBRACE ELSE LBRACE clauses RBRACE [ RBRACE ]
##
## The known suffix of the stack is as follows:
## IF LPAREN
##

parsing "clauses": seen "IF LPAREN", expecting "expr RPAREN LBRACE clause SEMICOLON RBRACE ELSE LBRACE clauses RBRACE"

cn_toplevel: CN_PREDICATE CN_BOOL UNAME VARIABLE LPAREN RPAREN LBRACE IF LPAREN CN_FALSE RPAREN WHILE
##
## Ends in an error in state: 1535.
##
## clauses -> IF LPAREN expr RPAREN . LBRACE clause SEMICOLON RBRACE ELSE LBRACE clauses RBRACE [ RBRACE ]
##
## The known suffix of the stack is as follows:
## IF LPAREN expr RPAREN
##

parsing "clauses": seen "IF LPAREN expr RPAREN", expecting "LBRACE clause SEMICOLON RBRACE ELSE LBRACE clauses RBRACE"

cn_toplevel: CN_PREDICATE CN_BOOL UNAME VARIABLE LPAREN RPAREN LBRACE IF LPAREN CN_FALSE RPAREN LBRACE WHILE
##
## Ends in an error in state: 1536.
##
## clauses -> IF LPAREN expr RPAREN LBRACE . clause SEMICOLON RBRACE ELSE LBRACE clauses RBRACE [ RBRACE ]
##
## The known suffix of the stack is as follows:
## IF LPAREN expr RPAREN LBRACE
##

parsing "clauses": seen "IF LPAREN expr RPAREN LBRACE", expecting "clause SEMICOLON RBRACE ELSE LBRACE clauses RBRACE"

cn_toplevel: CN_PREDICATE CN_BOOL UNAME VARIABLE LPAREN RPAREN LBRACE CN_TAKE UNAME VARIABLE WHILE
##
## Ends in an error in state: 1539.
##
## clause -> CN_TAKE UNAME VARIABLE . EQ resource SEMICOLON clause [ SEMICOLON ]
##
## The known suffix of the stack is as follows:
## CN_TAKE UNAME VARIABLE
##

parsing "clause": seen "CN_TAKE UNAME VARIABLE", expecting "EQ resource SEMICOLON clause"

cn_toplevel: CN_PREDICATE CN_BOOL UNAME VARIABLE LPAREN RPAREN LBRACE CN_TAKE UNAME VARIABLE EQ WHILE
##
## Ends in an error in state: 1540.
##
## clause -> CN_TAKE UNAME VARIABLE EQ . resource SEMICOLON clause [ SEMICOLON ]
##
## The known suffix of the stack is as follows:
## CN_TAKE UNAME VARIABLE EQ
##

parsing "clause": seen "CN_TAKE UNAME VARIABLE EQ", expecting "resource SEMICOLON clause"

cn_toplevel: CN_PREDICATE CN_BOOL UNAME VARIABLE LPAREN RPAREN LBRACE CN_TAKE UNAME VARIABLE EQ CN_OWNED LPAREN RPAREN WHILE
##
## Ends in an error in state: 1541.
##
## clause -> CN_TAKE UNAME VARIABLE EQ resource . SEMICOLON clause [ SEMICOLON ]
##
## The known suffix of the stack is as follows:
## CN_TAKE UNAME VARIABLE EQ resource
##

parsing "clause": seen "CN_TAKE UNAME VARIABLE EQ resource", expecting "SEMICOLON clause"

cn_toplevel: CN_PREDICATE CN_BOOL UNAME VARIABLE LPAREN RPAREN LBRACE CN_TAKE UNAME VARIABLE EQ CN_OWNED LPAREN RPAREN SEMICOLON WHILE
##
## Ends in an error in state: 1542.
##
## clause -> CN_TAKE UNAME VARIABLE EQ resource SEMICOLON . clause [ SEMICOLON ]
##
## The known suffix of the stack is as follows:
## CN_TAKE UNAME VARIABLE EQ resource SEMICOLON
##

parsing "clause": seen "CN_TAKE UNAME VARIABLE EQ resource SEMICOLON", expecting "clause"

cn_toplevel: CN_PREDICATE CN_BOOL UNAME VARIABLE LPAREN RPAREN LBRACE CN_LET UNAME VARIABLE WHILE
##
## Ends in an error in state: 1545.
##
## clause -> CN_LET UNAME VARIABLE . EQ expr SEMICOLON clause [ SEMICOLON ]
##
## The known suffix of the stack is as follows:
## CN_LET UNAME VARIABLE
##

parsing "clause": seen "CN_LET UNAME VARIABLE", expecting "EQ expr SEMICOLON clause"

cn_toplevel: CN_PREDICATE CN_BOOL UNAME VARIABLE LPAREN RPAREN LBRACE CN_LET UNAME VARIABLE EQ WHILE
##
## Ends in an error in state: 1546.
##
## clause -> CN_LET UNAME VARIABLE EQ . expr SEMICOLON clause [ SEMICOLON ]
##
## The known suffix of the stack is as follows:
## CN_LET UNAME VARIABLE EQ
##

parsing "clause": seen "CN_LET UNAME VARIABLE EQ", expecting "expr SEMICOLON clause"

cn_toplevel: CN_PREDICATE CN_BOOL UNAME VARIABLE LPAREN RPAREN LBRACE CN_LET UNAME VARIABLE EQ CN_FALSE SEMICOLON WHILE
##
## Ends in an error in state: 1548.
##
## clause -> CN_LET UNAME VARIABLE EQ expr SEMICOLON . clause [ SEMICOLON ]
##
## The known suffix of the stack is as follows:
## CN_LET UNAME VARIABLE EQ expr SEMICOLON
##

parsing "clause": seen "CN_LET UNAME VARIABLE EQ expr SEMICOLON", expecting "clause"

cn_toplevel: CN_PREDICATE CN_BOOL UNAME VARIABLE LPAREN RPAREN LBRACE ASSERT WHILE
##
## Ends in an error in state: 1549.
##
## clause -> ASSERT . LPAREN assert_expr RPAREN SEMICOLON clause [ SEMICOLON ]
##
## The known suffix of the stack is as follows:
## ASSERT
##

parsing "clause": seen "ASSERT", expecting "LPAREN assert_expr RPAREN SEMICOLON clause"

cn_toplevel: CN_PREDICATE CN_BOOL UNAME VARIABLE LPAREN RPAREN LBRACE ASSERT LPAREN WHILE
##
## Ends in an error in state: 1550.
##
## clause -> ASSERT LPAREN . assert_expr RPAREN SEMICOLON clause [ SEMICOLON ]
##
## The known suffix of the stack is as follows:
## ASSERT LPAREN
##

parsing "clause": seen "ASSERT LPAREN", expecting "assert_expr RPAREN SEMICOLON clause"

cn_toplevel: CN_PREDICATE CN_BOOL UNAME VARIABLE LPAREN RPAREN LBRACE ASSERT LPAREN CN_FALSE RPAREN WHILE
##
## Ends in an error in state: 1552.
##
## clause -> ASSERT LPAREN assert_expr RPAREN . SEMICOLON clause [ SEMICOLON ]
##
## The known suffix of the stack is as follows:
## ASSERT LPAREN assert_expr RPAREN
##

parsing "clause": seen "ASSERT LPAREN assert_expr RPAREN", expecting "SEMICOLON clause"

cn_toplevel: CN_PREDICATE CN_BOOL UNAME VARIABLE LPAREN RPAREN LBRACE ASSERT LPAREN CN_FALSE RPAREN SEMICOLON WHILE
##
## Ends in an error in state: 1553.
##
## clause -> ASSERT LPAREN assert_expr RPAREN SEMICOLON . clause [ SEMICOLON ]
##
## The known suffix of the stack is as follows:
## ASSERT LPAREN assert_expr RPAREN SEMICOLON
##

parsing "clause": seen "ASSERT LPAREN assert_expr RPAREN SEMICOLON", expecting "clause"

cn_toplevel: CN_PREDICATE CN_BOOL UNAME VARIABLE LPAREN RPAREN LBRACE CN_LET UNAME TYPE WHILE
##
## Ends in an error in state: 1556.
##
## clause -> CN_LET UNAME TYPE . EQ expr SEMICOLON clause [ SEMICOLON ]
##
## The known suffix of the stack is as follows:
## CN_LET UNAME TYPE
##

parsing "clause": seen "CN_LET UNAME TYPE", expecting "EQ expr SEMICOLON clause"

cn_toplevel: CN_PREDICATE CN_BOOL UNAME VARIABLE LPAREN RPAREN LBRACE CN_LET UNAME TYPE EQ WHILE
##
## Ends in an error in state: 1557.
##
## clause -> CN_LET UNAME TYPE EQ . expr SEMICOLON clause [ SEMICOLON ]
##
## The known suffix of the stack is as follows:
## CN_LET UNAME TYPE EQ
##

parsing "clause": seen "CN_LET UNAME TYPE EQ", expecting "expr SEMICOLON clause"

cn_toplevel: CN_PREDICATE CN_BOOL UNAME VARIABLE LPAREN RPAREN LBRACE CN_LET UNAME TYPE EQ CN_FALSE SEMICOLON WHILE
##
## Ends in an error in state: 1559.
##
## clause -> CN_LET UNAME TYPE EQ expr SEMICOLON . clause [ SEMICOLON ]
##
## The known suffix of the stack is as follows:
## CN_LET UNAME TYPE EQ expr SEMICOLON
##

parsing "clause": seen "CN_LET UNAME TYPE EQ expr SEMICOLON", expecting "clause"

cn_toplevel: CN_PREDICATE CN_BOOL UNAME VARIABLE LPAREN RPAREN LBRACE CN_LET LNAME VARIABLE WHILE
##
## Ends in an error in state: 1562.
##
## clause -> CN_LET LNAME VARIABLE . EQ expr SEMICOLON clause [ SEMICOLON ]
##
## The known suffix of the stack is as follows:
## CN_LET LNAME VARIABLE
##

parsing "clause": seen "CN_LET LNAME VARIABLE", expecting "EQ expr SEMICOLON clause"

cn_toplevel: CN_PREDICATE CN_BOOL UNAME VARIABLE LPAREN RPAREN LBRACE CN_LET LNAME VARIABLE EQ WHILE
##
## Ends in an error in state: 1563.
##
## clause -> CN_LET LNAME VARIABLE EQ . expr SEMICOLON clause [ SEMICOLON ]
##
## The known suffix of the stack is as follows:
## CN_LET LNAME VARIABLE EQ
##

parsing "clause": seen "CN_LET LNAME VARIABLE EQ", expecting "expr SEMICOLON clause"

cn_toplevel: CN_PREDICATE CN_BOOL UNAME VARIABLE LPAREN RPAREN LBRACE CN_LET LNAME VARIABLE EQ CN_FALSE SEMICOLON WHILE
##
## Ends in an error in state: 1565.
##
## clause -> CN_LET LNAME VARIABLE EQ expr SEMICOLON . clause [ SEMICOLON ]
##
## The known suffix of the stack is as follows:
## CN_LET LNAME VARIABLE EQ expr SEMICOLON
##

parsing "clause": seen "CN_LET LNAME VARIABLE EQ expr SEMICOLON", expecting "clause"

cn_toplevel: CN_PREDICATE CN_BOOL UNAME VARIABLE LPAREN RPAREN LBRACE CN_LET LNAME TYPE WHILE
##
## Ends in an error in state: 1567.
##
## clause -> CN_LET LNAME TYPE . EQ expr SEMICOLON clause [ SEMICOLON ]
##
## The known suffix of the stack is as follows:
## CN_LET LNAME TYPE
##

parsing "clause": seen "CN_LET LNAME TYPE", expecting "EQ expr SEMICOLON clause"

cn_toplevel: CN_PREDICATE CN_BOOL UNAME VARIABLE LPAREN RPAREN LBRACE CN_LET LNAME TYPE EQ WHILE
##
## Ends in an error in state: 1568.
##
## clause -> CN_LET LNAME TYPE EQ . expr SEMICOLON clause [ SEMICOLON ]
##
## The known suffix of the stack is as follows:
## CN_LET LNAME TYPE EQ
##

parsing "clause": seen "CN_LET LNAME TYPE EQ", expecting "expr SEMICOLON clause"

cn_toplevel: CN_PREDICATE CN_BOOL UNAME VARIABLE LPAREN RPAREN LBRACE CN_LET LNAME TYPE EQ CN_FALSE SEMICOLON WHILE
##
## Ends in an error in state: 1570.
##
## clause -> CN_LET LNAME TYPE EQ expr SEMICOLON . clause [ SEMICOLON ]
##
## The known suffix of the stack is as follows:
## CN_LET LNAME TYPE EQ expr SEMICOLON
##

parsing "clause": seen "CN_LET LNAME TYPE EQ expr SEMICOLON", expecting "clause"

cn_toplevel: CN_PREDICATE CN_BOOL UNAME VARIABLE LPAREN RPAREN LBRACE CN_TAKE UNAME TYPE WHILE
##
## Ends in an error in state: 1573.
##
## clause -> CN_TAKE UNAME TYPE . EQ resource SEMICOLON clause [ SEMICOLON ]
##
## The known suffix of the stack is as follows:
## CN_TAKE UNAME TYPE
##

parsing "clause": seen "CN_TAKE UNAME TYPE", expecting "EQ resource SEMICOLON clause"

cn_toplevel: CN_PREDICATE CN_BOOL UNAME VARIABLE LPAREN RPAREN LBRACE CN_TAKE UNAME TYPE EQ WHILE
##
## Ends in an error in state: 1574.
##
## clause -> CN_TAKE UNAME TYPE EQ . resource SEMICOLON clause [ SEMICOLON ]
##
## The known suffix of the stack is as follows:
## CN_TAKE UNAME TYPE EQ
##

parsing "clause": seen "CN_TAKE UNAME TYPE EQ", expecting "resource SEMICOLON clause"

cn_toplevel: CN_PREDICATE CN_BOOL UNAME VARIABLE LPAREN RPAREN LBRACE CN_TAKE UNAME TYPE EQ CN_OWNED LPAREN RPAREN WHILE
##
## Ends in an error in state: 1575.
##
## clause -> CN_TAKE UNAME TYPE EQ resource . SEMICOLON clause [ SEMICOLON ]
##
## The known suffix of the stack is as follows:
## CN_TAKE UNAME TYPE EQ resource
##

parsing "clause": seen "CN_TAKE UNAME TYPE EQ resource", expecting "SEMICOLON clause"

cn_toplevel: CN_PREDICATE CN_BOOL UNAME VARIABLE LPAREN RPAREN LBRACE CN_TAKE UNAME TYPE EQ CN_OWNED LPAREN RPAREN SEMICOLON WHILE
##
## Ends in an error in state: 1576.
##
## clause -> CN_TAKE UNAME TYPE EQ resource SEMICOLON . clause [ SEMICOLON ]
##
## The known suffix of the stack is as follows:
## CN_TAKE UNAME TYPE EQ resource SEMICOLON
##

parsing "clause": seen "CN_TAKE UNAME TYPE EQ resource SEMICOLON", expecting "clause"

cn_toplevel: CN_PREDICATE CN_BOOL UNAME VARIABLE LPAREN RPAREN LBRACE CN_TAKE LNAME VARIABLE WHILE
##
## Ends in an error in state: 1579.
##
## clause -> CN_TAKE LNAME VARIABLE . EQ resource SEMICOLON clause [ SEMICOLON ]
##
## The known suffix of the stack is as follows:
## CN_TAKE LNAME VARIABLE
##

parsing "clause": seen "CN_TAKE LNAME VARIABLE", expecting "EQ resource SEMICOLON clause"

cn_toplevel: CN_PREDICATE CN_BOOL UNAME VARIABLE LPAREN RPAREN LBRACE CN_TAKE LNAME VARIABLE EQ WHILE
##
## Ends in an error in state: 1580.
##
## clause -> CN_TAKE LNAME VARIABLE EQ . resource SEMICOLON clause [ SEMICOLON ]
##
## The known suffix of the stack is as follows:
## CN_TAKE LNAME VARIABLE EQ
##

parsing "clause": seen "CN_TAKE LNAME VARIABLE EQ", expecting "resource SEMICOLON clause"

cn_toplevel: CN_PREDICATE CN_BOOL UNAME VARIABLE LPAREN RPAREN LBRACE CN_TAKE LNAME VARIABLE EQ CN_OWNED LPAREN RPAREN WHILE
##
## Ends in an error in state: 1581.
##
## clause -> CN_TAKE LNAME VARIABLE EQ resource . SEMICOLON clause [ SEMICOLON ]
##
## The known suffix of the stack is as follows:
## CN_TAKE LNAME VARIABLE EQ resource
##

parsing "clause": seen "CN_TAKE LNAME VARIABLE EQ resource", expecting "SEMICOLON clause"

cn_toplevel: CN_PREDICATE CN_BOOL UNAME VARIABLE LPAREN RPAREN LBRACE CN_TAKE LNAME VARIABLE EQ CN_OWNED LPAREN RPAREN SEMICOLON WHILE
##
## Ends in an error in state: 1582.
##
## clause -> CN_TAKE LNAME VARIABLE EQ resource SEMICOLON . clause [ SEMICOLON ]
##
## The known suffix of the stack is as follows:
## CN_TAKE LNAME VARIABLE EQ resource SEMICOLON
##

parsing "clause": seen "CN_TAKE LNAME VARIABLE EQ resource SEMICOLON", expecting "clause"

cn_toplevel: CN_PREDICATE CN_BOOL UNAME VARIABLE LPAREN RPAREN LBRACE CN_TAKE LNAME TYPE WHILE
##
## Ends in an error in state: 1584.
##
## clause -> CN_TAKE LNAME TYPE . EQ resource SEMICOLON clause [ SEMICOLON ]
##
## The known suffix of the stack is as follows:
## CN_TAKE LNAME TYPE
##

parsing "clause": seen "CN_TAKE LNAME TYPE", expecting "EQ resource SEMICOLON clause"

cn_toplevel: CN_PREDICATE CN_BOOL UNAME VARIABLE LPAREN RPAREN LBRACE CN_TAKE LNAME TYPE EQ WHILE
##
## Ends in an error in state: 1585.
##
## clause -> CN_TAKE LNAME TYPE EQ . resource SEMICOLON clause [ SEMICOLON ]
##
## The known suffix of the stack is as follows:
## CN_TAKE LNAME TYPE EQ
##

parsing "clause": seen "CN_TAKE LNAME TYPE EQ", expecting "resource SEMICOLON clause"

cn_toplevel: CN_PREDICATE CN_BOOL UNAME VARIABLE LPAREN RPAREN LBRACE CN_TAKE LNAME TYPE EQ CN_OWNED LPAREN RPAREN WHILE
##
## Ends in an error in state: 1586.
##
## clause -> CN_TAKE LNAME TYPE EQ resource . SEMICOLON clause [ SEMICOLON ]
##
## The known suffix of the stack is as follows:
## CN_TAKE LNAME TYPE EQ resource
##

parsing "clause": seen "CN_TAKE LNAME TYPE EQ resource", expecting "SEMICOLON clause"

cn_toplevel: CN_PREDICATE CN_BOOL UNAME VARIABLE LPAREN RPAREN LBRACE CN_TAKE LNAME TYPE EQ CN_OWNED LPAREN RPAREN SEMICOLON WHILE
##
## Ends in an error in state: 1587.
##
## clause -> CN_TAKE LNAME TYPE EQ resource SEMICOLON . clause [ SEMICOLON ]
##
## The known suffix of the stack is as follows:
## CN_TAKE LNAME TYPE EQ resource SEMICOLON
##

parsing "clause": seen "CN_TAKE LNAME TYPE EQ resource SEMICOLON", expecting "clause"

cn_toplevel: CN_PREDICATE CN_BOOL UNAME VARIABLE LPAREN RPAREN LBRACE IF LPAREN CN_FALSE RPAREN LBRACE RETURN SEMICOLON WHILE
##
## Ends in an error in state: 1590.
##
## clauses -> IF LPAREN expr RPAREN LBRACE clause SEMICOLON . RBRACE ELSE LBRACE clauses RBRACE [ RBRACE ]
##
## The known suffix of the stack is as follows:
## IF LPAREN expr RPAREN LBRACE clause SEMICOLON
##

parsing "clauses": seen "IF LPAREN expr RPAREN LBRACE clause SEMICOLON", expecting "RBRACE ELSE LBRACE clauses RBRACE"

cn_toplevel: CN_PREDICATE CN_BOOL UNAME VARIABLE LPAREN RPAREN LBRACE IF LPAREN CN_FALSE RPAREN LBRACE RETURN SEMICOLON RBRACE WHILE
##
## Ends in an error in state: 1591.
##
## clauses -> IF LPAREN expr RPAREN LBRACE clause SEMICOLON RBRACE . ELSE LBRACE clauses RBRACE [ RBRACE ]
##
## The known suffix of the stack is as follows:
## IF LPAREN expr RPAREN LBRACE clause SEMICOLON RBRACE
##

parsing "clauses": seen "IF LPAREN expr RPAREN LBRACE clause SEMICOLON RBRACE", expecting "ELSE LBRACE clauses RBRACE"

cn_toplevel: CN_PREDICATE CN_BOOL UNAME VARIABLE LPAREN RPAREN LBRACE IF LPAREN CN_FALSE RPAREN LBRACE RETURN SEMICOLON RBRACE ELSE WHILE
##
## Ends in an error in state: 1592.
##
## clauses -> IF LPAREN expr RPAREN LBRACE clause SEMICOLON RBRACE ELSE . LBRACE clauses RBRACE [ RBRACE ]
##
## The known suffix of the stack is as follows:
## IF LPAREN expr RPAREN LBRACE clause SEMICOLON RBRACE ELSE
##

parsing "clauses": seen "IF LPAREN expr RPAREN LBRACE clause SEMICOLON RBRACE ELSE", expecting "LBRACE clauses RBRACE"

cn_toplevel: CN_PREDICATE CN_BOOL UNAME VARIABLE LPAREN RPAREN LBRACE IF LPAREN CN_FALSE RPAREN LBRACE RETURN SEMICOLON RBRACE ELSE LBRACE WHILE
##
## Ends in an error in state: 1593.
##
## clauses -> IF LPAREN expr RPAREN LBRACE clause SEMICOLON RBRACE ELSE LBRACE . clauses RBRACE [ RBRACE ]
##
## The known suffix of the stack is as follows:
## IF LPAREN expr RPAREN LBRACE clause SEMICOLON RBRACE ELSE LBRACE
##

parsing "clauses": seen "IF LPAREN expr RPAREN LBRACE clause SEMICOLON RBRACE ELSE LBRACE", expecting "clauses RBRACE"

cn_toplevel: CN_PREDICATE CN_BOOL UNAME VARIABLE LPAREN RPAREN LBRACE IF LPAREN CN_FALSE RPAREN LBRACE RETURN SEMICOLON RBRACE ELSE LBRACE RETURN SEMICOLON WHILE
##
## Ends in an error in state: 1594.
##
## clauses -> IF LPAREN expr RPAREN LBRACE clause SEMICOLON RBRACE ELSE LBRACE clauses . RBRACE [ RBRACE ]
##
## The known suffix of the stack is as follows:
## IF LPAREN expr RPAREN LBRACE clause SEMICOLON RBRACE ELSE LBRACE clauses
##

parsing "clauses": seen "IF LPAREN expr RPAREN LBRACE clause SEMICOLON RBRACE ELSE LBRACE clauses", expecting "RBRACE"

cn_toplevel: CN_PREDICATE CN_BOOL UNAME VARIABLE LPAREN RPAREN LBRACE RETURN SEMICOLON WHILE
##
## Ends in an error in state: 1598.
##
## cn_option_pred_clauses -> LBRACE clauses . RBRACE [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## LBRACE clauses
##

parsing "cn_option_pred_clauses": seen "LBRACE clauses", expecting "RBRACE"

cn_toplevel: CN_LEMMA UNAME VARIABLE WHILE
##
## Ends in an error in state: 1606.
##
## cn_lemma -> CN_LEMMA enter_cn UNAME VARIABLE . LPAREN args RPAREN CN_REQUIRES separated_nonempty_list(SEMICOLON,condition) CN_ENSURES separated_nonempty_list(SEMICOLON,condition) exit_cn [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## CN_LEMMA enter_cn UNAME VARIABLE
##

parsing "cn_lemma": seen "CN_LEMMA enter_cn UNAME VARIABLE", expecting "LPAREN args RPAREN CN_REQUIRES separated_nonempty_list(SEMICOLON,condition) CN_ENSURES separated_nonempty_list(SEMICOLON,condition) exit_cn"

cn_toplevel: CN_LEMMA UNAME VARIABLE LPAREN WHILE
##
## Ends in an error in state: 1607.
##
## cn_lemma -> CN_LEMMA enter_cn UNAME VARIABLE LPAREN . args RPAREN CN_REQUIRES separated_nonempty_list(SEMICOLON,condition) CN_ENSURES separated_nonempty_list(SEMICOLON,condition) exit_cn [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## CN_LEMMA enter_cn UNAME VARIABLE LPAREN
##

parsing "cn_lemma": seen "CN_LEMMA enter_cn UNAME VARIABLE LPAREN", expecting "args RPAREN CN_REQUIRES separated_nonempty_list(SEMICOLON,condition) CN_ENSURES separated_nonempty_list(SEMICOLON,condition) exit_cn"

cn_toplevel: CN_LEMMA UNAME VARIABLE LPAREN RPAREN WHILE
##
## Ends in an error in state: 1609.
##
## cn_lemma -> CN_LEMMA enter_cn UNAME VARIABLE LPAREN args RPAREN . CN_REQUIRES separated_nonempty_list(SEMICOLON,condition) CN_ENSURES separated_nonempty_list(SEMICOLON,condition) exit_cn [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## CN_LEMMA enter_cn UNAME VARIABLE LPAREN args RPAREN
##

parsing "cn_lemma": seen "CN_LEMMA enter_cn UNAME VARIABLE LPAREN args RPAREN", expecting "CN_REQUIRES separated_nonempty_list(SEMICOLON,condition) CN_ENSURES separated_nonempty_list(SEMICOLON,condition) exit_cn"

cn_toplevel: CN_LEMMA UNAME VARIABLE LPAREN RPAREN CN_REQUIRES WHILE
##
## Ends in an error in state: 1610.
##
## cn_lemma -> CN_LEMMA enter_cn UNAME VARIABLE LPAREN args RPAREN CN_REQUIRES . separated_nonempty_list(SEMICOLON,condition) CN_ENSURES separated_nonempty_list(SEMICOLON,condition) exit_cn [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## CN_LEMMA enter_cn UNAME VARIABLE LPAREN args RPAREN CN_REQUIRES
##

parsing "cn_lemma": seen "CN_LEMMA enter_cn UNAME VARIABLE LPAREN args RPAREN CN_REQUIRES", expecting "separated_nonempty_list(SEMICOLON,condition) CN_ENSURES separated_nonempty_list(SEMICOLON,condition) exit_cn"

cn_toplevel: CN_LEMMA UNAME VARIABLE LPAREN RPAREN CN_REQUIRES CN_FALSE CN_ENSURES WHILE
##
## Ends in an error in state: 1612.
##
## cn_lemma -> CN_LEMMA enter_cn UNAME VARIABLE LPAREN args RPAREN CN_REQUIRES separated_nonempty_list(SEMICOLON,condition) CN_ENSURES . separated_nonempty_list(SEMICOLON,condition) exit_cn [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## CN_LEMMA enter_cn UNAME VARIABLE LPAREN args RPAREN CN_REQUIRES separated_nonempty_list(SEMICOLON,condition) CN_ENSURES
##

parsing "cn_lemma": seen "CN_LEMMA enter_cn UNAME VARIABLE LPAREN args RPAREN CN_REQUIRES separated_nonempty_list(SEMICOLON,condition) CN_ENSURES", expecting "separated_nonempty_list(SEMICOLON,condition) exit_cn"

cn_toplevel: CN_LEMMA UNAME TYPE WHILE
##
## Ends in an error in state: 1615.
##
## cn_lemma -> CN_LEMMA enter_cn UNAME TYPE . LPAREN args RPAREN CN_REQUIRES separated_nonempty_list(SEMICOLON,condition) CN_ENSURES separated_nonempty_list(SEMICOLON,condition) exit_cn [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## CN_LEMMA enter_cn UNAME TYPE
##

parsing "cn_lemma": seen "CN_LEMMA enter_cn UNAME TYPE", expecting "LPAREN args RPAREN CN_REQUIRES separated_nonempty_list(SEMICOLON,condition) CN_ENSURES separated_nonempty_list(SEMICOLON,condition) exit_cn"

cn_toplevel: CN_LEMMA UNAME TYPE LPAREN WHILE
##
## Ends in an error in state: 1616.
##
## cn_lemma -> CN_LEMMA enter_cn UNAME TYPE LPAREN . args RPAREN CN_REQUIRES separated_nonempty_list(SEMICOLON,condition) CN_ENSURES separated_nonempty_list(SEMICOLON,condition) exit_cn [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## CN_LEMMA enter_cn UNAME TYPE LPAREN
##

parsing "cn_lemma": seen "CN_LEMMA enter_cn UNAME TYPE LPAREN", expecting "args RPAREN CN_REQUIRES separated_nonempty_list(SEMICOLON,condition) CN_ENSURES separated_nonempty_list(SEMICOLON,condition) exit_cn"

cn_toplevel: CN_LEMMA UNAME TYPE LPAREN RPAREN WHILE
##
## Ends in an error in state: 1618.
##
## cn_lemma -> CN_LEMMA enter_cn UNAME TYPE LPAREN args RPAREN . CN_REQUIRES separated_nonempty_list(SEMICOLON,condition) CN_ENSURES separated_nonempty_list(SEMICOLON,condition) exit_cn [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## CN_LEMMA enter_cn UNAME TYPE LPAREN args RPAREN
##

parsing "cn_lemma": seen "CN_LEMMA enter_cn UNAME TYPE LPAREN args RPAREN", expecting "CN_REQUIRES separated_nonempty_list(SEMICOLON,condition) CN_ENSURES separated_nonempty_list(SEMICOLON,condition) exit_cn"

cn_toplevel: CN_LEMMA UNAME TYPE LPAREN RPAREN CN_REQUIRES WHILE
##
## Ends in an error in state: 1619.
##
## cn_lemma -> CN_LEMMA enter_cn UNAME TYPE LPAREN args RPAREN CN_REQUIRES . separated_nonempty_list(SEMICOLON,condition) CN_ENSURES separated_nonempty_list(SEMICOLON,condition) exit_cn [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## CN_LEMMA enter_cn UNAME TYPE LPAREN args RPAREN CN_REQUIRES
##

parsing "cn_lemma": seen "CN_LEMMA enter_cn UNAME TYPE LPAREN args RPAREN CN_REQUIRES", expecting "separated_nonempty_list(SEMICOLON,condition) CN_ENSURES separated_nonempty_list(SEMICOLON,condition) exit_cn"

cn_toplevel: CN_LEMMA UNAME TYPE LPAREN RPAREN CN_REQUIRES CN_FALSE CN_ENSURES WHILE
##
## Ends in an error in state: 1621.
##
## cn_lemma -> CN_LEMMA enter_cn UNAME TYPE LPAREN args RPAREN CN_REQUIRES separated_nonempty_list(SEMICOLON,condition) CN_ENSURES . separated_nonempty_list(SEMICOLON,condition) exit_cn [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## CN_LEMMA enter_cn UNAME TYPE LPAREN args RPAREN CN_REQUIRES separated_nonempty_list(SEMICOLON,condition) CN_ENSURES
##

parsing "cn_lemma": seen "CN_LEMMA enter_cn UNAME TYPE LPAREN args RPAREN CN_REQUIRES separated_nonempty_list(SEMICOLON,condition) CN_ENSURES", expecting "separated_nonempty_list(SEMICOLON,condition) exit_cn"

cn_toplevel: CN_LEMMA LNAME VARIABLE WHILE
##
## Ends in an error in state: 1625.
##
## cn_lemma -> CN_LEMMA enter_cn LNAME VARIABLE . LPAREN args RPAREN CN_REQUIRES separated_nonempty_list(SEMICOLON,condition) CN_ENSURES separated_nonempty_list(SEMICOLON,condition) exit_cn [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## CN_LEMMA enter_cn LNAME VARIABLE
##

parsing "cn_lemma": seen "CN_LEMMA enter_cn LNAME VARIABLE", expecting "LPAREN args RPAREN CN_REQUIRES separated_nonempty_list(SEMICOLON,condition) CN_ENSURES separated_nonempty_list(SEMICOLON,condition) exit_cn"

cn_toplevel: CN_LEMMA LNAME VARIABLE LPAREN WHILE
##
## Ends in an error in state: 1626.
##
## cn_lemma -> CN_LEMMA enter_cn LNAME VARIABLE LPAREN . args RPAREN CN_REQUIRES separated_nonempty_list(SEMICOLON,condition) CN_ENSURES separated_nonempty_list(SEMICOLON,condition) exit_cn [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## CN_LEMMA enter_cn LNAME VARIABLE LPAREN
##

parsing "cn_lemma": seen "CN_LEMMA enter_cn LNAME VARIABLE LPAREN", expecting "args RPAREN CN_REQUIRES separated_nonempty_list(SEMICOLON,condition) CN_ENSURES separated_nonempty_list(SEMICOLON,condition) exit_cn"

cn_toplevel: CN_LEMMA LNAME VARIABLE LPAREN RPAREN WHILE
##
## Ends in an error in state: 1628.
##
## cn_lemma -> CN_LEMMA enter_cn LNAME VARIABLE LPAREN args RPAREN . CN_REQUIRES separated_nonempty_list(SEMICOLON,condition) CN_ENSURES separated_nonempty_list(SEMICOLON,condition) exit_cn [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## CN_LEMMA enter_cn LNAME VARIABLE LPAREN args RPAREN
##

parsing "cn_lemma": seen "CN_LEMMA enter_cn LNAME VARIABLE LPAREN args RPAREN", expecting "CN_REQUIRES separated_nonempty_list(SEMICOLON,condition) CN_ENSURES separated_nonempty_list(SEMICOLON,condition) exit_cn"

cn_toplevel: CN_LEMMA LNAME VARIABLE LPAREN RPAREN CN_REQUIRES WHILE
##
## Ends in an error in state: 1629.
##
## cn_lemma -> CN_LEMMA enter_cn LNAME VARIABLE LPAREN args RPAREN CN_REQUIRES . separated_nonempty_list(SEMICOLON,condition) CN_ENSURES separated_nonempty_list(SEMICOLON,condition) exit_cn [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## CN_LEMMA enter_cn LNAME VARIABLE LPAREN args RPAREN CN_REQUIRES
##

parsing "cn_lemma": seen "CN_LEMMA enter_cn LNAME VARIABLE LPAREN args RPAREN CN_REQUIRES", expecting "separated_nonempty_list(SEMICOLON,condition) CN_ENSURES separated_nonempty_list(SEMICOLON,condition) exit_cn"

cn_toplevel: CN_LEMMA LNAME VARIABLE LPAREN RPAREN CN_REQUIRES CN_FALSE CN_ENSURES WHILE
##
## Ends in an error in state: 1631.
##
## cn_lemma -> CN_LEMMA enter_cn LNAME VARIABLE LPAREN args RPAREN CN_REQUIRES separated_nonempty_list(SEMICOLON,condition) CN_ENSURES . separated_nonempty_list(SEMICOLON,condition) exit_cn [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## CN_LEMMA enter_cn LNAME VARIABLE LPAREN args RPAREN CN_REQUIRES separated_nonempty_list(SEMICOLON,condition) CN_ENSURES
##

parsing "cn_lemma": seen "CN_LEMMA enter_cn LNAME VARIABLE LPAREN args RPAREN CN_REQUIRES separated_nonempty_list(SEMICOLON,condition) CN_ENSURES", expecting "separated_nonempty_list(SEMICOLON,condition) exit_cn"

cn_toplevel: CN_LEMMA LNAME TYPE WHILE
##
## Ends in an error in state: 1634.
##
## cn_lemma -> CN_LEMMA enter_cn LNAME TYPE . LPAREN args RPAREN CN_REQUIRES separated_nonempty_list(SEMICOLON,condition) CN_ENSURES separated_nonempty_list(SEMICOLON,condition) exit_cn [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## CN_LEMMA enter_cn LNAME TYPE
##

parsing "cn_lemma": seen "CN_LEMMA enter_cn LNAME TYPE", expecting "LPAREN args RPAREN CN_REQUIRES separated_nonempty_list(SEMICOLON,condition) CN_ENSURES separated_nonempty_list(SEMICOLON,condition) exit_cn"

cn_toplevel: CN_LEMMA LNAME TYPE LPAREN WHILE
##
## Ends in an error in state: 1635.
##
## cn_lemma -> CN_LEMMA enter_cn LNAME TYPE LPAREN . args RPAREN CN_REQUIRES separated_nonempty_list(SEMICOLON,condition) CN_ENSURES separated_nonempty_list(SEMICOLON,condition) exit_cn [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## CN_LEMMA enter_cn LNAME TYPE LPAREN
##

parsing "cn_lemma": seen "CN_LEMMA enter_cn LNAME TYPE LPAREN", expecting "args RPAREN CN_REQUIRES separated_nonempty_list(SEMICOLON,condition) CN_ENSURES separated_nonempty_list(SEMICOLON,condition) exit_cn"

cn_toplevel: CN_LEMMA LNAME TYPE LPAREN RPAREN WHILE
##
## Ends in an error in state: 1637.
##
## cn_lemma -> CN_LEMMA enter_cn LNAME TYPE LPAREN args RPAREN . CN_REQUIRES separated_nonempty_list(SEMICOLON,condition) CN_ENSURES separated_nonempty_list(SEMICOLON,condition) exit_cn [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## CN_LEMMA enter_cn LNAME TYPE LPAREN args RPAREN
##

parsing "cn_lemma": seen "CN_LEMMA enter_cn LNAME TYPE LPAREN args RPAREN", expecting "CN_REQUIRES separated_nonempty_list(SEMICOLON,condition) CN_ENSURES separated_nonempty_list(SEMICOLON,condition) exit_cn"

cn_toplevel: CN_LEMMA LNAME TYPE LPAREN RPAREN CN_REQUIRES WHILE
##
## Ends in an error in state: 1638.
##
## cn_lemma -> CN_LEMMA enter_cn LNAME TYPE LPAREN args RPAREN CN_REQUIRES . separated_nonempty_list(SEMICOLON,condition) CN_ENSURES separated_nonempty_list(SEMICOLON,condition) exit_cn [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## CN_LEMMA enter_cn LNAME TYPE LPAREN args RPAREN CN_REQUIRES
##

parsing "cn_lemma": seen "CN_LEMMA enter_cn LNAME TYPE LPAREN args RPAREN CN_REQUIRES", expecting "separated_nonempty_list(SEMICOLON,condition) CN_ENSURES separated_nonempty_list(SEMICOLON,condition) exit_cn"

cn_toplevel: CN_LEMMA LNAME TYPE LPAREN RPAREN CN_REQUIRES CN_FALSE CN_ENSURES WHILE
##
## Ends in an error in state: 1640.
##
## cn_lemma -> CN_LEMMA enter_cn LNAME TYPE LPAREN args RPAREN CN_REQUIRES separated_nonempty_list(SEMICOLON,condition) CN_ENSURES . separated_nonempty_list(SEMICOLON,condition) exit_cn [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## CN_LEMMA enter_cn LNAME TYPE LPAREN args RPAREN CN_REQUIRES separated_nonempty_list(SEMICOLON,condition) CN_ENSURES
##

parsing "cn_lemma": seen "CN_LEMMA enter_cn LNAME TYPE LPAREN args RPAREN CN_REQUIRES separated_nonempty_list(SEMICOLON,condition) CN_ENSURES", expecting "separated_nonempty_list(SEMICOLON,condition) exit_cn"

cn_toplevel: CN_FUNCTION LPAREN CN_BOOL RPAREN UNAME VARIABLE WHILE
##
## Ends in an error in state: 1650.
##
## cn_function -> CN_FUNCTION enter_cn cn_attrs LPAREN base_type RPAREN UNAME VARIABLE . LPAREN args RPAREN cn_option_func_body exit_cn [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## CN_FUNCTION enter_cn cn_attrs LPAREN base_type RPAREN UNAME VARIABLE
##

parsing "cn_function": seen "CN_FUNCTION enter_cn cn_attrs LPAREN base_type RPAREN UNAME VARIABLE", expecting "LPAREN args RPAREN cn_option_func_body exit_cn"

cn_toplevel: CN_FUNCTION LPAREN CN_BOOL RPAREN UNAME VARIABLE LPAREN WHILE
##
## Ends in an error in state: 1651.
##
## cn_function -> CN_FUNCTION enter_cn cn_attrs LPAREN base_type RPAREN UNAME VARIABLE LPAREN . args RPAREN cn_option_func_body exit_cn [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## CN_FUNCTION enter_cn cn_attrs LPAREN base_type RPAREN UNAME VARIABLE LPAREN
##

parsing "cn_function": seen "CN_FUNCTION enter_cn cn_attrs LPAREN base_type RPAREN UNAME VARIABLE LPAREN", expecting "args RPAREN cn_option_func_body exit_cn"

cn_toplevel: CN_FUNCTION LPAREN CN_BOOL RPAREN UNAME VARIABLE LPAREN RPAREN WHILE
##
## Ends in an error in state: 1653.
##
## cn_function -> CN_FUNCTION enter_cn cn_attrs LPAREN base_type RPAREN UNAME VARIABLE LPAREN args RPAREN . cn_option_func_body exit_cn [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## CN_FUNCTION enter_cn cn_attrs LPAREN base_type RPAREN UNAME VARIABLE LPAREN args RPAREN
##

parsing "cn_function": seen "CN_FUNCTION enter_cn cn_attrs LPAREN base_type RPAREN UNAME VARIABLE LPAREN args RPAREN", expecting "cn_option_func_body exit_cn"

cn_toplevel: CN_FUNCTION LPAREN CN_BOOL RPAREN LNAME TYPE LPAREN RPAREN LBRACE WHILE
##
## Ends in an error in state: 1654.
##
## cn_option_func_body -> LBRACE . expr RBRACE [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## LBRACE
##

parsing "cn_option_func_body": seen "LBRACE", expecting "expr RBRACE"

cn_toplevel: CN_FUNCTION LPAREN CN_BOOL RPAREN UNAME TYPE WHILE
##
## Ends in an error in state: 1659.
##
## cn_function -> CN_FUNCTION enter_cn cn_attrs LPAREN base_type RPAREN UNAME TYPE . LPAREN args RPAREN cn_option_func_body exit_cn [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## CN_FUNCTION enter_cn cn_attrs LPAREN base_type RPAREN UNAME TYPE
##

parsing "cn_function": seen "CN_FUNCTION enter_cn cn_attrs LPAREN base_type RPAREN UNAME TYPE", expecting "LPAREN args RPAREN cn_option_func_body exit_cn"

cn_toplevel: CN_FUNCTION LPAREN CN_BOOL RPAREN UNAME TYPE LPAREN WHILE
##
## Ends in an error in state: 1660.
##
## cn_function -> CN_FUNCTION enter_cn cn_attrs LPAREN base_type RPAREN UNAME TYPE LPAREN . args RPAREN cn_option_func_body exit_cn [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## CN_FUNCTION enter_cn cn_attrs LPAREN base_type RPAREN UNAME TYPE LPAREN
##

parsing "cn_function": seen "CN_FUNCTION enter_cn cn_attrs LPAREN base_type RPAREN UNAME TYPE LPAREN", expecting "args RPAREN cn_option_func_body exit_cn"

cn_toplevel: CN_FUNCTION LPAREN CN_BOOL RPAREN UNAME TYPE LPAREN RPAREN WHILE
##
## Ends in an error in state: 1662.
##
## cn_function -> CN_FUNCTION enter_cn cn_attrs LPAREN base_type RPAREN UNAME TYPE LPAREN args RPAREN . cn_option_func_body exit_cn [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## CN_FUNCTION enter_cn cn_attrs LPAREN base_type RPAREN UNAME TYPE LPAREN args RPAREN
##

parsing "cn_function": seen "CN_FUNCTION enter_cn cn_attrs LPAREN base_type RPAREN UNAME TYPE LPAREN args RPAREN", expecting "cn_option_func_body exit_cn"

cn_toplevel: CN_FUNCTION LPAREN CN_BOOL RPAREN LNAME VARIABLE WHILE
##
## Ends in an error in state: 1666.
##
## cn_function -> CN_FUNCTION enter_cn cn_attrs LPAREN base_type RPAREN LNAME VARIABLE . LPAREN args RPAREN cn_option_func_body exit_cn [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## CN_FUNCTION enter_cn cn_attrs LPAREN base_type RPAREN LNAME VARIABLE
##

parsing "cn_function": seen "CN_FUNCTION enter_cn cn_attrs LPAREN base_type RPAREN LNAME VARIABLE", expecting "LPAREN args RPAREN cn_option_func_body exit_cn"

cn_toplevel: CN_FUNCTION LPAREN CN_BOOL RPAREN LNAME VARIABLE LPAREN WHILE
##
## Ends in an error in state: 1667.
##
## cn_function -> CN_FUNCTION enter_cn cn_attrs LPAREN base_type RPAREN LNAME VARIABLE LPAREN . args RPAREN cn_option_func_body exit_cn [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## CN_FUNCTION enter_cn cn_attrs LPAREN base_type RPAREN LNAME VARIABLE LPAREN
##

parsing "cn_function": seen "CN_FUNCTION enter_cn cn_attrs LPAREN base_type RPAREN LNAME VARIABLE LPAREN", expecting "args RPAREN cn_option_func_body exit_cn"

cn_toplevel: CN_FUNCTION LPAREN CN_BOOL RPAREN LNAME VARIABLE LPAREN RPAREN WHILE
##
## Ends in an error in state: 1669.
##
## cn_function -> CN_FUNCTION enter_cn cn_attrs LPAREN base_type RPAREN LNAME VARIABLE LPAREN args RPAREN . cn_option_func_body exit_cn [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## CN_FUNCTION enter_cn cn_attrs LPAREN base_type RPAREN LNAME VARIABLE LPAREN args RPAREN
##

parsing "cn_function": seen "CN_FUNCTION enter_cn cn_attrs LPAREN base_type RPAREN LNAME VARIABLE LPAREN args RPAREN", expecting "cn_option_func_body exit_cn"

cn_toplevel: CN_FUNCTION LPAREN CN_BOOL RPAREN LNAME TYPE WHILE
##
## Ends in an error in state: 1672.
##
## cn_function -> CN_FUNCTION enter_cn cn_attrs LPAREN base_type RPAREN LNAME TYPE . LPAREN args RPAREN cn_option_func_body exit_cn [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## CN_FUNCTION enter_cn cn_attrs LPAREN base_type RPAREN LNAME TYPE
##

parsing "cn_function": seen "CN_FUNCTION enter_cn cn_attrs LPAREN base_type RPAREN LNAME TYPE", expecting "LPAREN args RPAREN cn_option_func_body exit_cn"

cn_toplevel: CN_FUNCTION LPAREN CN_BOOL RPAREN LNAME TYPE LPAREN WHILE
##
## Ends in an error in state: 1673.
##
## cn_function -> CN_FUNCTION enter_cn cn_attrs LPAREN base_type RPAREN LNAME TYPE LPAREN . args RPAREN cn_option_func_body exit_cn [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## CN_FUNCTION enter_cn cn_attrs LPAREN base_type RPAREN LNAME TYPE LPAREN
##

parsing "cn_function": seen "CN_FUNCTION enter_cn cn_attrs LPAREN base_type RPAREN LNAME TYPE LPAREN", expecting "args RPAREN cn_option_func_body exit_cn"

cn_toplevel: CN_FUNCTION LPAREN CN_BOOL RPAREN LNAME TYPE LPAREN RPAREN WHILE
##
## Ends in an error in state: 1675.
##
## cn_function -> CN_FUNCTION enter_cn cn_attrs LPAREN base_type RPAREN LNAME TYPE LPAREN args RPAREN . cn_option_func_body exit_cn [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## CN_FUNCTION enter_cn cn_attrs LPAREN base_type RPAREN LNAME TYPE LPAREN args RPAREN
##

parsing "cn_function": seen "CN_FUNCTION enter_cn cn_attrs LPAREN base_type RPAREN LNAME TYPE LPAREN args RPAREN", expecting "cn_option_func_body exit_cn"

cn_toplevel: CN_DATATYPE UNAME VARIABLE WHILE
##
## Ends in an error in state: 1681.
##
## cn_datatype -> CN_DATATYPE enter_cn UNAME VARIABLE . LBRACE cn_cons_cases RBRACE exit_cn [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## CN_DATATYPE enter_cn UNAME VARIABLE
##

parsing "cn_datatype": seen "CN_DATATYPE enter_cn UNAME VARIABLE", expecting "LBRACE cn_cons_cases RBRACE exit_cn"

cn_toplevel: CN_DATATYPE UNAME VARIABLE LBRACE WHILE
##
## Ends in an error in state: 1682.
##
## cn_datatype -> CN_DATATYPE enter_cn UNAME VARIABLE LBRACE . cn_cons_cases RBRACE exit_cn [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## CN_DATATYPE enter_cn UNAME VARIABLE LBRACE
##

parsing "cn_datatype": seen "CN_DATATYPE enter_cn UNAME VARIABLE LBRACE", expecting "cn_cons_cases RBRACE exit_cn"

cn_toplevel: CN_DATATYPE LNAME TYPE LBRACE UNAME VARIABLE WHILE
##
## Ends in an error in state: 1684.
##
## cn_cons_case -> UNAME VARIABLE . LBRACE args RBRACE [ RBRACE COMMA ]
##
## The known suffix of the stack is as follows:
## UNAME VARIABLE
##

parsing "cn_cons_case": seen "UNAME VARIABLE", expecting "LBRACE args RBRACE"

cn_toplevel: CN_DATATYPE LNAME TYPE LBRACE UNAME VARIABLE LBRACE WHILE
##
## Ends in an error in state: 1685.
##
## cn_cons_case -> UNAME VARIABLE LBRACE . args RBRACE [ RBRACE COMMA ]
##
## The known suffix of the stack is as follows:
## UNAME VARIABLE LBRACE
##

parsing "cn_cons_case": seen "UNAME VARIABLE LBRACE", expecting "args RBRACE"

cn_toplevel: CN_DATATYPE LNAME TYPE LBRACE UNAME TYPE WHILE
##
## Ends in an error in state: 1688.
##
## cn_cons_case -> UNAME TYPE . LBRACE args RBRACE [ RBRACE COMMA ]
##
## The known suffix of the stack is as follows:
## UNAME TYPE
##

parsing "cn_cons_case": seen "UNAME TYPE", expecting "LBRACE args RBRACE"

cn_toplevel: CN_DATATYPE LNAME TYPE LBRACE UNAME TYPE LBRACE WHILE
##
## Ends in an error in state: 1689.
##
## cn_cons_case -> UNAME TYPE LBRACE . args RBRACE [ RBRACE COMMA ]
##
## The known suffix of the stack is as follows:
## UNAME TYPE LBRACE
##

parsing "cn_cons_case": seen "UNAME TYPE LBRACE", expecting "args RBRACE"

cn_toplevel: CN_DATATYPE LNAME TYPE LBRACE LNAME VARIABLE WHILE
##
## Ends in an error in state: 1693.
##
## cn_cons_case -> LNAME VARIABLE . LBRACE args RBRACE [ RBRACE COMMA ]
##
## The known suffix of the stack is as follows:
## LNAME VARIABLE
##

parsing "cn_cons_case": seen "LNAME VARIABLE", expecting "LBRACE args RBRACE"

cn_toplevel: CN_DATATYPE LNAME TYPE LBRACE LNAME VARIABLE LBRACE WHILE
##
## Ends in an error in state: 1694.
##
## cn_cons_case -> LNAME VARIABLE LBRACE . args RBRACE [ RBRACE COMMA ]
##
## The known suffix of the stack is as follows:
## LNAME VARIABLE LBRACE
##

parsing "cn_cons_case": seen "LNAME VARIABLE LBRACE", expecting "args RBRACE"

cn_toplevel: CN_DATATYPE LNAME TYPE LBRACE LNAME TYPE WHILE
##
## Ends in an error in state: 1697.
##
## cn_cons_case -> LNAME TYPE . LBRACE args RBRACE [ RBRACE COMMA ]
##
## The known suffix of the stack is as follows:
## LNAME TYPE
##

parsing "cn_cons_case": seen "LNAME TYPE", expecting "LBRACE args RBRACE"

cn_toplevel: CN_DATATYPE LNAME TYPE LBRACE LNAME TYPE LBRACE WHILE
##
## Ends in an error in state: 1698.
##
## cn_cons_case -> LNAME TYPE LBRACE . args RBRACE [ RBRACE COMMA ]
##
## The known suffix of the stack is as follows:
## LNAME TYPE LBRACE
##

parsing "cn_cons_case": seen "LNAME TYPE LBRACE", expecting "args RBRACE"

cn_toplevel: CN_DATATYPE LNAME TYPE LBRACE LNAME TYPE LBRACE RBRACE COMMA WHILE
##
## Ends in an error in state: 1707.
##
## separated_nonempty_list(COMMA,cn_cons_case) -> cn_cons_case COMMA . separated_nonempty_list(COMMA,cn_cons_case) [ RBRACE ]
##
## The known suffix of the stack is as follows:
## cn_cons_case COMMA
##

parsing "separated_nonempty_list(COMMA,cn_cons_case)": seen "cn_cons_case COMMA", expecting "separated_nonempty_list(COMMA,cn_cons_case)"

cn_toplevel: CN_DATATYPE UNAME TYPE WHILE
##
## Ends in an error in state: 1709.
##
## cn_datatype -> CN_DATATYPE enter_cn UNAME TYPE . LBRACE cn_cons_cases RBRACE exit_cn [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## CN_DATATYPE enter_cn UNAME TYPE
##

parsing "cn_datatype": seen "CN_DATATYPE enter_cn UNAME TYPE", expecting "LBRACE cn_cons_cases RBRACE exit_cn"

cn_toplevel: CN_DATATYPE UNAME TYPE LBRACE WHILE
##
## Ends in an error in state: 1710.
##
## cn_datatype -> CN_DATATYPE enter_cn UNAME TYPE LBRACE . cn_cons_cases RBRACE exit_cn [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## CN_DATATYPE enter_cn UNAME TYPE LBRACE
##

parsing "cn_datatype": seen "CN_DATATYPE enter_cn UNAME TYPE LBRACE", expecting "cn_cons_cases RBRACE exit_cn"

cn_toplevel: CN_DATATYPE LNAME VARIABLE WHILE
##
## Ends in an error in state: 1715.
##
## cn_datatype -> CN_DATATYPE enter_cn LNAME VARIABLE . LBRACE cn_cons_cases RBRACE exit_cn [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## CN_DATATYPE enter_cn LNAME VARIABLE
##

parsing "cn_datatype": seen "CN_DATATYPE enter_cn LNAME VARIABLE", expecting "LBRACE cn_cons_cases RBRACE exit_cn"

cn_toplevel: CN_DATATYPE LNAME VARIABLE LBRACE WHILE
##
## Ends in an error in state: 1716.
##
## cn_datatype -> CN_DATATYPE enter_cn LNAME VARIABLE LBRACE . cn_cons_cases RBRACE exit_cn [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## CN_DATATYPE enter_cn LNAME VARIABLE LBRACE
##

parsing "cn_datatype": seen "CN_DATATYPE enter_cn LNAME VARIABLE LBRACE", expecting "cn_cons_cases RBRACE exit_cn"

cn_toplevel: CN_DATATYPE LNAME TYPE WHILE
##
## Ends in an error in state: 1720.
##
## cn_datatype -> CN_DATATYPE enter_cn LNAME TYPE . LBRACE cn_cons_cases RBRACE exit_cn [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## CN_DATATYPE enter_cn LNAME TYPE
##

parsing "cn_datatype": seen "CN_DATATYPE enter_cn LNAME TYPE", expecting "LBRACE cn_cons_cases RBRACE exit_cn"

cn_toplevel: CN_DATATYPE LNAME TYPE LBRACE WHILE
##
## Ends in an error in state: 1721.
##
## cn_datatype -> CN_DATATYPE enter_cn LNAME TYPE LBRACE . cn_cons_cases RBRACE exit_cn [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## CN_DATATYPE enter_cn LNAME TYPE LBRACE
##

parsing "cn_datatype": seen "CN_DATATYPE enter_cn LNAME TYPE LBRACE", expecting "cn_cons_cases RBRACE exit_cn"

cn_toplevel: CN_DATATYPE LNAME TYPE LBRACE RBRACE VOLATILE
##
## Ends in an error in state: 1725.
##
## cn_toplevel -> cn_toplevel_elem . cn_toplevel [ # ]
##
## The known suffix of the stack is as follows:
## cn_toplevel_elem
##

parsing "cn_toplevel": seen "cn_toplevel_elem", expecting "cn_toplevel"

function_spec: WHILE
##
## Ends in an error in state: 1733.
##
## function_spec' -> . function_spec [ # ]
##
## The known suffix of the stack is as follows:
##
##

parsing "function_spec'": expected "function_spec"

function_spec: CN_TRUSTED WHILE
##
## Ends in an error in state: 1734.
##
## function_spec -> CN_TRUSTED . EOF [ # ]
##
## The known suffix of the stack is as follows:
## CN_TRUSTED
##

parsing "function_spec": seen "CN_TRUSTED", expecting "EOF"

function_spec: CN_REQUIRES WHILE
##
## Ends in an error in state: 1736.
##
## function_spec -> CN_REQUIRES . loption(separated_nonempty_list(SEMICOLON,condition)) EOF [ # ]
##
## The known suffix of the stack is as follows:
## CN_REQUIRES
##

parsing "function_spec": seen "CN_REQUIRES", expecting "loption(separated_nonempty_list(SEMICOLON,condition)) EOF"

function_spec: CN_FUNCTION UNAME VARIABLE WHILE
##
## Ends in an error in state: 1742.
##
## function_spec -> CN_FUNCTION UNAME VARIABLE . EOF [ # ]
##
## The known suffix of the stack is as follows:
## CN_FUNCTION UNAME VARIABLE
##

parsing "function_spec": seen "CN_FUNCTION UNAME VARIABLE", expecting "EOF"

function_spec: CN_FUNCTION UNAME TYPE WHILE
##
## Ends in an error in state: 1744.
##
## function_spec -> CN_FUNCTION UNAME TYPE . EOF [ # ]
##
## The known suffix of the stack is as follows:
## CN_FUNCTION UNAME TYPE
##

parsing "function_spec": seen "CN_FUNCTION UNAME TYPE", expecting "EOF"

function_spec: CN_FUNCTION LNAME VARIABLE WHILE
##
## Ends in an error in state: 1747.
##
## function_spec -> CN_FUNCTION LNAME VARIABLE . EOF [ # ]
##
## The known suffix of the stack is as follows:
## CN_FUNCTION LNAME VARIABLE
##

parsing "function_spec": seen "CN_FUNCTION LNAME VARIABLE", expecting "EOF"

function_spec: CN_FUNCTION LNAME TYPE WHILE
##
## Ends in an error in state: 1749.
##
## function_spec -> CN_FUNCTION LNAME TYPE . EOF [ # ]
##
## The known suffix of the stack is as follows:
## CN_FUNCTION LNAME TYPE
##

parsing "function_spec": seen "CN_FUNCTION LNAME TYPE", expecting "EOF"

function_spec: CN_ENSURES WHILE
##
## Ends in an error in state: 1751.
##
## function_spec -> CN_ENSURES . loption(separated_nonempty_list(SEMICOLON,condition)) EOF [ # ]
##
## The known suffix of the stack is as follows:
## CN_ENSURES
##

parsing "function_spec": seen "CN_ENSURES", expecting "loption(separated_nonempty_list(SEMICOLON,condition)) EOF"

function_spec: CN_ACCESSES WHILE
##
## Ends in an error in state: 1754.
##
## function_spec -> CN_ACCESSES . loption(separated_nonempty_list(SEMICOLON,cn_variable)) EOF [ # ]
##
## The known suffix of the stack is as follows:
## CN_ACCESSES
##

parsing "function_spec": seen "CN_ACCESSES", expecting "loption(separated_nonempty_list(SEMICOLON,cn_variable)) EOF"

function_spec: CN_ACCESSES UNAME VARIABLE SEMICOLON WHILE
##
## Ends in an error in state: 1757.
##
## separated_nonempty_list(SEMICOLON,cn_variable) -> UNAME VARIABLE SEMICOLON . separated_nonempty_list(SEMICOLON,cn_variable) [ EOF ]
##
## The known suffix of the stack is as follows:
## UNAME VARIABLE SEMICOLON
##

parsing "separated_nonempty_list(SEMICOLON,cn_variable)": seen "UNAME VARIABLE SEMICOLON", expecting "separated_nonempty_list(SEMICOLON,cn_variable)"

function_spec: CN_ACCESSES LNAME VARIABLE SEMICOLON WHILE
##
## Ends in an error in state: 1760.
##
## separated_nonempty_list(SEMICOLON,cn_variable) -> LNAME VARIABLE SEMICOLON . separated_nonempty_list(SEMICOLON,cn_variable) [ EOF ]
##
## The known suffix of the stack is as follows:
## LNAME VARIABLE SEMICOLON
##

parsing "separated_nonempty_list(SEMICOLON,cn_variable)": seen "LNAME VARIABLE SEMICOLON", expecting "separated_nonempty_list(SEMICOLON,cn_variable)"

function_spec: CN_ACCESSES LNAME TYPE SEMICOLON WHILE
##
## Ends in an error in state: 1763.
##
## separated_nonempty_list(SEMICOLON,cn_variable) -> LNAME TYPE SEMICOLON . separated_nonempty_list(SEMICOLON,cn_variable) [ EOF ]
##
## The known suffix of the stack is as follows:
## LNAME TYPE SEMICOLON
##

parsing "separated_nonempty_list(SEMICOLON,cn_variable)": seen "LNAME TYPE SEMICOLON", expecting "separated_nonempty_list(SEMICOLON,cn_variable)"

function_spec: CN_ACCESSES UNAME TYPE SEMICOLON WHILE
##
## Ends in an error in state: 1767.
##
## separated_nonempty_list(SEMICOLON,cn_variable) -> UNAME TYPE SEMICOLON . separated_nonempty_list(SEMICOLON,cn_variable) [ EOF ]
##
## The known suffix of the stack is as follows:
## UNAME TYPE SEMICOLON
##

parsing "separated_nonempty_list(SEMICOLON,cn_variable)": seen "UNAME TYPE SEMICOLON", expecting "separated_nonempty_list(SEMICOLON,cn_variable)"

loop_spec: WHILE
##
## Ends in an error in state: 1773.
##
## loop_spec' -> . loop_spec [ # ]
##
## The known suffix of the stack is as follows:
##
##

parsing "loop_spec'": expected "loop_spec"

loop_spec: CN_INV WHILE
##
## Ends in an error in state: 1774.
##
## loop_spec -> CN_INV . loption(separated_nonempty_list(SEMICOLON,condition)) EOF [ # ]
##
## The known suffix of the stack is as follows:
## CN_INV
##

parsing "loop_spec": seen "CN_INV", expecting "loption(separated_nonempty_list(SEMICOLON,condition)) EOF"

translation_unit: WHILE
##
## Ends in an error in state: 1778.
##
## translation_unit' -> . translation_unit [ # ]
##
## The known suffix of the stack is as follows:
##
##

parsing "translation_unit'": expected "translation_unit"

translation_unit: BOOL LNAME TYPE LBRACE RBRACE WHILE
##
## Ends in an error in state: 1785.
##
## function_definition -> function_definition1 option(declaration_list) magic_comment_list compound_statement . boption(SEMICOLON) [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## function_definition1 option(declaration_list) magic_comment_list compound_statement
##

parsing "function_definition": seen "function_definition1 option(declaration_list) magic_comment_list compound_statement", expecting "boption(SEMICOLON)"

cn_statement: CN_EXTRACT CN_OWNED WHILE
##
## Ends in an error in state: 4.
##
## pred -> CN_OWNED . LT ctype GT [ LPAREN COMMA ]
## pred -> CN_OWNED . [ LPAREN COMMA ]
##
## The known suffix of the stack is as follows:
## CN_OWNED
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: TYPEOF WHILE
##
## Ends in an error in state: 12.
##
## type_specifier_unique -> TYPEOF . LPAREN expression RPAREN [ VOLATILE UNAME TYPEDEF THREAD_LOCAL STATIC STAR SEMICOLON RPAREN RESTRICT REGISTER NORETURN LPAREN LNAME LBRACK_LBRACK LBRACK INLINE GT EXTERN CONST COMMA COLON AUTO ATOMIC ALIGNAS ]
## type_specifier_unique -> TYPEOF . LPAREN type_name RPAREN [ VOLATILE UNAME TYPEDEF THREAD_LOCAL STATIC STAR SEMICOLON RPAREN RESTRICT REGISTER NORETURN LPAREN LNAME LBRACK_LBRACK LBRACK INLINE GT EXTERN CONST COMMA COLON AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## TYPEOF
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: TYPEOF LPAREN WHILE
##
## Ends in an error in state: 13.
##
## type_specifier_unique -> TYPEOF LPAREN . expression RPAREN [ VOLATILE UNAME TYPEDEF THREAD_LOCAL STATIC STAR SEMICOLON RPAREN RESTRICT REGISTER NORETURN LPAREN LNAME LBRACK_LBRACK LBRACK INLINE GT EXTERN CONST COMMA COLON AUTO ATOMIC ALIGNAS ]
## type_specifier_unique -> TYPEOF LPAREN . type_name RPAREN [ VOLATILE UNAME TYPEDEF THREAD_LOCAL STATIC STAR SEMICOLON RPAREN RESTRICT REGISTER NORETURN LPAREN LNAME LBRACK_LBRACK LBRACK INLINE GT EXTERN CONST COMMA COLON AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## TYPEOF LPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ALIGNAS LPAREN SIZEOF WHILE
##
## Ends in an error in state: 27.
##
## unary_expression -> SIZEOF . unary_expression [ STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_EQ MINUS LT_LT_EQ LT_LT LT_EQ LT GT_GT_EQ GT_GT GT_EQ GT EQ_EQ EQ ELLIPSIS COMMA COLON CARET_EQ CARET BANG_EQ AMPERSAND_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## unary_expression -> SIZEOF . LPAREN type_name RPAREN [ STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_EQ MINUS LT_LT_EQ LT_LT LT_EQ LT GT_GT_EQ GT_GT GT_EQ GT EQ_EQ EQ ELLIPSIS COMMA COLON CARET_EQ CARET BANG_EQ AMPERSAND_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## SIZEOF
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ENUM WHILE
##
## Ends in an error in state: 43.
##
## enum_specifier -> ENUM . option(general_identifier) LBRACE enumerator_list option(COMMA) RBRACE [ VOLATILE UNAME TYPEDEF THREAD_LOCAL STATIC STAR SEMICOLON RPAREN RESTRICT REGISTER NORETURN LPAREN LNAME LBRACK_LBRACK LBRACK INLINE GT EXTERN CONST COMMA COLON AUTO ATOMIC ALIGNAS ]
## enum_specifier -> ENUM . attribute_specifier_sequence option(general_identifier) LBRACE enumerator_list option(COMMA) RBRACE [ VOLATILE UNAME TYPEDEF THREAD_LOCAL STATIC STAR SEMICOLON RPAREN RESTRICT REGISTER NORETURN LPAREN LNAME LBRACK_LBRACK LBRACK INLINE GT EXTERN CONST COMMA COLON AUTO ATOMIC ALIGNAS ]
## enum_specifier -> ENUM . general_identifier [ VOLATILE UNAME TYPEDEF THREAD_LOCAL STATIC STAR SEMICOLON RPAREN RESTRICT REGISTER NORETURN LPAREN LNAME LBRACK_LBRACK LBRACK INLINE GT EXTERN CONST COMMA COLON AUTO ATOMIC ALIGNAS ]
## enum_specifier -> ENUM . attribute_specifier_sequence general_identifier [ VOLATILE UNAME TYPEDEF THREAD_LOCAL STATIC STAR SEMICOLON RPAREN RESTRICT REGISTER NORETURN LPAREN LNAME LBRACK_LBRACK LBRACK INLINE GT EXTERN CONST COMMA COLON AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## ENUM
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: BOOL UNAME WHILE
##
## Ends in an error in state: 44.
##
## typedef_name -> UNAME . TYPE [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR_EQ STAR SLASH_EQ SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION_COLON QUESTION PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT NORETURN MINUS_MINUS MINUS_GT MINUS_EQ MINUS LT_LT_EQ LT_LT LT_EQ LT LPAREN LONG LNAME LBRACK_LBRACK LBRACK LBRACES LBRACE INT INLINE GT_GT_EQ GT_GT GT_EQ GT FLOAT EXTERN EQ_EQ EQ ENUM ELLIPSIS DOUBLE DOT CONST COMPLEX COMMA COLON_COLON COLON CHAR CERB_MAGIC CARET_EQ CARET BOOL BANG_EQ AUTO ATOMIC ASM AMPERSAND_EQ AMPERSAND_AMPERSAND AMPERSAND ALIGNAS ]
## var_name -> UNAME . VARIABLE [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR_EQ STAR SLASH_EQ SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION_COLON QUESTION PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT NORETURN MINUS_MINUS MINUS_GT MINUS_EQ MINUS LT_LT_EQ LT_LT LT_EQ LT LPAREN LONG LNAME LBRACK_LBRACK LBRACK LBRACES LBRACE INT INLINE GT_GT_EQ GT_GT GT_EQ GT FLOAT EXTERN EQ_EQ EQ ENUM ELLIPSIS DOUBLE DOT CONST COMPLEX COMMA COLON_COLON COLON CHAR CERB_MAGIC CARET_EQ CARET BOOL BANG_EQ AUTO ATOMIC ASM AMPERSAND_EQ AMPERSAND_AMPERSAND AMPERSAND ALIGNAS ]
##
## The known suffix of the stack is as follows:
## UNAME
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: BOOL LNAME WHILE
##
## Ends in an error in state: 45.
##
## typedef_name -> LNAME . TYPE [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR_EQ STAR SLASH_EQ SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION_COLON QUESTION PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT NORETURN MINUS_MINUS MINUS_GT MINUS_EQ MINUS LT_LT_EQ LT_LT LT_EQ LT LPAREN LONG LNAME LBRACK_LBRACK LBRACK LBRACES LBRACE INT INLINE GT_GT_EQ GT_GT GT_EQ GT FLOAT EXTERN EQ_EQ EQ ENUM ELLIPSIS DOUBLE DOT CONST COMPLEX COMMA COLON_COLON COLON CHAR CERB_MAGIC CARET_EQ CARET BOOL BANG_EQ AUTO ATOMIC ASM AMPERSAND_EQ AMPERSAND_AMPERSAND AMPERSAND ALIGNAS ]
## var_name -> LNAME . VARIABLE [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR_EQ STAR SLASH_EQ SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION_COLON QUESTION PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT NORETURN MINUS_MINUS MINUS_GT MINUS_EQ MINUS LT_LT_EQ LT_LT LT_EQ LT LPAREN LONG LNAME LBRACK_LBRACK LBRACK LBRACES LBRACE INT INLINE GT_GT_EQ GT_GT GT_EQ GT FLOAT EXTERN EQ_EQ EQ ENUM ELLIPSIS DOUBLE DOT CONST COMPLEX COMMA COLON_COLON COLON CHAR CERB_MAGIC CARET_EQ CARET BOOL BANG_EQ AUTO ATOMIC ASM AMPERSAND_EQ AMPERSAND_AMPERSAND AMPERSAND ALIGNAS ]
##
## The known suffix of the stack is as follows:
## LNAME
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ALIGNAS LPAREN STRING_LITERAL WHILE
##
## Ends in an error in state: 100.
##
## nonempty_list(string_literal_component) -> string_literal_component . [ STRING_LITERAL STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_GT MINUS_EQ MINUS LT_LT_EQ LT_LT LT_EQ LT LPAREN LBRACK LBRACE GT_GT_EQ GT_GT GT_EQ GT EQ_EQ EQ ELLIPSIS DOT COMMA COLON CARET_EQ CARET BANG_EQ AMPERSAND_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## nonempty_list(string_literal_component) -> string_literal_component . nonempty_list(string_literal_component) [ STRING_LITERAL STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_GT MINUS_EQ MINUS LT_LT_EQ LT_LT LT_EQ LT LPAREN LBRACK LBRACE GT_GT_EQ GT_GT GT_EQ GT EQ_EQ EQ ELLIPSIS DOT COMMA COLON CARET_EQ CARET BANG_EQ AMPERSAND_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## string_literal_component
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: LBRACK_LBRACK ALIGNAS LPAREN STRING_LITERAL STAR_EQ
##
## Ends in an error in state: 105.
##
## separated_nonempty_list(COMMA,located_string_literal) -> located_string_literal . [ STRING_LITERAL RPAREN RBRACK RBRACE LPAREN LBRACK LBRACE ]
## separated_nonempty_list(COMMA,located_string_literal) -> located_string_literal . COMMA separated_nonempty_list(COMMA,located_string_literal) [ STRING_LITERAL RPAREN RBRACK RBRACE LPAREN LBRACK LBRACE ]
##
## The known suffix of the stack is as follows:
## located_string_literal
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 100, spurious reduction of production nonempty_list(string_literal_component) -> string_literal_component
## In state 104, spurious reduction of production string_literal -> nonempty_list(string_literal_component)
## In state 102, spurious reduction of production located_string_literal -> string_literal
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: LBRACK_LBRACK ALIGNAS LPAREN LBRACE STRING_LITERAL RPAREN
##
## Ends in an error in state: 108.
##
## balanced_token -> LBRACE balanced_token_sequence . RBRACE [ STRING_LITERAL RPAREN RBRACK RBRACE LPAREN LBRACK LBRACE ]
## balanced_token_sequence -> balanced_token_sequence . balanced_token [ STRING_LITERAL RBRACE LPAREN LBRACK LBRACE ]
##
## The known suffix of the stack is as follows:
## LBRACE balanced_token_sequence
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 100, spurious reduction of production nonempty_list(string_literal_component) -> string_literal_component
## In state 104, spurious reduction of production string_literal -> nonempty_list(string_literal_component)
## In state 102, spurious reduction of production located_string_literal -> string_literal
## In state 105, spurious reduction of production separated_nonempty_list(COMMA,located_string_literal) -> located_string_literal
## In state 103, spurious reduction of production balanced_token -> separated_nonempty_list(COMMA,located_string_literal)
## In state 111, spurious reduction of production balanced_token_sequence -> balanced_token
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: LBRACK_LBRACK ALIGNAS LPAREN LBRACK STRING_LITERAL RPAREN
##
## Ends in an error in state: 112.
##
## balanced_token -> LBRACK balanced_token_sequence . RBRACK [ STRING_LITERAL RPAREN RBRACK RBRACE LPAREN LBRACK LBRACE ]
## balanced_token_sequence -> balanced_token_sequence . balanced_token [ STRING_LITERAL RBRACK LPAREN LBRACK LBRACE ]
##
## The known suffix of the stack is as follows:
## LBRACK balanced_token_sequence
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 100, spurious reduction of production nonempty_list(string_literal_component) -> string_literal_component
## In state 104, spurious reduction of production string_literal -> nonempty_list(string_literal_component)
## In state 102, spurious reduction of production located_string_literal -> string_literal
## In state 105, spurious reduction of production separated_nonempty_list(COMMA,located_string_literal) -> located_string_literal
## In state 103, spurious reduction of production balanced_token -> separated_nonempty_list(COMMA,located_string_literal)
## In state 111, spurious reduction of production balanced_token_sequence -> balanced_token
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: LBRACK_LBRACK ALIGNAS LPAREN LPAREN STRING_LITERAL RBRACK
##
## Ends in an error in state: 114.
##
## balanced_token -> LPAREN balanced_token_sequence . RPAREN [ STRING_LITERAL RPAREN RBRACK RBRACE LPAREN LBRACK LBRACE ]
## balanced_token_sequence -> balanced_token_sequence . balanced_token [ STRING_LITERAL RPAREN LPAREN LBRACK LBRACE ]
##
## The known suffix of the stack is as follows:
## LPAREN balanced_token_sequence
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 100, spurious reduction of production nonempty_list(string_literal_component) -> string_literal_component
## In state 104, spurious reduction of production string_literal -> nonempty_list(string_literal_component)
## In state 102, spurious reduction of production located_string_literal -> string_literal
## In state 105, spurious reduction of production separated_nonempty_list(COMMA,located_string_literal) -> located_string_literal
## In state 103, spurious reduction of production balanced_token -> separated_nonempty_list(COMMA,located_string_literal)
## In state 111, spurious reduction of production balanced_token_sequence -> balanced_token
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: LBRACK_LBRACK ALIGNAS LPAREN STRING_LITERAL RBRACK
##
## Ends in an error in state: 116.
##
## attribute_argument_clause -> LPAREN balanced_token_sequence . RPAREN [ RBRACK COMMA ]
## balanced_token_sequence -> balanced_token_sequence . balanced_token [ STRING_LITERAL RPAREN LPAREN LBRACK LBRACE ]
##
## The known suffix of the stack is as follows:
## LPAREN balanced_token_sequence
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 100, spurious reduction of production nonempty_list(string_literal_component) -> string_literal_component
## In state 104, spurious reduction of production string_literal -> nonempty_list(string_literal_component)
## In state 102, spurious reduction of production located_string_literal -> string_literal
## In state 105, spurious reduction of production separated_nonempty_list(COMMA,located_string_literal) -> located_string_literal
## In state 103, spurious reduction of production balanced_token -> separated_nonempty_list(COMMA,located_string_literal)
## In state 111, spurious reduction of production balanced_token_sequence -> balanced_token
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: LBRACK_LBRACK ALIGNAS LPAREN STRING_LITERAL RPAREN WHILE
##
## Ends in an error in state: 121.
##
## attribute_list -> attribute_list . COMMA attribute [ RBRACK COMMA ]
## attribute_specifier -> LBRACK_LBRACK attribute_list . RBRACK RBRACK [ WHILE VOLATILE VOID VA_START VA_END VA_COPY VA_ARG UNSIGNED UNION UNAME TYPEOF TYPEDEF TILDE THREAD_LOCAL SWITCH STRUCT STRING_LITERAL STATIC_ASSERT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RPAREN RETURN RESTRICT REGISTER RBRACE PRINT_TYPE PLUS_PLUS PLUS OFFSETOF NORETURN MINUS_MINUS MINUS LPAREN LONG LNAME LBRACK_LBRACK LBRACK LBRACES LBRACE INT INLINE IF GT GOTO GENERIC FOR FLOAT EXTERN EQ ENUM DOUBLE DO DEFAULT CONTINUE CONSTANT CONST COMPLEX COMMA COLON CHAR CERB_MAGIC CASE BUILTIN_TYPES_COMPATIBLE_P BUILTIN_CHOOSE_EXPR BREAK BOOL BMC_ASSUME BANG AUTO ATOMIC ASSERT ASM AMPERSAND ALIGNOF ALIGNAS ]
##
## The known suffix of the stack is as follows:
## LBRACK_LBRACK attribute_list
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: LBRACK_LBRACK ALIGNAS WHILE
##
## Ends in an error in state: 125.
##
## attribute_prefixed_token -> attribute_identifier . COLON_COLON attribute_identifier [ RBRACK LPAREN COMMA ]
## attribute_token -> attribute_identifier . [ RBRACK LPAREN COMMA ]
##
## The known suffix of the stack is as follows:
## attribute_identifier
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ENUM LBRACE LNAME TYPE EQ STRING_LITERAL RPAREN
##
## Ends in an error in state: 133.
##
## enum_specifier -> ENUM option(general_identifier) LBRACE enumerator_list . option(COMMA) RBRACE [ VOLATILE UNAME TYPEDEF THREAD_LOCAL STATIC STAR SEMICOLON RPAREN RESTRICT REGISTER NORETURN LPAREN LNAME LBRACK_LBRACK LBRACK INLINE GT EXTERN CONST COMMA COLON AUTO ATOMIC ALIGNAS ]
## enumerator_list -> enumerator_list . COMMA enumerator [ RBRACE COMMA ]
##
## The known suffix of the stack is as follows:
## ENUM option(general_identifier) LBRACE enumerator_list
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 100, spurious reduction of production nonempty_list(string_literal_component) -> string_literal_component
## In state 104, spurious reduction of production string_literal -> nonempty_list(string_literal_component)
## In state 196, spurious reduction of production start_ignore ->
## In state 197, spurious reduction of production primary_expression -> string_literal start_ignore
## In state 198, spurious reduction of production postfix_expression -> primary_expression
## In state 199, spurious reduction of production unary_expression -> postfix_expression
## In state 195, spurious reduction of production cast_expression -> unary_expression
## In state 228, spurious reduction of production multiplicative_expression -> cast_expression
## In state 220, spurious reduction of production additive_expression -> multiplicative_expression
## In state 239, spurious reduction of production shift_expression -> additive_expression
## In state 218, spurious reduction of production relational_expression -> shift_expression
## In state 236, spurious reduction of production equality_expression -> relational_expression
## In state 254, spurious reduction of production _AND_expression -> equality_expression
## In state 262, spurious reduction of production exclusive_OR_expression -> _AND_expression
## In state 263, spurious reduction of production inclusive_OR_expression -> exclusive_OR_expression
## In state 264, spurious reduction of production logical_AND_expression -> inclusive_OR_expression
## In state 248, spurious reduction of production logical_OR_expression -> logical_AND_expression
## In state 246, spurious reduction of production conditional_expression -> logical_OR_expression
## In state 294, spurious reduction of production constant_expression -> conditional_expression
## In state 789, spurious reduction of production enumerator -> enumeration_constant EQ constant_expression
## In state 795, spurious reduction of production enumerator_list -> enumerator
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ENUM LBRACE LNAME TYPE COMMA WHILE
##
## Ends in an error in state: 134.
##
## enumerator_list -> enumerator_list COMMA . enumerator [ RBRACE COMMA ]
## option(COMMA) -> COMMA . [ RBRACE ]
##
## The known suffix of the stack is as follows:
## enumerator_list COMMA
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ENUM LBRACE LNAME TYPE WHILE
##
## Ends in an error in state: 136.
##
## enumerator -> enumeration_constant . [ RBRACE COMMA ]
## enumerator -> enumeration_constant . attribute_specifier_sequence [ RBRACE COMMA ]
## enumerator -> enumeration_constant . EQ constant_expression [ RBRACE COMMA ]
## enumerator -> enumeration_constant . attribute_specifier_sequence EQ constant_expression [ RBRACE COMMA ]
##
## The known suffix of the stack is as follows:
## enumeration_constant
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ALIGNAS LPAREN MINUS_MINUS LPAREN WHILE
##
## Ends in an error in state: 140.
##
## postfix_expression -> LPAREN . type_name RPAREN LBRACE initializer_list option(COMMA) RBRACE [ STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_GT MINUS_EQ MINUS LT_LT_EQ LT_LT LT_EQ LT LPAREN LBRACK GT_GT_EQ GT_GT GT_EQ GT EQ_EQ EQ ELLIPSIS DOT COMMA COLON CARET_EQ CARET BANG_EQ AMPERSAND_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## primary_expression -> LPAREN . expression RPAREN [ STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_GT MINUS_EQ MINUS LT_LT_EQ LT_LT LT_EQ LT LPAREN LBRACK GT_GT_EQ GT_GT GT_EQ GT EQ_EQ EQ ELLIPSIS DOT COMMA COLON CARET_EQ CARET BANG_EQ AMPERSAND_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## primary_expression -> LPAREN . scoped(compound_statement) RPAREN [ STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_GT MINUS_EQ MINUS LT_LT_EQ LT_LT LT_EQ LT LPAREN LBRACK GT_GT_EQ GT_GT GT_EQ GT EQ_EQ EQ ELLIPSIS DOT COMMA COLON CARET_EQ CARET BANG_EQ AMPERSAND_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## LPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ALIGNAS LPAREN LPAREN WHILE
##
## Ends in an error in state: 141.
##
## cast_expression -> LPAREN . type_name RPAREN cast_expression [ STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_EQ MINUS LT_LT_EQ LT_LT LT_EQ LT GT_GT_EQ GT_GT GT_EQ GT EQ_EQ EQ ELLIPSIS COMMA COLON CARET_EQ CARET BANG_EQ AMPERSAND_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## postfix_expression -> LPAREN . type_name RPAREN LBRACE initializer_list option(COMMA) RBRACE [ STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_GT MINUS_EQ MINUS LT_LT_EQ LT_LT LT_EQ LT LPAREN LBRACK GT_GT_EQ GT_GT GT_EQ GT EQ_EQ EQ ELLIPSIS DOT COMMA COLON CARET_EQ CARET BANG_EQ AMPERSAND_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## primary_expression -> LPAREN . expression RPAREN [ STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_GT MINUS_EQ MINUS LT_LT_EQ LT_LT LT_EQ LT LPAREN LBRACK GT_GT_EQ GT_GT GT_EQ GT EQ_EQ EQ ELLIPSIS DOT COMMA COLON CARET_EQ CARET BANG_EQ AMPERSAND_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## primary_expression -> LPAREN . scoped(compound_statement) RPAREN [ STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_GT MINUS_EQ MINUS LT_LT_EQ LT_LT LT_EQ LT LPAREN LBRACK GT_GT_EQ GT_GT GT_EQ GT EQ_EQ EQ ELLIPSIS DOT COMMA COLON CARET_EQ CARET BANG_EQ AMPERSAND_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## LPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ATOMIC WHILE
##
## Ends in an error in state: 154.
##
## atomic_type_specifier -> ATOMIC . LPAREN type_name RPAREN [ VOLATILE UNAME TYPEDEF THREAD_LOCAL STATIC STAR SEMICOLON RPAREN RESTRICT REGISTER NORETURN LPAREN LNAME LBRACK_LBRACK LBRACK INLINE GT EXTERN CONST COMMA COLON AUTO ATOMIC ALIGNAS ]
## type_qualifier -> ATOMIC . [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC SIGNED SHORT RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN ENUM DOUBLE CONST COMPLEX CHAR BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## ATOMIC
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ALIGNAS WHILE
##
## Ends in an error in state: 156.
##
## alignment_specifier -> ALIGNAS . LPAREN type_name RPAREN [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NORETURN LPAREN LONG LNAME LBRACK_LBRACK LBRACK INT INLINE GT FLOAT EXTERN ENUM DOUBLE CONST COMPLEX COMMA COLON CHAR BOOL AUTO ATOMIC ALIGNAS ]
## alignment_specifier -> ALIGNAS . LPAREN constant_expression RPAREN [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NORETURN LPAREN LONG LNAME LBRACK_LBRACK LBRACK INT INLINE GT FLOAT EXTERN ENUM DOUBLE CONST COMPLEX COMMA COLON CHAR BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## ALIGNAS
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ALIGNAS LPAREN WHILE
##
## Ends in an error in state: 157.
##
## alignment_specifier -> ALIGNAS LPAREN . type_name RPAREN [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NORETURN LPAREN LONG LNAME LBRACK_LBRACK LBRACK INT INLINE GT FLOAT EXTERN ENUM DOUBLE CONST COMPLEX COMMA COLON CHAR BOOL AUTO ATOMIC ALIGNAS ]
## alignment_specifier -> ALIGNAS LPAREN . constant_expression RPAREN [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NORETURN LPAREN LONG LNAME LBRACK_LBRACK LBRACK INT INLINE GT FLOAT EXTERN ENUM DOUBLE CONST COMPLEX COMMA COLON CHAR BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## ALIGNAS LPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: BOOL WHILE
##
## Ends in an error in state: 170.
##
## attribute_type_specifier_unique -> type_specifier_unique . [ VOLATILE UNAME TYPEDEF THREAD_LOCAL STATIC STAR SEMICOLON RPAREN RESTRICT REGISTER NORETURN LPAREN LNAME LBRACK INLINE GT EXTERN CONST COMMA COLON AUTO ATOMIC ALIGNAS ]
## attribute_type_specifier_unique -> type_specifier_unique . attribute_specifier_sequence [ VOLATILE UNAME TYPEDEF THREAD_LOCAL STATIC STAR SEMICOLON RPAREN RESTRICT REGISTER NORETURN LPAREN LNAME LBRACK INLINE GT EXTERN CONST COMMA COLON AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## type_specifier_unique
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: BOOL LBRACK_LBRACK ALIGNAS RBRACK RBRACK WHILE
##
## Ends in an error in state: 171.
##
## attribute_specifier_sequence -> attribute_specifier_sequence . attribute_specifier [ VOLATILE UNAME TYPEDEF THREAD_LOCAL STATIC STAR SEMICOLON RPAREN RESTRICT REGISTER NORETURN LPAREN LNAME LBRACK_LBRACK LBRACK INLINE GT EXTERN CONST COMMA COLON AUTO ATOMIC ALIGNAS ]
## attribute_type_specifier_unique -> type_specifier_unique attribute_specifier_sequence . [ VOLATILE UNAME TYPEDEF THREAD_LOCAL STATIC STAR SEMICOLON RPAREN RESTRICT REGISTER NORETURN LPAREN LNAME LBRACK INLINE GT EXTERN CONST COMMA COLON AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## type_specifier_unique attribute_specifier_sequence
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: CHAR WHILE
##
## Ends in an error in state: 174.
##
## attribute_type_specifier_nonunique -> type_specifier_nonunique . [ VOLATILE UNSIGNED UNAME TYPEDEF THREAD_LOCAL STATIC STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NORETURN LPAREN LONG LNAME LBRACK INT INLINE GT FLOAT EXTERN DOUBLE CONST COMPLEX COMMA COLON CHAR AUTO ATOMIC ALIGNAS ]
## attribute_type_specifier_nonunique -> type_specifier_nonunique . attribute_specifier_sequence [ VOLATILE UNSIGNED UNAME TYPEDEF THREAD_LOCAL STATIC STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NORETURN LPAREN LONG LNAME LBRACK INT INLINE GT FLOAT EXTERN DOUBLE CONST COMPLEX COMMA COLON CHAR AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## type_specifier_nonunique
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: CHAR LBRACK_LBRACK ALIGNAS RBRACK RBRACK WHILE
##
## Ends in an error in state: 175.
##
## attribute_specifier_sequence -> attribute_specifier_sequence . attribute_specifier [ VOLATILE UNSIGNED UNAME TYPEDEF THREAD_LOCAL STATIC STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NORETURN LPAREN LONG LNAME LBRACK_LBRACK LBRACK INT INLINE GT FLOAT EXTERN DOUBLE CONST COMPLEX COMMA COLON CHAR AUTO ATOMIC ALIGNAS ]
## attribute_type_specifier_nonunique -> type_specifier_nonunique attribute_specifier_sequence . [ VOLATILE UNSIGNED UNAME TYPEDEF THREAD_LOCAL STATIC STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NORETURN LPAREN LONG LNAME LBRACK INT INLINE GT FLOAT EXTERN DOUBLE CONST COMPLEX COMMA COLON CHAR AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## type_specifier_nonunique attribute_specifier_sequence
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ALIGNAS LPAREN ATOMIC TYPEDEF
##
## Ends in an error in state: 176.
##
## attribute_type_qualifier -> type_qualifier . [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF STRUCT STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT LPAREN LONG LNAME LBRACK INT GT FLOAT ENUM DOUBLE CONST COMPLEX COMMA COLON CHAR BOOL ATOMIC ALIGNAS ]
## attribute_type_qualifier -> type_qualifier . attribute_specifier_sequence [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF STRUCT STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT LPAREN LONG LNAME LBRACK INT GT FLOAT ENUM DOUBLE CONST COMPLEX COMMA COLON CHAR BOOL ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## type_qualifier
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 154, spurious reduction of production type_qualifier -> ATOMIC
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ALIGNAS LPAREN ATOMIC LBRACK_LBRACK ALIGNAS RBRACK RBRACK WHILE
##
## Ends in an error in state: 177.
##
## attribute_specifier_sequence -> attribute_specifier_sequence . attribute_specifier [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF STRUCT STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT LPAREN LONG LNAME LBRACK_LBRACK LBRACK INT GT FLOAT ENUM DOUBLE CONST COMPLEX COMMA COLON CHAR BOOL ATOMIC ALIGNAS ]
## attribute_type_qualifier -> type_qualifier attribute_specifier_sequence . [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF STRUCT STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT LPAREN LONG LNAME LBRACK INT GT FLOAT ENUM DOUBLE CONST COMPLEX COMMA COLON CHAR BOOL ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## type_qualifier attribute_specifier_sequence
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ALIGNAS LPAREN ALIGNOF LPAREN BOOL GT
##
## Ends in an error in state: 178.
##
## unary_expression -> ALIGNOF LPAREN type_name . RPAREN [ STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_EQ MINUS LT_LT_EQ LT_LT LT_EQ LT GT_GT_EQ GT_GT GT_EQ GT EQ_EQ EQ ELLIPSIS COMMA COLON CARET_EQ CARET BANG_EQ AMPERSAND_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## ALIGNOF LPAREN type_name
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 170, spurious reduction of production attribute_type_specifier_unique -> type_specifier_unique
## In state 457, spurious reduction of production list_pair(attribute_type_qualifier,attribute_alignment_specifier) ->
## In state 458, spurious reduction of production list_tuple3_eq1(attribute_type_specifier_unique,attribute_type_qualifier,attribute_alignment_specifier) -> attribute_type_specifier_unique list_pair(attribute_type_qualifier,attribute_alignment_specifier)
## In state 456, spurious reduction of production specifier_qualifier_list -> list_tuple3_eq1(attribute_type_specifier_unique,attribute_type_qualifier,attribute_alignment_specifier)
## In state 484, spurious reduction of production option(abstract_declarator) ->
## In state 488, spurious reduction of production type_name -> specifier_qualifier_list option(abstract_declarator)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: STRUCT WHILE
##
## Ends in an error in state: 181.
##
## struct_or_union_specifier -> struct_or_union . option(attribute_specifier_sequence) option(general_identifier) LBRACE boption(nonempty_list(SEMICOLON)) struct_declaration_list RBRACE [ VOLATILE UNAME TYPEDEF THREAD_LOCAL STATIC STAR SEMICOLON RPAREN RESTRICT REGISTER NORETURN LPAREN LNAME LBRACK_LBRACK LBRACK INLINE GT EXTERN CONST COMMA COLON AUTO ATOMIC ALIGNAS ]
## struct_or_union_specifier -> struct_or_union . option(attribute_specifier_sequence) general_identifier [ VOLATILE UNAME TYPEDEF THREAD_LOCAL STATIC STAR SEMICOLON RPAREN RESTRICT REGISTER NORETURN LPAREN LNAME LBRACK_LBRACK LBRACK INLINE GT EXTERN CONST COMMA COLON AUTO ATOMIC ALIGNAS ]
## struct_or_union_specifier -> struct_or_union . option(attribute_specifier_sequence) option(general_identifier) LBRACE RBRACE [ VOLATILE UNAME TYPEDEF THREAD_LOCAL STATIC STAR SEMICOLON RPAREN RESTRICT REGISTER NORETURN LPAREN LNAME LBRACK_LBRACK LBRACK INLINE GT EXTERN CONST COMMA COLON AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## struct_or_union
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: STRUCT LBRACE WHILE
##
## Ends in an error in state: 184.
##
## struct_or_union_specifier -> struct_or_union option(attribute_specifier_sequence) option(general_identifier) LBRACE . boption(nonempty_list(SEMICOLON)) struct_declaration_list RBRACE [ VOLATILE UNAME TYPEDEF THREAD_LOCAL STATIC STAR SEMICOLON RPAREN RESTRICT REGISTER NORETURN LPAREN LNAME LBRACK_LBRACK LBRACK INLINE GT EXTERN CONST COMMA COLON AUTO ATOMIC ALIGNAS ]
## struct_or_union_specifier -> struct_or_union option(attribute_specifier_sequence) option(general_identifier) LBRACE . RBRACE [ VOLATILE UNAME TYPEDEF THREAD_LOCAL STATIC STAR SEMICOLON RPAREN RESTRICT REGISTER NORETURN LPAREN LNAME LBRACK_LBRACK LBRACK INLINE GT EXTERN CONST COMMA COLON AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## struct_or_union option(attribute_specifier_sequence) option(general_identifier) LBRACE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: STRUCT LBRACE SEMICOLON WHILE
##
## Ends in an error in state: 185.
##
## nonempty_list(SEMICOLON) -> SEMICOLON . [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF STRUCT STATIC_ASSERT SIGNED SHORT RESTRICT RBRACE LONG LNAME LBRACK_LBRACK INT FLOAT ENUM DOUBLE CONST COMPLEX CHAR BOOL ATOMIC ALIGNAS ]
## nonempty_list(SEMICOLON) -> SEMICOLON . nonempty_list(SEMICOLON) [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF STRUCT STATIC_ASSERT SIGNED SHORT RESTRICT RBRACE LONG LNAME LBRACK_LBRACK INT FLOAT ENUM DOUBLE CONST COMPLEX CHAR BOOL ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## SEMICOLON
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: STRUCT LBRACE SEMICOLON RBRACE
##
## Ends in an error in state: 189.
##
## struct_or_union_specifier -> struct_or_union option(attribute_specifier_sequence) option(general_identifier) LBRACE boption(nonempty_list(SEMICOLON)) . struct_declaration_list RBRACE [ VOLATILE UNAME TYPEDEF THREAD_LOCAL STATIC STAR SEMICOLON RPAREN RESTRICT REGISTER NORETURN LPAREN LNAME LBRACK_LBRACK LBRACK INLINE GT EXTERN CONST COMMA COLON AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## struct_or_union option(attribute_specifier_sequence) option(general_identifier) LBRACE boption(nonempty_list(SEMICOLON))
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 185, spurious reduction of production nonempty_list(SEMICOLON) -> SEMICOLON
## In state 188, spurious reduction of production boption(nonempty_list(SEMICOLON)) -> nonempty_list(SEMICOLON)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ALIGNAS LPAREN CONSTANT WHILE
##
## Ends in an error in state: 199.
##
## postfix_expression -> postfix_expression . LBRACK expression RBRACK [ STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_GT MINUS_EQ MINUS LT_LT_EQ LT_LT LT_EQ LT LPAREN LBRACK GT_GT_EQ GT_GT GT_EQ GT EQ_EQ EQ ELLIPSIS DOT COMMA COLON CARET_EQ CARET BANG_EQ AMPERSAND_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## postfix_expression -> postfix_expression . LPAREN option(argument_expression_list) RPAREN [ STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_GT MINUS_EQ MINUS LT_LT_EQ LT_LT LT_EQ LT LPAREN LBRACK GT_GT_EQ GT_GT GT_EQ GT EQ_EQ EQ ELLIPSIS DOT COMMA COLON CARET_EQ CARET BANG_EQ AMPERSAND_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## postfix_expression -> postfix_expression . DOT general_identifier [ STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_GT MINUS_EQ MINUS LT_LT_EQ LT_LT LT_EQ LT LPAREN LBRACK GT_GT_EQ GT_GT GT_EQ GT EQ_EQ EQ ELLIPSIS DOT COMMA COLON CARET_EQ CARET BANG_EQ AMPERSAND_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## postfix_expression -> postfix_expression . MINUS_GT general_identifier [ STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_GT MINUS_EQ MINUS LT_LT_EQ LT_LT LT_EQ LT LPAREN LBRACK GT_GT_EQ GT_GT GT_EQ GT EQ_EQ EQ ELLIPSIS DOT COMMA COLON CARET_EQ CARET BANG_EQ AMPERSAND_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## postfix_expression -> postfix_expression . PLUS_PLUS [ STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_GT MINUS_EQ MINUS LT_LT_EQ LT_LT LT_EQ LT LPAREN LBRACK GT_GT_EQ GT_GT GT_EQ GT EQ_EQ EQ ELLIPSIS DOT COMMA COLON CARET_EQ CARET BANG_EQ AMPERSAND_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## postfix_expression -> postfix_expression . MINUS_MINUS [ STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_GT MINUS_EQ MINUS LT_LT_EQ LT_LT LT_EQ LT LPAREN LBRACK GT_GT_EQ GT_GT GT_EQ GT EQ_EQ EQ ELLIPSIS DOT COMMA COLON CARET_EQ CARET BANG_EQ AMPERSAND_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## unary_expression -> postfix_expression . [ STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_EQ MINUS LT_LT_EQ LT_LT LT_EQ LT GT_GT_EQ GT_GT GT_EQ GT EQ_EQ EQ ELLIPSIS COMMA COLON CARET_EQ CARET BANG_EQ AMPERSAND_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## postfix_expression
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: TYPEOF LPAREN STRING_LITERAL ELLIPSIS
##
## Ends in an error in state: 205.
##
## assignment_expression -> unary_expression . assignment_operator assignment_expression [ SEMICOLON RPAREN RBRACK RBRACE COMMA COLON ]
## cast_expression -> unary_expression . [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS LT_LT LT_EQ LT GT_GT GT_EQ GT EQ_EQ COMMA COLON CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## unary_expression
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 100, spurious reduction of production nonempty_list(string_literal_component) -> string_literal_component
## In state 104, spurious reduction of production string_literal -> nonempty_list(string_literal_component)
## In state 196, spurious reduction of production start_ignore ->
## In state 197, spurious reduction of production primary_expression -> string_literal start_ignore
## In state 198, spurious reduction of production postfix_expression -> primary_expression
## In state 199, spurious reduction of production unary_expression -> postfix_expression
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ALIGNAS LPAREN STRING_LITERAL STAR_EQ
##
## Ends in an error in state: 220.
##
## additive_expression -> multiplicative_expression . [ SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PLUS PIPE_PIPE PIPE MINUS LT_LT LT_EQ LT GT_GT GT_EQ GT EQ_EQ ELLIPSIS COMMA COLON CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## multiplicative_expression -> multiplicative_expression . STAR cast_expression [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS LT_LT LT_EQ LT GT_GT GT_EQ GT EQ_EQ ELLIPSIS COMMA COLON CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## multiplicative_expression -> multiplicative_expression . SLASH cast_expression [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS LT_LT LT_EQ LT GT_GT GT_EQ GT EQ_EQ ELLIPSIS COMMA COLON CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## multiplicative_expression -> multiplicative_expression . PERCENT cast_expression [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS LT_LT LT_EQ LT GT_GT GT_EQ GT EQ_EQ ELLIPSIS COMMA COLON CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## multiplicative_expression
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 100, spurious reduction of production nonempty_list(string_literal_component) -> string_literal_component
## In state 104, spurious reduction of production string_literal -> nonempty_list(string_literal_component)
## In state 196, spurious reduction of production start_ignore ->
## In state 197, spurious reduction of production primary_expression -> string_literal start_ignore
## In state 198, spurious reduction of production postfix_expression -> primary_expression
## In state 199, spurious reduction of production unary_expression -> postfix_expression
## In state 195, spurious reduction of production cast_expression -> unary_expression
## In state 228, spurious reduction of production multiplicative_expression -> cast_expression
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ALIGNAS LPAREN STRING_LITERAL PLUS STRING_LITERAL STAR_EQ
##
## Ends in an error in state: 231.
##
## additive_expression -> additive_expression PLUS multiplicative_expression . [ SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PLUS PIPE_PIPE PIPE MINUS LT_LT LT_EQ LT GT_GT GT_EQ GT EQ_EQ ELLIPSIS COMMA COLON CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## multiplicative_expression -> multiplicative_expression . STAR cast_expression [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS LT_LT LT_EQ LT GT_GT GT_EQ GT EQ_EQ ELLIPSIS COMMA COLON CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## multiplicative_expression -> multiplicative_expression . SLASH cast_expression [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS LT_LT LT_EQ LT GT_GT GT_EQ GT EQ_EQ ELLIPSIS COMMA COLON CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## multiplicative_expression -> multiplicative_expression . PERCENT cast_expression [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS LT_LT LT_EQ LT GT_GT GT_EQ GT EQ_EQ ELLIPSIS COMMA COLON CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## additive_expression PLUS multiplicative_expression
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 100, spurious reduction of production nonempty_list(string_literal_component) -> string_literal_component
## In state 104, spurious reduction of production string_literal -> nonempty_list(string_literal_component)
## In state 196, spurious reduction of production start_ignore ->
## In state 197, spurious reduction of production primary_expression -> string_literal start_ignore
## In state 198, spurious reduction of production postfix_expression -> primary_expression
## In state 199, spurious reduction of production unary_expression -> postfix_expression
## In state 195, spurious reduction of production cast_expression -> unary_expression
## In state 228, spurious reduction of production multiplicative_expression -> cast_expression
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ALIGNAS LPAREN STRING_LITERAL MINUS STRING_LITERAL STAR_EQ
##
## Ends in an error in state: 233.
##
## additive_expression -> additive_expression MINUS multiplicative_expression . [ SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PLUS PIPE_PIPE PIPE MINUS LT_LT LT_EQ LT GT_GT GT_EQ GT EQ_EQ ELLIPSIS COMMA COLON CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## multiplicative_expression -> multiplicative_expression . STAR cast_expression [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS LT_LT LT_EQ LT GT_GT GT_EQ GT EQ_EQ ELLIPSIS COMMA COLON CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## multiplicative_expression -> multiplicative_expression . SLASH cast_expression [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS LT_LT LT_EQ LT GT_GT GT_EQ GT EQ_EQ ELLIPSIS COMMA COLON CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## multiplicative_expression -> multiplicative_expression . PERCENT cast_expression [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS LT_LT LT_EQ LT GT_GT GT_EQ GT EQ_EQ ELLIPSIS COMMA COLON CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## additive_expression MINUS multiplicative_expression
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 100, spurious reduction of production nonempty_list(string_literal_component) -> string_literal_component
## In state 104, spurious reduction of production string_literal -> nonempty_list(string_literal_component)
## In state 196, spurious reduction of production start_ignore ->
## In state 197, spurious reduction of production primary_expression -> string_literal start_ignore
## In state 198, spurious reduction of production postfix_expression -> primary_expression
## In state 199, spurious reduction of production unary_expression -> postfix_expression
## In state 195, spurious reduction of production cast_expression -> unary_expression
## In state 228, spurious reduction of production multiplicative_expression -> cast_expression
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ALIGNAS LPAREN STRING_LITERAL QUESTION STRING_LITERAL RPAREN
##
## Ends in an error in state: 267.
##
## conditional_expression -> logical_OR_expression QUESTION expression . COLON conditional_expression [ SEMICOLON RPAREN RBRACK RBRACE ELLIPSIS COMMA COLON ]
## expression -> expression . COMMA assignment_expression [ COMMA COLON ]
##
## The known suffix of the stack is as follows:
## logical_OR_expression QUESTION expression
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 100, spurious reduction of production nonempty_list(string_literal_component) -> string_literal_component
## In state 104, spurious reduction of production string_literal -> nonempty_list(string_literal_component)
## In state 196, spurious reduction of production start_ignore ->
## In state 197, spurious reduction of production primary_expression -> string_literal start_ignore
## In state 198, spurious reduction of production postfix_expression -> primary_expression
## In state 199, spurious reduction of production unary_expression -> postfix_expression
## In state 205, spurious reduction of production cast_expression -> unary_expression
## In state 228, spurious reduction of production multiplicative_expression -> cast_expression
## In state 220, spurious reduction of production additive_expression -> multiplicative_expression
## In state 239, spurious reduction of production shift_expression -> additive_expression
## In state 218, spurious reduction of production relational_expression -> shift_expression
## In state 236, spurious reduction of production equality_expression -> relational_expression
## In state 254, spurious reduction of production _AND_expression -> equality_expression
## In state 262, spurious reduction of production exclusive_OR_expression -> _AND_expression
## In state 263, spurious reduction of production inclusive_OR_expression -> exclusive_OR_expression
## In state 264, spurious reduction of production logical_AND_expression -> inclusive_OR_expression
## In state 248, spurious reduction of production logical_OR_expression -> logical_AND_expression
## In state 246, spurious reduction of production conditional_expression -> logical_OR_expression
## In state 269, spurious reduction of production assignment_expression -> conditional_expression
## In state 273, spurious reduction of production expression -> assignment_expression
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ALIGNAS LPAREN STRING_LITERAL LPAREN STRING_LITERAL RBRACK
##
## Ends in an error in state: 280.
##
## argument_expression_list -> argument_expression_list . COMMA assignment_expression [ RPAREN COMMA ]
## option(argument_expression_list) -> argument_expression_list . [ RPAREN ]
##
## The known suffix of the stack is as follows:
## argument_expression_list
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 100, spurious reduction of production nonempty_list(string_literal_component) -> string_literal_component
## In state 104, spurious reduction of production string_literal -> nonempty_list(string_literal_component)
## In state 196, spurious reduction of production start_ignore ->
## In state 197, spurious reduction of production primary_expression -> string_literal start_ignore
## In state 198, spurious reduction of production postfix_expression -> primary_expression
## In state 199, spurious reduction of production unary_expression -> postfix_expression
## In state 205, spurious reduction of production cast_expression -> unary_expression
## In state 228, spurious reduction of production multiplicative_expression -> cast_expression
## In state 220, spurious reduction of production additive_expression -> multiplicative_expression
## In state 239, spurious reduction of production shift_expression -> additive_expression
## In state 218, spurious reduction of production relational_expression -> shift_expression
## In state 236, spurious reduction of production equality_expression -> relational_expression
## In state 254, spurious reduction of production _AND_expression -> equality_expression
## In state 262, spurious reduction of production exclusive_OR_expression -> _AND_expression
## In state 263, spurious reduction of production inclusive_OR_expression -> exclusive_OR_expression
## In state 264, spurious reduction of production logical_AND_expression -> inclusive_OR_expression
## In state 248, spurious reduction of production logical_OR_expression -> logical_AND_expression
## In state 246, spurious reduction of production conditional_expression -> logical_OR_expression
## In state 269, spurious reduction of production assignment_expression -> conditional_expression
## In state 279, spurious reduction of production argument_expression_list -> assignment_expression
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ALIGNAS LPAREN STRING_LITERAL LBRACK STRING_LITERAL RPAREN
##
## Ends in an error in state: 284.
##
## expression -> expression . COMMA assignment_expression [ RBRACK COMMA ]
## postfix_expression -> postfix_expression LBRACK expression . RBRACK [ STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_GT MINUS_EQ MINUS LT_LT_EQ LT_LT LT_EQ LT LPAREN LBRACK GT_GT_EQ GT_GT GT_EQ GT EQ_EQ EQ ELLIPSIS DOT COMMA COLON CARET_EQ CARET BANG_EQ AMPERSAND_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## postfix_expression LBRACK expression
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 100, spurious reduction of production nonempty_list(string_literal_component) -> string_literal_component
## In state 104, spurious reduction of production string_literal -> nonempty_list(string_literal_component)
## In state 196, spurious reduction of production start_ignore ->
## In state 197, spurious reduction of production primary_expression -> string_literal start_ignore
## In state 198, spurious reduction of production postfix_expression -> primary_expression
## In state 199, spurious reduction of production unary_expression -> postfix_expression
## In state 205, spurious reduction of production cast_expression -> unary_expression
## In state 228, spurious reduction of production multiplicative_expression -> cast_expression
## In state 220, spurious reduction of production additive_expression -> multiplicative_expression
## In state 239, spurious reduction of production shift_expression -> additive_expression
## In state 218, spurious reduction of production relational_expression -> shift_expression
## In state 236, spurious reduction of production equality_expression -> relational_expression
## In state 254, spurious reduction of production _AND_expression -> equality_expression
## In state 262, spurious reduction of production exclusive_OR_expression -> _AND_expression
## In state 263, spurious reduction of production inclusive_OR_expression -> exclusive_OR_expression
## In state 264, spurious reduction of production logical_AND_expression -> inclusive_OR_expression
## In state 248, spurious reduction of production logical_OR_expression -> logical_AND_expression
## In state 246, spurious reduction of production conditional_expression -> logical_OR_expression
## In state 269, spurious reduction of production assignment_expression -> conditional_expression
## In state 273, spurious reduction of production expression -> assignment_expression
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: STATIC_ASSERT LPAREN STRING_LITERAL RPAREN
##
## Ends in an error in state: 289.
##
## static_assert_declaration -> STATIC_ASSERT LPAREN constant_expression . COMMA string_literal RPAREN SEMICOLON [ WHILE VOLATILE VOID VA_START VA_END VA_COPY VA_ARG UNSIGNED UNION UNAME TYPEOF TYPEDEF TILDE THREAD_LOCAL SWITCH STRUCT STRING_LITERAL STATIC_ASSERT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRINT_TYPE PLUS_PLUS PLUS OFFSETOF NORETURN MINUS_MINUS MINUS LPAREN LONG LNAME LBRACK_LBRACK LBRACES LBRACE INT INLINE IF GOTO GENERIC FOR FLOAT EXTERN EOF ENUM DOUBLE DO DEFAULT CONTINUE CONSTANT CONST COMPLEX CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE CHAR CERB_MAGIC CASE BUILTIN_TYPES_COMPATIBLE_P BUILTIN_CHOOSE_EXPR BREAK BOOL BMC_ASSUME BANG AUTO ATOMIC ASSERT ASM AMPERSAND ALIGNOF ALIGNAS ]
##
## The known suffix of the stack is as follows:
## STATIC_ASSERT LPAREN constant_expression
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 100, spurious reduction of production nonempty_list(string_literal_component) -> string_literal_component
## In state 104, spurious reduction of production string_literal -> nonempty_list(string_literal_component)
## In state 196, spurious reduction of production start_ignore ->
## In state 197, spurious reduction of production primary_expression -> string_literal start_ignore
## In state 198, spurious reduction of production postfix_expression -> primary_expression
## In state 199, spurious reduction of production unary_expression -> postfix_expression
## In state 195, spurious reduction of production cast_expression -> unary_expression
## In state 228, spurious reduction of production multiplicative_expression -> cast_expression
## In state 220, spurious reduction of production additive_expression -> multiplicative_expression
## In state 239, spurious reduction of production shift_expression -> additive_expression
## In state 218, spurious reduction of production relational_expression -> shift_expression
## In state 236, spurious reduction of production equality_expression -> relational_expression
## In state 254, spurious reduction of production _AND_expression -> equality_expression
## In state 262, spurious reduction of production exclusive_OR_expression -> _AND_expression
## In state 263, spurious reduction of production inclusive_OR_expression -> exclusive_OR_expression
## In state 264, spurious reduction of production logical_AND_expression -> inclusive_OR_expression
## In state 248, spurious reduction of production logical_OR_expression -> logical_AND_expression
## In state 246, spurious reduction of production conditional_expression -> logical_OR_expression
## In state 294, spurious reduction of production constant_expression -> conditional_expression
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: STATIC_ASSERT LPAREN STRING_LITERAL COMMA STRING_LITERAL STAR_EQ
##
## Ends in an error in state: 291.
##
## static_assert_declaration -> STATIC_ASSERT LPAREN constant_expression COMMA string_literal . RPAREN SEMICOLON [ WHILE VOLATILE VOID VA_START VA_END VA_COPY VA_ARG UNSIGNED UNION UNAME TYPEOF TYPEDEF TILDE THREAD_LOCAL SWITCH STRUCT STRING_LITERAL STATIC_ASSERT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRINT_TYPE PLUS_PLUS PLUS OFFSETOF NORETURN MINUS_MINUS MINUS LPAREN LONG LNAME LBRACK_LBRACK LBRACES LBRACE INT INLINE IF GOTO GENERIC FOR FLOAT EXTERN EOF ENUM DOUBLE DO DEFAULT CONTINUE CONSTANT CONST COMPLEX CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE CHAR CERB_MAGIC CASE BUILTIN_TYPES_COMPATIBLE_P BUILTIN_CHOOSE_EXPR BREAK BOOL BMC_ASSUME BANG AUTO ATOMIC ASSERT ASM AMPERSAND ALIGNOF ALIGNAS ]
##
## The known suffix of the stack is as follows:
## STATIC_ASSERT LPAREN constant_expression COMMA string_literal
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 100, spurious reduction of production nonempty_list(string_literal_component) -> string_literal_component
## In state 104, spurious reduction of production string_literal -> nonempty_list(string_literal_component)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: STRUCT LBRACE STATIC_ASSERT LPAREN STRING_LITERAL COMMA STRING_LITERAL RPAREN SEMICOLON WHILE
##
## Ends in an error in state: 295.
##
## struct_declaration_list -> struct_declaration_list . struct_declaration [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF STRUCT STATIC_ASSERT SIGNED SHORT RESTRICT RBRACE LONG LNAME LBRACK_LBRACK INT FLOAT ENUM DOUBLE CONST COMPLEX CHAR BOOL ATOMIC ALIGNAS ]
## struct_or_union_specifier -> struct_or_union option(attribute_specifier_sequence) option(general_identifier) LBRACE boption(nonempty_list(SEMICOLON)) struct_declaration_list . RBRACE [ VOLATILE UNAME TYPEDEF THREAD_LOCAL STATIC STAR SEMICOLON RPAREN RESTRICT REGISTER NORETURN LPAREN LNAME LBRACK_LBRACK LBRACK INLINE GT EXTERN CONST COMMA COLON AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## struct_or_union option(attribute_specifier_sequence) option(general_identifier) LBRACE boption(nonempty_list(SEMICOLON)) struct_declaration_list
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: STRUCT LBRACE BOOL GT
##
## Ends in an error in state: 299.
##
## struct_declaration -> specifier_qualifier_list . option(struct_declarator_list) SEMICOLON boption(nonempty_list(SEMICOLON)) [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF STRUCT STATIC_ASSERT SIGNED SHORT RESTRICT RBRACE LONG LNAME LBRACK_LBRACK INT FLOAT ENUM DOUBLE CONST COMPLEX CHAR BOOL ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## specifier_qualifier_list
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 170, spurious reduction of production attribute_type_specifier_unique -> type_specifier_unique
## In state 457, spurious reduction of production list_pair(attribute_type_qualifier,attribute_alignment_specifier) ->
## In state 458, spurious reduction of production list_tuple3_eq1(attribute_type_specifier_unique,attribute_type_qualifier,attribute_alignment_specifier) -> attribute_type_specifier_unique list_pair(attribute_type_qualifier,attribute_alignment_specifier)
## In state 456, spurious reduction of production specifier_qualifier_list -> list_tuple3_eq1(attribute_type_specifier_unique,attribute_type_qualifier,attribute_alignment_specifier)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: BOOL STAR WHILE
##
## Ends in an error in state: 300.
##
## pointer -> STAR . option(type_qualifier_list) option(pointer) [ UNAME RPAREN LPAREN LNAME LBRACK GT COMMA COLON ]
## pointer -> STAR . attribute_specifier_sequence option(type_qualifier_list) option(pointer) [ UNAME RPAREN LPAREN LNAME LBRACK GT COMMA COLON ]
##
## The known suffix of the stack is as follows:
## STAR
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: BOOL STAR ATOMIC WHILE
##
## Ends in an error in state: 302.
##
## option(type_qualifier_list) -> type_qualifier_list . [ VA_START VA_END VA_COPY VA_ARG UNAME TILDE STRING_LITERAL STAR SIZEOF RPAREN PRINT_TYPE PLUS_PLUS PLUS OFFSETOF MINUS_MINUS MINUS LPAREN LNAME LBRACK GT GENERIC CONSTANT COMMA COLON BUILTIN_TYPES_COMPATIBLE_P BUILTIN_CHOOSE_EXPR BMC_ASSUME BANG ASSERT AMPERSAND ALIGNOF ]
## type_qualifier_list -> type_qualifier_list . type_qualifier [ VOLATILE VA_START VA_END VA_COPY VA_ARG UNAME TILDE STRING_LITERAL STAR SIZEOF RPAREN RESTRICT PRINT_TYPE PLUS_PLUS PLUS OFFSETOF MINUS_MINUS MINUS LPAREN LNAME LBRACK GT GENERIC CONSTANT CONST COMMA COLON BUILTIN_TYPES_COMPATIBLE_P BUILTIN_CHOOSE_EXPR BMC_ASSUME BANG ATOMIC ASSERT AMPERSAND ALIGNOF ]
##
## The known suffix of the stack is as follows:
## type_qualifier_list
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: BOOL STAR ATOMIC VA_START
##
## Ends in an error in state: 305.
##
## pointer -> STAR option(type_qualifier_list) . option(pointer) [ UNAME RPAREN LPAREN LNAME LBRACK GT COMMA COLON ]
##
## The known suffix of the stack is as follows:
## STAR option(type_qualifier_list)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 302, spurious reduction of production option(type_qualifier_list) -> type_qualifier_list
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: BOOL STAR LBRACK_LBRACK ALIGNAS RBRACK RBRACK WHILE
##
## Ends in an error in state: 308.
##
## attribute_specifier_sequence -> attribute_specifier_sequence . attribute_specifier [ VOLATILE UNAME STAR RPAREN RESTRICT LPAREN LNAME LBRACK_LBRACK LBRACK GT CONST COMMA COLON ATOMIC ]
## pointer -> STAR attribute_specifier_sequence . option(type_qualifier_list) option(pointer) [ UNAME RPAREN LPAREN LNAME LBRACK GT COMMA COLON ]
##
## The known suffix of the stack is as follows:
## STAR attribute_specifier_sequence
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: BOOL STAR LBRACK_LBRACK ALIGNAS RBRACK RBRACK ATOMIC VA_START
##
## Ends in an error in state: 309.
##
## pointer -> STAR attribute_specifier_sequence option(type_qualifier_list) . option(pointer) [ UNAME RPAREN LPAREN LNAME LBRACK GT COMMA COLON ]
##
## The known suffix of the stack is as follows:
## STAR attribute_specifier_sequence option(type_qualifier_list)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 302, spurious reduction of production option(type_qualifier_list) -> type_qualifier_list
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: BOOL STAR RPAREN
##
## Ends in an error in state: 313.
##
## declarator -> pointer . direct_declarator [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NORETURN LONG LNAME LBRACES LBRACE INT INLINE FLOAT EXTERN EQ ENUM DOUBLE CONST COMPLEX COMMA COLON CHAR CERB_MAGIC BOOL AUTO ATOMIC ASM ALIGNAS ]
##
## The known suffix of the stack is as follows:
## pointer
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 300, spurious reduction of production option(type_qualifier_list) ->
## In state 305, spurious reduction of production option(pointer) ->
## In state 307, spurious reduction of production pointer -> STAR option(type_qualifier_list) option(pointer)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: BOOL LNAME TYPE WHILE
##
## Ends in an error in state: 314.
##
## direct_declarator -> general_identifier . [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NORETURN LPAREN LONG LNAME LBRACK LBRACES LBRACE INT INLINE FLOAT EXTERN EQ ENUM DOUBLE CONST COMPLEX COMMA COLON CHAR CERB_MAGIC BOOL AUTO ATOMIC ASM ALIGNAS ]
## direct_declarator -> general_identifier . attribute_specifier_sequence [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NORETURN LPAREN LONG LNAME LBRACK LBRACES LBRACE INT INLINE FLOAT EXTERN EQ ENUM DOUBLE CONST COMPLEX COMMA COLON CHAR CERB_MAGIC BOOL AUTO ATOMIC ASM ALIGNAS ]
##
## The known suffix of the stack is as follows:
## general_identifier
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: BOOL LNAME TYPE LBRACK_LBRACK ALIGNAS RBRACK RBRACK WHILE
##
## Ends in an error in state: 315.
##
## attribute_specifier_sequence -> attribute_specifier_sequence . attribute_specifier [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NORETURN LPAREN LONG LNAME LBRACK_LBRACK LBRACK LBRACES LBRACE INT INLINE FLOAT EXTERN EQ ENUM DOUBLE CONST COMPLEX COMMA COLON CHAR CERB_MAGIC BOOL AUTO ATOMIC ASM ALIGNAS ]
## direct_declarator -> general_identifier attribute_specifier_sequence . [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NORETURN LPAREN LONG LNAME LBRACK LBRACES LBRACE INT INLINE FLOAT EXTERN EQ ENUM DOUBLE CONST COMPLEX COMMA COLON CHAR CERB_MAGIC BOOL AUTO ATOMIC ASM ALIGNAS ]
##
## The known suffix of the stack is as follows:
## general_identifier attribute_specifier_sequence
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: BOOL LNAME TYPE LPAREN BOOL RPAREN WHILE
##
## Ends in an error in state: 316.
##
## direct_declarator -> function_declarator . [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NORETURN LPAREN LONG LNAME LBRACK LBRACES LBRACE INT INLINE FLOAT EXTERN EQ ENUM DOUBLE CONST COMPLEX COMMA COLON CHAR CERB_MAGIC BOOL AUTO ATOMIC ASM ALIGNAS ]
## direct_declarator -> function_declarator . attribute_specifier_sequence [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NORETURN LPAREN LONG LNAME LBRACK LBRACES LBRACE INT INLINE FLOAT EXTERN EQ ENUM DOUBLE CONST COMPLEX COMMA COLON CHAR CERB_MAGIC BOOL AUTO ATOMIC ASM ALIGNAS ]
##
## The known suffix of the stack is as follows:
## function_declarator
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: BOOL LNAME TYPE LPAREN BOOL RPAREN LBRACK_LBRACK ALIGNAS RBRACK RBRACK WHILE
##
## Ends in an error in state: 317.
##
## attribute_specifier_sequence -> attribute_specifier_sequence . attribute_specifier [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NORETURN LPAREN LONG LNAME LBRACK_LBRACK LBRACK LBRACES LBRACE INT INLINE FLOAT EXTERN EQ ENUM DOUBLE CONST COMPLEX COMMA COLON CHAR CERB_MAGIC BOOL AUTO ATOMIC ASM ALIGNAS ]
## direct_declarator -> function_declarator attribute_specifier_sequence . [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NORETURN LPAREN LONG LNAME LBRACK LBRACES LBRACE INT INLINE FLOAT EXTERN EQ ENUM DOUBLE CONST COMPLEX COMMA COLON CHAR CERB_MAGIC BOOL AUTO ATOMIC ASM ALIGNAS ]
##
## The known suffix of the stack is as follows:
## function_declarator attribute_specifier_sequence
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: BOOL STAR LPAREN LNAME TYPE RPAREN WHILE
##
## Ends in an error in state: 318.
##
## array_declarator -> direct_declarator . LBRACK option(type_qualifier_list) option(assignment_expression) RBRACK [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NORETURN LPAREN LONG LNAME LBRACK_LBRACK LBRACK LBRACES LBRACE INT INLINE FLOAT EXTERN EQ ENUM DOUBLE CONST COMPLEX COMMA COLON CHAR CERB_MAGIC BOOL AUTO ATOMIC ASM ALIGNAS ]
## array_declarator -> direct_declarator . LBRACK STATIC option(type_qualifier_list) assignment_expression RBRACK [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NORETURN LPAREN LONG LNAME LBRACK_LBRACK LBRACK LBRACES LBRACE INT INLINE FLOAT EXTERN EQ ENUM DOUBLE CONST COMPLEX COMMA COLON CHAR CERB_MAGIC BOOL AUTO ATOMIC ASM ALIGNAS ]
## array_declarator -> direct_declarator . LBRACK type_qualifier_list STATIC assignment_expression RBRACK [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NORETURN LPAREN LONG LNAME LBRACK_LBRACK LBRACK LBRACES LBRACE INT INLINE FLOAT EXTERN EQ ENUM DOUBLE CONST COMPLEX COMMA COLON CHAR CERB_MAGIC BOOL AUTO ATOMIC ASM ALIGNAS ]
## array_declarator -> direct_declarator . LBRACK option(type_qualifier_list) STAR RBRACK [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NORETURN LPAREN LONG LNAME LBRACK_LBRACK LBRACK LBRACES LBRACE INT INLINE FLOAT EXTERN EQ ENUM DOUBLE CONST COMPLEX COMMA COLON CHAR CERB_MAGIC BOOL AUTO ATOMIC ASM ALIGNAS ]
## declarator -> pointer direct_declarator . [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NORETURN LONG LNAME LBRACES LBRACE INT INLINE FLOAT EXTERN EQ ENUM DOUBLE CONST COMPLEX COMMA COLON CHAR CERB_MAGIC BOOL AUTO ATOMIC ASM ALIGNAS ]
## direct_declarator -> direct_declarator . LPAREN save_context RPAREN [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NORETURN LPAREN LONG LNAME LBRACK LBRACES LBRACE INT INLINE FLOAT EXTERN EQ ENUM DOUBLE CONST COMPLEX COMMA COLON CHAR CERB_MAGIC BOOL AUTO ATOMIC ASM ALIGNAS ]
## direct_declarator -> direct_declarator . LPAREN save_context identifier_list RPAREN [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NORETURN LPAREN LONG LNAME LBRACK LBRACES LBRACE INT INLINE FLOAT EXTERN EQ ENUM DOUBLE CONST COMPLEX COMMA COLON CHAR CERB_MAGIC BOOL AUTO ATOMIC ASM ALIGNAS ]
## function_declarator -> direct_declarator . LPAREN scoped(parameter_type_list) RPAREN [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NORETURN LPAREN LONG LNAME LBRACK_LBRACK LBRACK LBRACES LBRACE INT INLINE FLOAT EXTERN EQ ENUM DOUBLE CONST COMPLEX COMMA COLON CHAR CERB_MAGIC BOOL AUTO ATOMIC ASM ALIGNAS ]
##
## The known suffix of the stack is as follows:
## pointer direct_declarator
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: BOOL LNAME TYPE LPAREN WHILE
##
## Ends in an error in state: 322.
##
## direct_declarator -> direct_declarator LPAREN save_context . RPAREN [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NORETURN LPAREN LONG LNAME LBRACK LBRACES LBRACE INT INLINE FLOAT EXTERN EQ ENUM DOUBLE CONST COMPLEX COMMA COLON CHAR CERB_MAGIC BOOL AUTO ATOMIC ASM ALIGNAS ]
## direct_declarator -> direct_declarator LPAREN save_context . identifier_list RPAREN [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NORETURN LPAREN LONG LNAME LBRACK LBRACES LBRACE INT INLINE FLOAT EXTERN EQ ENUM DOUBLE CONST COMPLEX COMMA COLON CHAR CERB_MAGIC BOOL AUTO ATOMIC ASM ALIGNAS ]
## scoped(parameter_type_list) -> save_context . parameter_type_list [ RPAREN ]
##
## The known suffix of the stack is as follows:
## direct_declarator LPAREN save_context
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: CONST WHILE
##
## Ends in an error in state: 332.
##
## declaration_specifier -> type_qualifier . [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NORETURN LPAREN LONG LNAME LBRACK INT INLINE FLOAT EXTERN ENUM DOUBLE CONST COMPLEX COMMA CHAR BOOL AUTO ATOMIC ALIGNAS ]
## declaration_specifier -> type_qualifier . attribute_specifier_sequence [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NORETURN LPAREN LONG LNAME LBRACK INT INLINE FLOAT EXTERN ENUM DOUBLE CONST COMPLEX COMMA CHAR BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## type_qualifier
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ATOMIC LBRACK_LBRACK ALIGNAS RBRACK RBRACK WHILE
##
## Ends in an error in state: 333.
##
## attribute_specifier_sequence -> attribute_specifier_sequence . attribute_specifier [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NORETURN LPAREN LONG LNAME LBRACK_LBRACK LBRACK INT INLINE FLOAT EXTERN ENUM DOUBLE CONST COMPLEX COMMA CHAR BOOL AUTO ATOMIC ALIGNAS ]
## declaration_specifier -> type_qualifier attribute_specifier_sequence . [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NORETURN LPAREN LONG LNAME LBRACK INT INLINE FLOAT EXTERN ENUM DOUBLE CONST COMPLEX COMMA CHAR BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## type_qualifier attribute_specifier_sequence
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: AUTO WHILE
##
## Ends in an error in state: 334.
##
## declaration_specifier -> storage_class_specifier . [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NORETURN LPAREN LONG LNAME LBRACK INT INLINE FLOAT EXTERN ENUM DOUBLE CONST COMPLEX COMMA CHAR BOOL AUTO ATOMIC ALIGNAS ]
## declaration_specifier -> storage_class_specifier . attribute_specifier_sequence [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NORETURN LPAREN LONG LNAME LBRACK INT INLINE FLOAT EXTERN ENUM DOUBLE CONST COMPLEX COMMA CHAR BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## storage_class_specifier
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: AUTO LBRACK_LBRACK ALIGNAS RBRACK RBRACK WHILE
##
## Ends in an error in state: 335.
##
## attribute_specifier_sequence -> attribute_specifier_sequence . attribute_specifier [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NORETURN LPAREN LONG LNAME LBRACK_LBRACK LBRACK INT INLINE FLOAT EXTERN ENUM DOUBLE CONST COMPLEX COMMA CHAR BOOL AUTO ATOMIC ALIGNAS ]
## declaration_specifier -> storage_class_specifier attribute_specifier_sequence . [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NORETURN LPAREN LONG LNAME LBRACK INT INLINE FLOAT EXTERN ENUM DOUBLE CONST COMPLEX COMMA CHAR BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## storage_class_specifier attribute_specifier_sequence
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: BOOL LNAME TYPE LPAREN BOOL LNAME TYPE VOLATILE
##
## Ends in an error in state: 337.
##
## parameter_list -> parameter_list . COMMA parameter_declaration [ RPAREN COMMA ]
## parameter_type_list -> parameter_list . save_context [ RPAREN ]
## parameter_type_list -> parameter_list . COMMA ELLIPSIS save_context [ RPAREN ]
##
## The known suffix of the stack is as follows:
## parameter_list
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 314, spurious reduction of production direct_declarator -> general_identifier
## In state 391, spurious reduction of production declarator -> direct_declarator
## In state 423, spurious reduction of production declarator_varname -> declarator
## In state 437, spurious reduction of production parameter_declaration -> declaration_specifiers declarator_varname
## In state 374, spurious reduction of production parameter_list -> parameter_declaration
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: BOOL LNAME TYPE LPAREN BOOL COMMA WHILE
##
## Ends in an error in state: 338.
##
## parameter_list -> parameter_list COMMA . parameter_declaration [ RPAREN COMMA ]
## parameter_type_list -> parameter_list COMMA . ELLIPSIS save_context [ RPAREN ]
##
## The known suffix of the stack is as follows:
## parameter_list COMMA
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: INLINE WHILE
##
## Ends in an error in state: 344.
##
## declaration_specifier -> function_specifier . [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NORETURN LPAREN LONG LNAME LBRACK INT INLINE FLOAT EXTERN ENUM DOUBLE CONST COMPLEX COMMA CHAR BOOL AUTO ATOMIC ALIGNAS ]
## declaration_specifier -> function_specifier . attribute_specifier_sequence [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NORETURN LPAREN LONG LNAME LBRACK INT INLINE FLOAT EXTERN ENUM DOUBLE CONST COMPLEX COMMA CHAR BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## function_specifier
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: INLINE LBRACK_LBRACK ALIGNAS RBRACK RBRACK WHILE
##
## Ends in an error in state: 345.
##
## attribute_specifier_sequence -> attribute_specifier_sequence . attribute_specifier [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NORETURN LPAREN LONG LNAME LBRACK_LBRACK LBRACK INT INLINE FLOAT EXTERN ENUM DOUBLE CONST COMPLEX COMMA CHAR BOOL AUTO ATOMIC ALIGNAS ]
## declaration_specifier -> function_specifier attribute_specifier_sequence . [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NORETURN LPAREN LONG LNAME LBRACK INT INLINE FLOAT EXTERN ENUM DOUBLE CONST COMPLEX COMMA CHAR BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## function_specifier attribute_specifier_sequence
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: BOOL LNAME TYPE LPAREN BOOL SEMICOLON
##
## Ends in an error in state: 347.
##
## parameter_declaration -> declaration_specifiers . declarator_varname [ RPAREN COMMA ]
## parameter_declaration -> declaration_specifiers . [ RPAREN COMMA ]
## parameter_declaration -> declaration_specifiers . abstract_declarator [ RPAREN COMMA ]
##
## The known suffix of the stack is as follows:
## declaration_specifiers
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 170, spurious reduction of production attribute_type_specifier_unique -> type_specifier_unique
## In state 378, spurious reduction of production list(declaration_specifier) ->
## In state 379, spurious reduction of production list_eq1(attribute_type_specifier_unique,declaration_specifier) -> attribute_type_specifier_unique list(declaration_specifier)
## In state 343, spurious reduction of production declaration_specifiers -> list_eq1(attribute_type_specifier_unique,declaration_specifier)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: BOOL LNAME TYPE LPAREN BOOL LPAREN WHILE
##
## Ends in an error in state: 348.
##
## direct_abstract_declarator -> LPAREN . save_context abstract_declarator RPAREN [ RPAREN LPAREN LBRACK COMMA ]
## direct_declarator -> LPAREN . save_context declarator RPAREN [ RPAREN LPAREN LBRACK COMMA ]
## function_abstract_declarator -> LPAREN . option(scoped(parameter_type_list)) RPAREN [ RPAREN LPAREN LBRACK_LBRACK LBRACK COMMA ]
##
## The known suffix of the stack is as follows:
## LPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ALIGNAS LPAREN BOOL LBRACK WHILE
##
## Ends in an error in state: 351.
##
## array_abstract_declarator -> LBRACK . option(assignment_expression) RBRACK [ RPAREN LPAREN LBRACK_LBRACK LBRACK GT COMMA COLON ]
## array_abstract_declarator -> LBRACK . type_qualifier_list option(assignment_expression) RBRACK [ RPAREN LPAREN LBRACK_LBRACK LBRACK GT COMMA COLON ]
## array_abstract_declarator -> LBRACK . STATIC option(type_qualifier_list) assignment_expression RBRACK [ RPAREN LPAREN LBRACK_LBRACK LBRACK GT COMMA COLON ]
## array_abstract_declarator -> LBRACK . type_qualifier_list STATIC assignment_expression RBRACK [ RPAREN LPAREN LBRACK_LBRACK LBRACK GT COMMA COLON ]
## array_abstract_declarator -> LBRACK . STAR RBRACK [ RPAREN LPAREN LBRACK_LBRACK LBRACK GT COMMA COLON ]
##
## The known suffix of the stack is as follows:
## LBRACK
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ALIGNAS LPAREN BOOL LBRACK STATIC ATOMIC RPAREN
##
## Ends in an error in state: 353.
##
## array_abstract_declarator -> LBRACK STATIC option(type_qualifier_list) . assignment_expression RBRACK [ RPAREN LPAREN LBRACK_LBRACK LBRACK GT COMMA COLON ]
##
## The known suffix of the stack is as follows:
## LBRACK STATIC option(type_qualifier_list)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 302, spurious reduction of production option(type_qualifier_list) -> type_qualifier_list
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ALIGNAS LPAREN BOOL LBRACK STATIC STRING_LITERAL RPAREN
##
## Ends in an error in state: 354.
##
## array_abstract_declarator -> LBRACK STATIC option(type_qualifier_list) assignment_expression . RBRACK [ RPAREN LPAREN LBRACK_LBRACK LBRACK GT COMMA COLON ]
##
## The known suffix of the stack is as follows:
## LBRACK STATIC option(type_qualifier_list) assignment_expression
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 100, spurious reduction of production nonempty_list(string_literal_component) -> string_literal_component
## In state 104, spurious reduction of production string_literal -> nonempty_list(string_literal_component)
## In state 196, spurious reduction of production start_ignore ->
## In state 197, spurious reduction of production primary_expression -> string_literal start_ignore
## In state 198, spurious reduction of production postfix_expression -> primary_expression
## In state 199, spurious reduction of production unary_expression -> postfix_expression
## In state 205, spurious reduction of production cast_expression -> unary_expression
## In state 228, spurious reduction of production multiplicative_expression -> cast_expression
## In state 220, spurious reduction of production additive_expression -> multiplicative_expression
## In state 239, spurious reduction of production shift_expression -> additive_expression
## In state 218, spurious reduction of production relational_expression -> shift_expression
## In state 236, spurious reduction of production equality_expression -> relational_expression
## In state 254, spurious reduction of production _AND_expression -> equality_expression
## In state 262, spurious reduction of production exclusive_OR_expression -> _AND_expression
## In state 263, spurious reduction of production inclusive_OR_expression -> exclusive_OR_expression
## In state 264, spurious reduction of production logical_AND_expression -> inclusive_OR_expression
## In state 248, spurious reduction of production logical_OR_expression -> logical_AND_expression
## In state 246, spurious reduction of production conditional_expression -> logical_OR_expression
## In state 269, spurious reduction of production assignment_expression -> conditional_expression
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ALIGNAS LPAREN BOOL LBRACK STAR WHILE
##
## Ends in an error in state: 356.
##
## array_abstract_declarator -> LBRACK STAR . RBRACK [ RPAREN LPAREN LBRACK_LBRACK LBRACK GT COMMA COLON ]
## unary_operator -> STAR . [ VA_START VA_END VA_COPY VA_ARG UNAME TILDE STRING_LITERAL STAR SIZEOF PRINT_TYPE PLUS_PLUS PLUS OFFSETOF MINUS_MINUS MINUS LPAREN LNAME GENERIC CONSTANT BUILTIN_TYPES_COMPATIBLE_P BUILTIN_CHOOSE_EXPR BMC_ASSUME BANG ASSERT AMPERSAND ALIGNOF ]
##
## The known suffix of the stack is as follows:
## LBRACK STAR
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ALIGNAS LPAREN BOOL LBRACK ATOMIC WHILE
##
## Ends in an error in state: 358.
##
## array_abstract_declarator -> LBRACK type_qualifier_list . option(assignment_expression) RBRACK [ RPAREN LPAREN LBRACK_LBRACK LBRACK GT COMMA COLON ]
## array_abstract_declarator -> LBRACK type_qualifier_list . STATIC assignment_expression RBRACK [ RPAREN LPAREN LBRACK_LBRACK LBRACK GT COMMA COLON ]
## type_qualifier_list -> type_qualifier_list . type_qualifier [ VOLATILE VA_START VA_END VA_COPY VA_ARG UNAME TILDE STRING_LITERAL STATIC STAR SIZEOF RESTRICT RBRACK PRINT_TYPE PLUS_PLUS PLUS OFFSETOF MINUS_MINUS MINUS LPAREN LNAME GENERIC CONSTANT CONST BUILTIN_TYPES_COMPATIBLE_P BUILTIN_CHOOSE_EXPR BMC_ASSUME BANG ATOMIC ASSERT AMPERSAND ALIGNOF ]
##
## The known suffix of the stack is as follows:
## LBRACK type_qualifier_list
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ALIGNAS LPAREN BOOL LBRACK ATOMIC STATIC STRING_LITERAL RPAREN
##
## Ends in an error in state: 360.
##
## array_abstract_declarator -> LBRACK type_qualifier_list STATIC assignment_expression . RBRACK [ RPAREN LPAREN LBRACK_LBRACK LBRACK GT COMMA COLON ]
##
## The known suffix of the stack is as follows:
## LBRACK type_qualifier_list STATIC assignment_expression
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 100, spurious reduction of production nonempty_list(string_literal_component) -> string_literal_component
## In state 104, spurious reduction of production string_literal -> nonempty_list(string_literal_component)
## In state 196, spurious reduction of production start_ignore ->
## In state 197, spurious reduction of production primary_expression -> string_literal start_ignore
## In state 198, spurious reduction of production postfix_expression -> primary_expression
## In state 199, spurious reduction of production unary_expression -> postfix_expression
## In state 205, spurious reduction of production cast_expression -> unary_expression
## In state 228, spurious reduction of production multiplicative_expression -> cast_expression
## In state 220, spurious reduction of production additive_expression -> multiplicative_expression
## In state 239, spurious reduction of production shift_expression -> additive_expression
## In state 218, spurious reduction of production relational_expression -> shift_expression
## In state 236, spurious reduction of production equality_expression -> relational_expression
## In state 254, spurious reduction of production _AND_expression -> equality_expression
## In state 262, spurious reduction of production exclusive_OR_expression -> _AND_expression
## In state 263, spurious reduction of production inclusive_OR_expression -> exclusive_OR_expression
## In state 264, spurious reduction of production logical_AND_expression -> inclusive_OR_expression
## In state 248, spurious reduction of production logical_OR_expression -> logical_AND_expression
## In state 246, spurious reduction of production conditional_expression -> logical_OR_expression
## In state 269, spurious reduction of production assignment_expression -> conditional_expression
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ALIGNAS LPAREN BOOL LBRACK ATOMIC STRING_LITERAL RPAREN
##
## Ends in an error in state: 362.
##
## array_abstract_declarator -> LBRACK type_qualifier_list option(assignment_expression) . RBRACK [ RPAREN LPAREN LBRACK_LBRACK LBRACK GT COMMA COLON ]
##
## The known suffix of the stack is as follows:
## LBRACK type_qualifier_list option(assignment_expression)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 100, spurious reduction of production nonempty_list(string_literal_component) -> string_literal_component
## In state 104, spurious reduction of production string_literal -> nonempty_list(string_literal_component)
## In state 196, spurious reduction of production start_ignore ->
## In state 197, spurious reduction of production primary_expression -> string_literal start_ignore
## In state 198, spurious reduction of production postfix_expression -> primary_expression
## In state 199, spurious reduction of production unary_expression -> postfix_expression
## In state 205, spurious reduction of production cast_expression -> unary_expression
## In state 228, spurious reduction of production multiplicative_expression -> cast_expression
## In state 220, spurious reduction of production additive_expression -> multiplicative_expression
## In state 239, spurious reduction of production shift_expression -> additive_expression
## In state 218, spurious reduction of production relational_expression -> shift_expression
## In state 236, spurious reduction of production equality_expression -> relational_expression
## In state 254, spurious reduction of production _AND_expression -> equality_expression
## In state 262, spurious reduction of production exclusive_OR_expression -> _AND_expression
## In state 263, spurious reduction of production inclusive_OR_expression -> exclusive_OR_expression
## In state 264, spurious reduction of production logical_AND_expression -> inclusive_OR_expression
## In state 248, spurious reduction of production logical_OR_expression -> logical_AND_expression
## In state 246, spurious reduction of production conditional_expression -> logical_OR_expression
## In state 269, spurious reduction of production assignment_expression -> conditional_expression
## In state 364, spurious reduction of production option(assignment_expression) -> assignment_expression
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ALIGNAS LPAREN BOOL LBRACK STRING_LITERAL RPAREN
##
## Ends in an error in state: 365.
##
## array_abstract_declarator -> LBRACK option(assignment_expression) . RBRACK [ RPAREN LPAREN LBRACK_LBRACK LBRACK GT COMMA COLON ]
##
## The known suffix of the stack is as follows:
## LBRACK option(assignment_expression)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 100, spurious reduction of production nonempty_list(string_literal_component) -> string_literal_component
## In state 104, spurious reduction of production string_literal -> nonempty_list(string_literal_component)
## In state 196, spurious reduction of production start_ignore ->
## In state 197, spurious reduction of production primary_expression -> string_literal start_ignore
## In state 198, spurious reduction of production postfix_expression -> primary_expression
## In state 199, spurious reduction of production unary_expression -> postfix_expression
## In state 205, spurious reduction of production cast_expression -> unary_expression
## In state 228, spurious reduction of production multiplicative_expression -> cast_expression
## In state 220, spurious reduction of production additive_expression -> multiplicative_expression
## In state 239, spurious reduction of production shift_expression -> additive_expression
## In state 218, spurious reduction of production relational_expression -> shift_expression
## In state 236, spurious reduction of production equality_expression -> relational_expression
## In state 254, spurious reduction of production _AND_expression -> equality_expression
## In state 262, spurious reduction of production exclusive_OR_expression -> _AND_expression
## In state 263, spurious reduction of production inclusive_OR_expression -> exclusive_OR_expression
## In state 264, spurious reduction of production logical_AND_expression -> inclusive_OR_expression
## In state 248, spurious reduction of production logical_OR_expression -> logical_AND_expression
## In state 246, spurious reduction of production conditional_expression -> logical_OR_expression
## In state 269, spurious reduction of production assignment_expression -> conditional_expression
## In state 364, spurious reduction of production option(assignment_expression) -> assignment_expression
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ALIGNAS LPAREN LPAREN LBRACE LNAME TYPE WHILE
##
## Ends in an error in state: 367.
##
## general_identifier -> typedef_name . [ RPAREN LPAREN LBRACK_LBRACK LBRACK COLON ]
## typedef_name_spec -> typedef_name . [ VOLATILE UNAME TYPEDEF THREAD_LOCAL STATIC STAR SEMICOLON RPAREN RESTRICT REGISTER NORETURN LPAREN LNAME LBRACK_LBRACK LBRACK INLINE EXTERN CONST COMMA AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## typedef_name
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: BOOL LNAME TYPE LPAREN BOOL STAR GT
##
## Ends in an error in state: 368.
##
## abstract_declarator -> pointer . [ RPAREN COMMA ]
## abstract_declarator -> pointer . direct_abstract_declarator [ RPAREN COMMA ]
## declarator -> pointer . direct_declarator [ RPAREN COMMA ]
##
## The known suffix of the stack is as follows:
## pointer
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 300, spurious reduction of production option(type_qualifier_list) ->
## In state 305, spurious reduction of production option(pointer) ->
## In state 307, spurious reduction of production pointer -> STAR option(type_qualifier_list) option(pointer)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ALIGNAS LPAREN BOOL LPAREN RPAREN WHILE
##
## Ends in an error in state: 369.
##
## direct_abstract_declarator -> function_abstract_declarator . [ RPAREN LPAREN LBRACK GT COMMA COLON ]
## direct_abstract_declarator -> function_abstract_declarator . attribute_specifier_sequence [ RPAREN LPAREN LBRACK GT COMMA COLON ]
##
## The known suffix of the stack is as follows:
## function_abstract_declarator
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ALIGNAS LPAREN BOOL LPAREN RPAREN LBRACK_LBRACK ALIGNAS RBRACK RBRACK WHILE
##
## Ends in an error in state: 370.
##
## attribute_specifier_sequence -> attribute_specifier_sequence . attribute_specifier [ RPAREN LPAREN LBRACK_LBRACK LBRACK GT COMMA COLON ]
## direct_abstract_declarator -> function_abstract_declarator attribute_specifier_sequence . [ RPAREN LPAREN LBRACK GT COMMA COLON ]
##
## The known suffix of the stack is as follows:
## function_abstract_declarator attribute_specifier_sequence
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ALIGNAS LPAREN BOOL STAR LPAREN STAR RPAREN WHILE
##
## Ends in an error in state: 371.
##
## abstract_declarator -> pointer direct_abstract_declarator . [ RPAREN GT COMMA COLON ]
## array_abstract_declarator -> direct_abstract_declarator . LBRACK option(assignment_expression) RBRACK [ RPAREN LPAREN LBRACK_LBRACK LBRACK GT COMMA COLON ]
## array_abstract_declarator -> direct_abstract_declarator . LBRACK type_qualifier_list option(assignment_expression) RBRACK [ RPAREN LPAREN LBRACK_LBRACK LBRACK GT COMMA COLON ]
## array_abstract_declarator -> direct_abstract_declarator . LBRACK STATIC option(type_qualifier_list) assignment_expression RBRACK [ RPAREN LPAREN LBRACK_LBRACK LBRACK GT COMMA COLON ]
## array_abstract_declarator -> direct_abstract_declarator . LBRACK type_qualifier_list STATIC assignment_expression RBRACK [ RPAREN LPAREN LBRACK_LBRACK LBRACK GT COMMA COLON ]
## array_abstract_declarator -> direct_abstract_declarator . LBRACK STAR RBRACK [ RPAREN LPAREN LBRACK_LBRACK LBRACK GT COMMA COLON ]
## function_abstract_declarator -> direct_abstract_declarator . LPAREN option(scoped(parameter_type_list)) RPAREN [ RPAREN LPAREN LBRACK_LBRACK LBRACK GT COMMA COLON ]
##
## The known suffix of the stack is as follows:
## pointer direct_abstract_declarator
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: TYPEDEF INLINE TYPEDEF
##
## Ends in an error in state: 375.
##
## list_eq1(attribute_type_specifier_unique,declaration_specifier) -> declaration_specifier . list_eq1(attribute_type_specifier_unique,declaration_specifier) [ UNAME STAR SEMICOLON RPAREN LPAREN LNAME LBRACK COMMA ]
## list_ge1(attribute_type_specifier_nonunique,declaration_specifier) -> declaration_specifier . list_ge1(attribute_type_specifier_nonunique,declaration_specifier) [ UNAME STAR SEMICOLON RPAREN LPAREN LNAME LBRACK COMMA ]
##
## The known suffix of the stack is as follows:
## declaration_specifier
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 344, spurious reduction of production declaration_specifier -> function_specifier
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: TYPEDEF BOOL TYPEDEF
##
## Ends in an error in state: 378.
##
## list_eq1(attribute_type_specifier_unique,declaration_specifier) -> attribute_type_specifier_unique . list(declaration_specifier) [ UNAME STAR SEMICOLON RPAREN LPAREN LNAME LBRACK COMMA ]
##
## The known suffix of the stack is as follows:
## attribute_type_specifier_unique
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 170, spurious reduction of production attribute_type_specifier_unique -> type_specifier_unique
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: BOOL TYPEDEF INLINE VOID
##
## Ends in an error in state: 380.
##
## list(declaration_specifier) -> declaration_specifier . list(declaration_specifier) [ UNAME STAR SEMICOLON RPAREN LPAREN LNAME LBRACK COMMA ]
##
## The known suffix of the stack is as follows:
## declaration_specifier
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 344, spurious reduction of production declaration_specifier -> function_specifier
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ALIGNAS LPAREN STRING_LITERAL RPAREN WHILE
##
## Ends in an error in state: 382.
##
## declaration_specifier -> alignment_specifier . [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NORETURN LPAREN LONG LNAME LBRACK INT INLINE FLOAT EXTERN ENUM DOUBLE CONST COMPLEX COMMA CHAR BOOL AUTO ATOMIC ALIGNAS ]
## declaration_specifier -> alignment_specifier . attribute_specifier_sequence [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NORETURN LPAREN LONG LNAME LBRACK INT INLINE FLOAT EXTERN ENUM DOUBLE CONST COMPLEX COMMA CHAR BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## alignment_specifier
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ALIGNAS LPAREN STRING_LITERAL RPAREN LBRACK_LBRACK ALIGNAS RBRACK RBRACK WHILE
##
## Ends in an error in state: 383.
##
## attribute_specifier_sequence -> attribute_specifier_sequence . attribute_specifier [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NORETURN LPAREN LONG LNAME LBRACK_LBRACK LBRACK INT INLINE FLOAT EXTERN ENUM DOUBLE CONST COMPLEX COMMA CHAR BOOL AUTO ATOMIC ALIGNAS ]
## declaration_specifier -> alignment_specifier attribute_specifier_sequence . [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NORETURN LPAREN LONG LNAME LBRACK INT INLINE FLOAT EXTERN ENUM DOUBLE CONST COMPLEX COMMA CHAR BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## alignment_specifier attribute_specifier_sequence
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: TYPEDEF CHAR TYPEDEF
##
## Ends in an error in state: 384.
##
## list_ge1(attribute_type_specifier_nonunique,declaration_specifier) -> attribute_type_specifier_nonunique . list(declaration_specifier) [ UNAME STAR SEMICOLON RPAREN LPAREN LNAME LBRACK COMMA ]
## list_ge1(attribute_type_specifier_nonunique,declaration_specifier) -> attribute_type_specifier_nonunique . list_ge1(attribute_type_specifier_nonunique,declaration_specifier) [ UNAME STAR SEMICOLON RPAREN LPAREN LNAME LBRACK COMMA ]
##
## The known suffix of the stack is as follows:
## attribute_type_specifier_nonunique
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 174, spurious reduction of production attribute_type_specifier_nonunique -> type_specifier_nonunique
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: CHAR TYPEDEF INLINE VOID
##
## Ends in an error in state: 387.
##
## list(declaration_specifier) -> declaration_specifier . list(declaration_specifier) [ UNAME STAR SEMICOLON RPAREN LPAREN LNAME LBRACK COMMA ]
## list_ge1(attribute_type_specifier_nonunique,declaration_specifier) -> declaration_specifier . list_ge1(attribute_type_specifier_nonunique,declaration_specifier) [ UNAME STAR SEMICOLON RPAREN LPAREN LNAME LBRACK COMMA ]
##
## The known suffix of the stack is as follows:
## declaration_specifier
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 344, spurious reduction of production declaration_specifier -> function_specifier
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: BOOL LNAME TYPE LPAREN LBRACK_LBRACK ALIGNAS RBRACK RBRACK WHILE
##
## Ends in an error in state: 389.
##
## attribute_specifier_sequence -> attribute_specifier_sequence . attribute_specifier [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF THREAD_LOCAL STRUCT STATIC SIGNED SHORT RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN ENUM DOUBLE CONST COMPLEX CHAR BOOL AUTO ATOMIC ALIGNAS ]
## parameter_declaration -> attribute_specifier_sequence . declaration_specifiers declarator_varname [ RPAREN COMMA ]
## parameter_declaration -> attribute_specifier_sequence . declaration_specifiers [ RPAREN COMMA ]
## parameter_declaration -> attribute_specifier_sequence . declaration_specifiers abstract_declarator [ RPAREN COMMA ]
##
## The known suffix of the stack is as follows:
## attribute_specifier_sequence
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: BOOL LNAME TYPE LPAREN LBRACK_LBRACK ALIGNAS RBRACK RBRACK BOOL SEMICOLON
##
## Ends in an error in state: 390.
##
## parameter_declaration -> attribute_specifier_sequence declaration_specifiers . declarator_varname [ RPAREN COMMA ]
## parameter_declaration -> attribute_specifier_sequence declaration_specifiers . [ RPAREN COMMA ]
## parameter_declaration -> attribute_specifier_sequence declaration_specifiers . abstract_declarator [ RPAREN COMMA ]
##
## The known suffix of the stack is as follows:
## attribute_specifier_sequence declaration_specifiers
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 170, spurious reduction of production attribute_type_specifier_unique -> type_specifier_unique
## In state 378, spurious reduction of production list(declaration_specifier) ->
## In state 379, spurious reduction of production list_eq1(attribute_type_specifier_unique,declaration_specifier) -> attribute_type_specifier_unique list(declaration_specifier)
## In state 343, spurious reduction of production declaration_specifiers -> list_eq1(attribute_type_specifier_unique,declaration_specifier)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: BOOL LNAME TYPE LPAREN RPAREN WHILE
##
## Ends in an error in state: 391.
##
## array_declarator -> direct_declarator . LBRACK option(type_qualifier_list) option(assignment_expression) RBRACK [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NORETURN LPAREN LONG LNAME LBRACK_LBRACK LBRACK LBRACES LBRACE INT INLINE FLOAT EXTERN EQ ENUM DOUBLE CONST COMPLEX COMMA COLON CHAR CERB_MAGIC BOOL AUTO ATOMIC ASM ALIGNAS ]
## array_declarator -> direct_declarator . LBRACK STATIC option(type_qualifier_list) assignment_expression RBRACK [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NORETURN LPAREN LONG LNAME LBRACK_LBRACK LBRACK LBRACES LBRACE INT INLINE FLOAT EXTERN EQ ENUM DOUBLE CONST COMPLEX COMMA COLON CHAR CERB_MAGIC BOOL AUTO ATOMIC ASM ALIGNAS ]
## array_declarator -> direct_declarator . LBRACK type_qualifier_list STATIC assignment_expression RBRACK [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NORETURN LPAREN LONG LNAME LBRACK_LBRACK LBRACK LBRACES LBRACE INT INLINE FLOAT EXTERN EQ ENUM DOUBLE CONST COMPLEX COMMA COLON CHAR CERB_MAGIC BOOL AUTO ATOMIC ASM ALIGNAS ]
## array_declarator -> direct_declarator . LBRACK option(type_qualifier_list) STAR RBRACK [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NORETURN LPAREN LONG LNAME LBRACK_LBRACK LBRACK LBRACES LBRACE INT INLINE FLOAT EXTERN EQ ENUM DOUBLE CONST COMPLEX COMMA COLON CHAR CERB_MAGIC BOOL AUTO ATOMIC ASM ALIGNAS ]
## declarator -> direct_declarator . [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NORETURN LONG LNAME LBRACES LBRACE INT INLINE FLOAT EXTERN EQ ENUM DOUBLE CONST COMPLEX COMMA COLON CHAR CERB_MAGIC BOOL AUTO ATOMIC ASM ALIGNAS ]
## direct_declarator -> direct_declarator . LPAREN save_context RPAREN [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NORETURN LPAREN LONG LNAME LBRACK LBRACES LBRACE INT INLINE FLOAT EXTERN EQ ENUM DOUBLE CONST COMPLEX COMMA COLON CHAR CERB_MAGIC BOOL AUTO ATOMIC ASM ALIGNAS ]
## direct_declarator -> direct_declarator . LPAREN save_context identifier_list RPAREN [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NORETURN LPAREN LONG LNAME LBRACK LBRACES LBRACE INT INLINE FLOAT EXTERN EQ ENUM DOUBLE CONST COMPLEX COMMA COLON CHAR CERB_MAGIC BOOL AUTO ATOMIC ASM ALIGNAS ]
## function_declarator -> direct_declarator . LPAREN scoped(parameter_type_list) RPAREN [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NORETURN LPAREN LONG LNAME LBRACK_LBRACK LBRACK LBRACES LBRACE INT INLINE FLOAT EXTERN EQ ENUM DOUBLE CONST COMPLEX COMMA COLON CHAR CERB_MAGIC BOOL AUTO ATOMIC ASM ALIGNAS ]
##
## The known suffix of the stack is as follows:
## direct_declarator
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: BOOL LNAME TYPE LBRACK WHILE
##
## Ends in an error in state: 392.
##
## array_declarator -> direct_declarator LBRACK . option(type_qualifier_list) option(assignment_expression) RBRACK [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NORETURN LPAREN LONG LNAME LBRACK_LBRACK LBRACK LBRACES LBRACE INT INLINE FLOAT EXTERN EQ ENUM DOUBLE CONST COMPLEX COMMA COLON CHAR CERB_MAGIC BOOL AUTO ATOMIC ASM ALIGNAS ]
## array_declarator -> direct_declarator LBRACK . STATIC option(type_qualifier_list) assignment_expression RBRACK [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NORETURN LPAREN LONG LNAME LBRACK_LBRACK LBRACK LBRACES LBRACE INT INLINE FLOAT EXTERN EQ ENUM DOUBLE CONST COMPLEX COMMA COLON CHAR CERB_MAGIC BOOL AUTO ATOMIC ASM ALIGNAS ]
## array_declarator -> direct_declarator LBRACK . type_qualifier_list STATIC assignment_expression RBRACK [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NORETURN LPAREN LONG LNAME LBRACK_LBRACK LBRACK LBRACES LBRACE INT INLINE FLOAT EXTERN EQ ENUM DOUBLE CONST COMPLEX COMMA COLON CHAR CERB_MAGIC BOOL AUTO ATOMIC ASM ALIGNAS ]
## array_declarator -> direct_declarator LBRACK . option(type_qualifier_list) STAR RBRACK [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NORETURN LPAREN LONG LNAME LBRACK_LBRACK LBRACK LBRACES LBRACE INT INLINE FLOAT EXTERN EQ ENUM DOUBLE CONST COMPLEX COMMA COLON CHAR CERB_MAGIC BOOL AUTO ATOMIC ASM ALIGNAS ]
##
## The known suffix of the stack is as follows:
## direct_declarator LBRACK
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: BOOL LNAME TYPE LBRACK STATIC ATOMIC RPAREN
##
## Ends in an error in state: 394.
##
## array_declarator -> direct_declarator LBRACK STATIC option(type_qualifier_list) . assignment_expression RBRACK [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NORETURN LPAREN LONG LNAME LBRACK_LBRACK LBRACK LBRACES LBRACE INT INLINE FLOAT EXTERN EQ ENUM DOUBLE CONST COMPLEX COMMA COLON CHAR CERB_MAGIC BOOL AUTO ATOMIC ASM ALIGNAS ]
##
## The known suffix of the stack is as follows:
## direct_declarator LBRACK STATIC option(type_qualifier_list)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 302, spurious reduction of production option(type_qualifier_list) -> type_qualifier_list
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: BOOL LNAME TYPE LBRACK STATIC STRING_LITERAL RPAREN
##
## Ends in an error in state: 395.
##
## array_declarator -> direct_declarator LBRACK STATIC option(type_qualifier_list) assignment_expression . RBRACK [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NORETURN LPAREN LONG LNAME LBRACK_LBRACK LBRACK LBRACES LBRACE INT INLINE FLOAT EXTERN EQ ENUM DOUBLE CONST COMPLEX COMMA COLON CHAR CERB_MAGIC BOOL AUTO ATOMIC ASM ALIGNAS ]
##
## The known suffix of the stack is as follows:
## direct_declarator LBRACK STATIC option(type_qualifier_list) assignment_expression
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 100, spurious reduction of production nonempty_list(string_literal_component) -> string_literal_component
## In state 104, spurious reduction of production string_literal -> nonempty_list(string_literal_component)
## In state 196, spurious reduction of production start_ignore ->
## In state 197, spurious reduction of production primary_expression -> string_literal start_ignore
## In state 198, spurious reduction of production postfix_expression -> primary_expression
## In state 199, spurious reduction of production unary_expression -> postfix_expression
## In state 205, spurious reduction of production cast_expression -> unary_expression
## In state 228, spurious reduction of production multiplicative_expression -> cast_expression
## In state 220, spurious reduction of production additive_expression -> multiplicative_expression
## In state 239, spurious reduction of production shift_expression -> additive_expression
## In state 218, spurious reduction of production relational_expression -> shift_expression
## In state 236, spurious reduction of production equality_expression -> relational_expression
## In state 254, spurious reduction of production _AND_expression -> equality_expression
## In state 262, spurious reduction of production exclusive_OR_expression -> _AND_expression
## In state 263, spurious reduction of production inclusive_OR_expression -> exclusive_OR_expression
## In state 264, spurious reduction of production logical_AND_expression -> inclusive_OR_expression
## In state 248, spurious reduction of production logical_OR_expression -> logical_AND_expression
## In state 246, spurious reduction of production conditional_expression -> logical_OR_expression
## In state 269, spurious reduction of production assignment_expression -> conditional_expression
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: BOOL LNAME TYPE LBRACK ATOMIC WHILE
##
## Ends in an error in state: 397.
##
## array_declarator -> direct_declarator LBRACK type_qualifier_list . STATIC assignment_expression RBRACK [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NORETURN LPAREN LONG LNAME LBRACK_LBRACK LBRACK LBRACES LBRACE INT INLINE FLOAT EXTERN EQ ENUM DOUBLE CONST COMPLEX COMMA COLON CHAR CERB_MAGIC BOOL AUTO ATOMIC ASM ALIGNAS ]
## option(type_qualifier_list) -> type_qualifier_list . [ VA_START VA_END VA_COPY VA_ARG UNAME TILDE STRING_LITERAL STAR SIZEOF RBRACK PRINT_TYPE PLUS_PLUS PLUS OFFSETOF MINUS_MINUS MINUS LPAREN LNAME GENERIC CONSTANT BUILTIN_TYPES_COMPATIBLE_P BUILTIN_CHOOSE_EXPR BMC_ASSUME BANG ASSERT AMPERSAND ALIGNOF ]
## type_qualifier_list -> type_qualifier_list . type_qualifier [ VOLATILE VA_START VA_END VA_COPY VA_ARG UNAME TILDE STRING_LITERAL STATIC STAR SIZEOF RESTRICT RBRACK PRINT_TYPE PLUS_PLUS PLUS OFFSETOF MINUS_MINUS MINUS LPAREN LNAME GENERIC CONSTANT CONST BUILTIN_TYPES_COMPATIBLE_P BUILTIN_CHOOSE_EXPR BMC_ASSUME BANG ATOMIC ASSERT AMPERSAND ALIGNOF ]
##
## The known suffix of the stack is as follows:
## direct_declarator LBRACK type_qualifier_list
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: BOOL LNAME TYPE LBRACK ATOMIC STATIC STRING_LITERAL RPAREN
##
## Ends in an error in state: 399.
##
## array_declarator -> direct_declarator LBRACK type_qualifier_list STATIC assignment_expression . RBRACK [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NORETURN LPAREN LONG LNAME LBRACK_LBRACK LBRACK LBRACES LBRACE INT INLINE FLOAT EXTERN EQ ENUM DOUBLE CONST COMPLEX COMMA COLON CHAR CERB_MAGIC BOOL AUTO ATOMIC ASM ALIGNAS ]
##
## The known suffix of the stack is as follows:
## direct_declarator LBRACK type_qualifier_list STATIC assignment_expression
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 100, spurious reduction of production nonempty_list(string_literal_component) -> string_literal_component
## In state 104, spurious reduction of production string_literal -> nonempty_list(string_literal_component)
## In state 196, spurious reduction of production start_ignore ->
## In state 197, spurious reduction of production primary_expression -> string_literal start_ignore
## In state 198, spurious reduction of production postfix_expression -> primary_expression
## In state 199, spurious reduction of production unary_expression -> postfix_expression
## In state 205, spurious reduction of production cast_expression -> unary_expression
## In state 228, spurious reduction of production multiplicative_expression -> cast_expression
## In state 220, spurious reduction of production additive_expression -> multiplicative_expression
## In state 239, spurious reduction of production shift_expression -> additive_expression
## In state 218, spurious reduction of production relational_expression -> shift_expression
## In state 236, spurious reduction of production equality_expression -> relational_expression
## In state 254, spurious reduction of production _AND_expression -> equality_expression
## In state 262, spurious reduction of production exclusive_OR_expression -> _AND_expression
## In state 263, spurious reduction of production inclusive_OR_expression -> exclusive_OR_expression
## In state 264, spurious reduction of production logical_AND_expression -> inclusive_OR_expression
## In state 248, spurious reduction of production logical_OR_expression -> logical_AND_expression
## In state 246, spurious reduction of production conditional_expression -> logical_OR_expression
## In state 269, spurious reduction of production assignment_expression -> conditional_expression
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: BOOL LNAME TYPE LBRACK STAR WHILE
##
## Ends in an error in state: 402.
##
## array_declarator -> direct_declarator LBRACK option(type_qualifier_list) STAR . RBRACK [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NORETURN LPAREN LONG LNAME LBRACK_LBRACK LBRACK LBRACES LBRACE INT INLINE FLOAT EXTERN EQ ENUM DOUBLE CONST COMPLEX COMMA COLON CHAR CERB_MAGIC BOOL AUTO ATOMIC ASM ALIGNAS ]
## unary_operator -> STAR . [ VA_START VA_END VA_COPY VA_ARG UNAME TILDE STRING_LITERAL STAR SIZEOF PRINT_TYPE PLUS_PLUS PLUS OFFSETOF MINUS_MINUS MINUS LPAREN LNAME GENERIC CONSTANT BUILTIN_TYPES_COMPATIBLE_P BUILTIN_CHOOSE_EXPR BMC_ASSUME BANG ASSERT AMPERSAND ALIGNOF ]
##
## The known suffix of the stack is as follows:
## direct_declarator LBRACK option(type_qualifier_list) STAR
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: BOOL LNAME TYPE LBRACK STRING_LITERAL RPAREN
##
## Ends in an error in state: 404.
##
## array_declarator -> direct_declarator LBRACK option(type_qualifier_list) option(assignment_expression) . RBRACK [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NORETURN LPAREN LONG LNAME LBRACK_LBRACK LBRACK LBRACES LBRACE INT INLINE FLOAT EXTERN EQ ENUM DOUBLE CONST COMPLEX COMMA COLON CHAR CERB_MAGIC BOOL AUTO ATOMIC ASM ALIGNAS ]
##
## The known suffix of the stack is as follows:
## direct_declarator LBRACK option(type_qualifier_list) option(assignment_expression)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 100, spurious reduction of production nonempty_list(string_literal_component) -> string_literal_component
## In state 104, spurious reduction of production string_literal -> nonempty_list(string_literal_component)
## In state 196, spurious reduction of production start_ignore ->
## In state 197, spurious reduction of production primary_expression -> string_literal start_ignore
## In state 198, spurious reduction of production postfix_expression -> primary_expression
## In state 199, spurious reduction of production unary_expression -> postfix_expression
## In state 205, spurious reduction of production cast_expression -> unary_expression
## In state 228, spurious reduction of production multiplicative_expression -> cast_expression
## In state 220, spurious reduction of production additive_expression -> multiplicative_expression
## In state 239, spurious reduction of production shift_expression -> additive_expression
## In state 218, spurious reduction of production relational_expression -> shift_expression
## In state 236, spurious reduction of production equality_expression -> relational_expression
## In state 254, spurious reduction of production _AND_expression -> equality_expression
## In state 262, spurious reduction of production exclusive_OR_expression -> _AND_expression
## In state 263, spurious reduction of production inclusive_OR_expression -> exclusive_OR_expression
## In state 264, spurious reduction of production logical_AND_expression -> inclusive_OR_expression
## In state 248, spurious reduction of production logical_OR_expression -> logical_AND_expression
## In state 246, spurious reduction of production conditional_expression -> logical_OR_expression
## In state 269, spurious reduction of production assignment_expression -> conditional_expression
## In state 364, spurious reduction of production option(assignment_expression) -> assignment_expression
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ALIGNAS LPAREN BOOL LPAREN STAR RPAREN WHILE
##
## Ends in an error in state: 406.
##
## abstract_declarator -> direct_abstract_declarator . [ RPAREN GT COMMA COLON ]
## array_abstract_declarator -> direct_abstract_declarator . LBRACK option(assignment_expression) RBRACK [ RPAREN LPAREN LBRACK_LBRACK LBRACK GT COMMA COLON ]
## array_abstract_declarator -> direct_abstract_declarator . LBRACK type_qualifier_list option(assignment_expression) RBRACK [ RPAREN LPAREN LBRACK_LBRACK LBRACK GT COMMA COLON ]
## array_abstract_declarator -> direct_abstract_declarator . LBRACK STATIC option(type_qualifier_list) assignment_expression RBRACK [ RPAREN LPAREN LBRACK_LBRACK LBRACK GT COMMA COLON ]
## array_abstract_declarator -> direct_abstract_declarator . LBRACK type_qualifier_list STATIC assignment_expression RBRACK [ RPAREN LPAREN LBRACK_LBRACK LBRACK GT COMMA COLON ]
## array_abstract_declarator -> direct_abstract_declarator . LBRACK STAR RBRACK [ RPAREN LPAREN LBRACK_LBRACK LBRACK GT COMMA COLON ]
## function_abstract_declarator -> direct_abstract_declarator . LPAREN option(scoped(parameter_type_list)) RPAREN [ RPAREN LPAREN LBRACK_LBRACK LBRACK GT COMMA COLON ]
##
## The known suffix of the stack is as follows:
## direct_abstract_declarator
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ALIGNAS LPAREN BOOL LBRACK RBRACK LBRACK WHILE
##
## Ends in an error in state: 407.
##
## array_abstract_declarator -> direct_abstract_declarator LBRACK . option(assignment_expression) RBRACK [ RPAREN LPAREN LBRACK_LBRACK LBRACK GT COMMA COLON ]
## array_abstract_declarator -> direct_abstract_declarator LBRACK . type_qualifier_list option(assignment_expression) RBRACK [ RPAREN LPAREN LBRACK_LBRACK LBRACK GT COMMA COLON ]
## array_abstract_declarator -> direct_abstract_declarator LBRACK . STATIC option(type_qualifier_list) assignment_expression RBRACK [ RPAREN LPAREN LBRACK_LBRACK LBRACK GT COMMA COLON ]
## array_abstract_declarator -> direct_abstract_declarator LBRACK . type_qualifier_list STATIC assignment_expression RBRACK [ RPAREN LPAREN LBRACK_LBRACK LBRACK GT COMMA COLON ]
## array_abstract_declarator -> direct_abstract_declarator LBRACK . STAR RBRACK [ RPAREN LPAREN LBRACK_LBRACK LBRACK GT COMMA COLON ]
##
## The known suffix of the stack is as follows:
## direct_abstract_declarator LBRACK
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ALIGNAS LPAREN BOOL LBRACK RBRACK LBRACK STATIC ATOMIC RPAREN
##
## Ends in an error in state: 409.
##
## array_abstract_declarator -> direct_abstract_declarator LBRACK STATIC option(type_qualifier_list) . assignment_expression RBRACK [ RPAREN LPAREN LBRACK_LBRACK LBRACK GT COMMA COLON ]
##
## The known suffix of the stack is as follows:
## direct_abstract_declarator LBRACK STATIC option(type_qualifier_list)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 302, spurious reduction of production option(type_qualifier_list) -> type_qualifier_list
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ALIGNAS LPAREN BOOL LBRACK RBRACK LBRACK STATIC STRING_LITERAL RPAREN
##
## Ends in an error in state: 410.
##
## array_abstract_declarator -> direct_abstract_declarator LBRACK STATIC option(type_qualifier_list) assignment_expression . RBRACK [ RPAREN LPAREN LBRACK_LBRACK LBRACK GT COMMA COLON ]
##
## The known suffix of the stack is as follows:
## direct_abstract_declarator LBRACK STATIC option(type_qualifier_list) assignment_expression
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 100, spurious reduction of production nonempty_list(string_literal_component) -> string_literal_component
## In state 104, spurious reduction of production string_literal -> nonempty_list(string_literal_component)
## In state 196, spurious reduction of production start_ignore ->
## In state 197, spurious reduction of production primary_expression -> string_literal start_ignore
## In state 198, spurious reduction of production postfix_expression -> primary_expression
## In state 199, spurious reduction of production unary_expression -> postfix_expression
## In state 205, spurious reduction of production cast_expression -> unary_expression
## In state 228, spurious reduction of production multiplicative_expression -> cast_expression
## In state 220, spurious reduction of production additive_expression -> multiplicative_expression
## In state 239, spurious reduction of production shift_expression -> additive_expression
## In state 218, spurious reduction of production relational_expression -> shift_expression
## In state 236, spurious reduction of production equality_expression -> relational_expression
## In state 254, spurious reduction of production _AND_expression -> equality_expression
## In state 262, spurious reduction of production exclusive_OR_expression -> _AND_expression
## In state 263, spurious reduction of production inclusive_OR_expression -> exclusive_OR_expression
## In state 264, spurious reduction of production logical_AND_expression -> inclusive_OR_expression
## In state 248, spurious reduction of production logical_OR_expression -> logical_AND_expression
## In state 246, spurious reduction of production conditional_expression -> logical_OR_expression
## In state 269, spurious reduction of production assignment_expression -> conditional_expression
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ALIGNAS LPAREN BOOL LBRACK RBRACK LBRACK STAR WHILE
##
## Ends in an error in state: 412.
##
## array_abstract_declarator -> direct_abstract_declarator LBRACK STAR . RBRACK [ RPAREN LPAREN LBRACK_LBRACK LBRACK GT COMMA COLON ]
## unary_operator -> STAR . [ VA_START VA_END VA_COPY VA_ARG UNAME TILDE STRING_LITERAL STAR SIZEOF PRINT_TYPE PLUS_PLUS PLUS OFFSETOF MINUS_MINUS MINUS LPAREN LNAME GENERIC CONSTANT BUILTIN_TYPES_COMPATIBLE_P BUILTIN_CHOOSE_EXPR BMC_ASSUME BANG ASSERT AMPERSAND ALIGNOF ]
##
## The known suffix of the stack is as follows:
## direct_abstract_declarator LBRACK STAR
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ALIGNAS LPAREN BOOL LBRACK RBRACK LBRACK ATOMIC WHILE
##
## Ends in an error in state: 414.
##
## array_abstract_declarator -> direct_abstract_declarator LBRACK type_qualifier_list . option(assignment_expression) RBRACK [ RPAREN LPAREN LBRACK_LBRACK LBRACK GT COMMA COLON ]
## array_abstract_declarator -> direct_abstract_declarator LBRACK type_qualifier_list . STATIC assignment_expression RBRACK [ RPAREN LPAREN LBRACK_LBRACK LBRACK GT COMMA COLON ]
## type_qualifier_list -> type_qualifier_list . type_qualifier [ VOLATILE VA_START VA_END VA_COPY VA_ARG UNAME TILDE STRING_LITERAL STATIC STAR SIZEOF RESTRICT RBRACK PRINT_TYPE PLUS_PLUS PLUS OFFSETOF MINUS_MINUS MINUS LPAREN LNAME GENERIC CONSTANT CONST BUILTIN_TYPES_COMPATIBLE_P BUILTIN_CHOOSE_EXPR BMC_ASSUME BANG ATOMIC ASSERT AMPERSAND ALIGNOF ]
##
## The known suffix of the stack is as follows:
## direct_abstract_declarator LBRACK type_qualifier_list
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ALIGNAS LPAREN BOOL LBRACK RBRACK LBRACK ATOMIC STATIC STRING_LITERAL RPAREN
##
## Ends in an error in state: 416.
##
## array_abstract_declarator -> direct_abstract_declarator LBRACK type_qualifier_list STATIC assignment_expression . RBRACK [ RPAREN LPAREN LBRACK_LBRACK LBRACK GT COMMA COLON ]
##
## The known suffix of the stack is as follows:
## direct_abstract_declarator LBRACK type_qualifier_list STATIC assignment_expression
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 100, spurious reduction of production nonempty_list(string_literal_component) -> string_literal_component
## In state 104, spurious reduction of production string_literal -> nonempty_list(string_literal_component)
## In state 196, spurious reduction of production start_ignore ->
## In state 197, spurious reduction of production primary_expression -> string_literal start_ignore
## In state 198, spurious reduction of production postfix_expression -> primary_expression
## In state 199, spurious reduction of production unary_expression -> postfix_expression
## In state 205, spurious reduction of production cast_expression -> unary_expression
## In state 228, spurious reduction of production multiplicative_expression -> cast_expression
## In state 220, spurious reduction of production additive_expression -> multiplicative_expression
## In state 239, spurious reduction of production shift_expression -> additive_expression
## In state 218, spurious reduction of production relational_expression -> shift_expression
## In state 236, spurious reduction of production equality_expression -> relational_expression
## In state 254, spurious reduction of production _AND_expression -> equality_expression
## In state 262, spurious reduction of production exclusive_OR_expression -> _AND_expression
## In state 263, spurious reduction of production inclusive_OR_expression -> exclusive_OR_expression
## In state 264, spurious reduction of production logical_AND_expression -> inclusive_OR_expression
## In state 248, spurious reduction of production logical_OR_expression -> logical_AND_expression
## In state 246, spurious reduction of production conditional_expression -> logical_OR_expression
## In state 269, spurious reduction of production assignment_expression -> conditional_expression
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ALIGNAS LPAREN BOOL LBRACK RBRACK LBRACK ATOMIC STRING_LITERAL RPAREN
##
## Ends in an error in state: 418.
##
## array_abstract_declarator -> direct_abstract_declarator LBRACK type_qualifier_list option(assignment_expression) . RBRACK [ RPAREN LPAREN LBRACK_LBRACK LBRACK GT COMMA COLON ]
##
## The known suffix of the stack is as follows:
## direct_abstract_declarator LBRACK type_qualifier_list option(assignment_expression)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 100, spurious reduction of production nonempty_list(string_literal_component) -> string_literal_component
## In state 104, spurious reduction of production string_literal -> nonempty_list(string_literal_component)
## In state 196, spurious reduction of production start_ignore ->
## In state 197, spurious reduction of production primary_expression -> string_literal start_ignore
## In state 198, spurious reduction of production postfix_expression -> primary_expression
## In state 199, spurious reduction of production unary_expression -> postfix_expression
## In state 205, spurious reduction of production cast_expression -> unary_expression
## In state 228, spurious reduction of production multiplicative_expression -> cast_expression
## In state 220, spurious reduction of production additive_expression -> multiplicative_expression
## In state 239, spurious reduction of production shift_expression -> additive_expression
## In state 218, spurious reduction of production relational_expression -> shift_expression
## In state 236, spurious reduction of production equality_expression -> relational_expression
## In state 254, spurious reduction of production _AND_expression -> equality_expression
## In state 262, spurious reduction of production exclusive_OR_expression -> _AND_expression
## In state 263, spurious reduction of production inclusive_OR_expression -> exclusive_OR_expression
## In state 264, spurious reduction of production logical_AND_expression -> inclusive_OR_expression
## In state 248, spurious reduction of production logical_OR_expression -> logical_AND_expression
## In state 246, spurious reduction of production conditional_expression -> logical_OR_expression
## In state 269, spurious reduction of production assignment_expression -> conditional_expression
## In state 364, spurious reduction of production option(assignment_expression) -> assignment_expression
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ALIGNAS LPAREN BOOL LBRACK RBRACK LBRACK STRING_LITERAL RPAREN
##
## Ends in an error in state: 420.
##
## array_abstract_declarator -> direct_abstract_declarator LBRACK option(assignment_expression) . RBRACK [ RPAREN LPAREN LBRACK_LBRACK LBRACK GT COMMA COLON ]
##
## The known suffix of the stack is as follows:
## direct_abstract_declarator LBRACK option(assignment_expression)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 100, spurious reduction of production nonempty_list(string_literal_component) -> string_literal_component
## In state 104, spurious reduction of production string_literal -> nonempty_list(string_literal_component)
## In state 196, spurious reduction of production start_ignore ->
## In state 197, spurious reduction of production primary_expression -> string_literal start_ignore
## In state 198, spurious reduction of production postfix_expression -> primary_expression
## In state 199, spurious reduction of production unary_expression -> postfix_expression
## In state 205, spurious reduction of production cast_expression -> unary_expression
## In state 228, spurious reduction of production multiplicative_expression -> cast_expression
## In state 220, spurious reduction of production additive_expression -> multiplicative_expression
## In state 239, spurious reduction of production shift_expression -> additive_expression
## In state 218, spurious reduction of production relational_expression -> shift_expression
## In state 236, spurious reduction of production equality_expression -> relational_expression
## In state 254, spurious reduction of production _AND_expression -> equality_expression
## In state 262, spurious reduction of production exclusive_OR_expression -> _AND_expression
## In state 263, spurious reduction of production inclusive_OR_expression -> exclusive_OR_expression
## In state 264, spurious reduction of production logical_AND_expression -> inclusive_OR_expression
## In state 248, spurious reduction of production logical_OR_expression -> logical_AND_expression
## In state 246, spurious reduction of production conditional_expression -> logical_OR_expression
## In state 269, spurious reduction of production assignment_expression -> conditional_expression
## In state 364, spurious reduction of production option(assignment_expression) -> assignment_expression
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: BOOL LNAME TYPE LBRACK RBRACK WHILE
##
## Ends in an error in state: 424.
##
## direct_declarator -> array_declarator . [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NORETURN LPAREN LONG LNAME LBRACK LBRACES LBRACE INT INLINE FLOAT EXTERN EQ ENUM DOUBLE CONST COMPLEX COMMA COLON CHAR CERB_MAGIC BOOL AUTO ATOMIC ASM ALIGNAS ]
## direct_declarator -> array_declarator . attribute_specifier_sequence [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NORETURN LPAREN LONG LNAME LBRACK LBRACES LBRACE INT INLINE FLOAT EXTERN EQ ENUM DOUBLE CONST COMPLEX COMMA COLON CHAR CERB_MAGIC BOOL AUTO ATOMIC ASM ALIGNAS ]
##
## The known suffix of the stack is as follows:
## array_declarator
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: BOOL LNAME TYPE LBRACK RBRACK LBRACK_LBRACK ALIGNAS RBRACK RBRACK WHILE
##
## Ends in an error in state: 425.
##
## attribute_specifier_sequence -> attribute_specifier_sequence . attribute_specifier [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NORETURN LPAREN LONG LNAME LBRACK_LBRACK LBRACK LBRACES LBRACE INT INLINE FLOAT EXTERN EQ ENUM DOUBLE CONST COMPLEX COMMA COLON CHAR CERB_MAGIC BOOL AUTO ATOMIC ASM ALIGNAS ]
## direct_declarator -> array_declarator attribute_specifier_sequence . [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NORETURN LPAREN LONG LNAME LBRACK LBRACES LBRACE INT INLINE FLOAT EXTERN EQ ENUM DOUBLE CONST COMPLEX COMMA COLON CHAR CERB_MAGIC BOOL AUTO ATOMIC ASM ALIGNAS ]
##
## The known suffix of the stack is as follows:
## array_declarator attribute_specifier_sequence
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ALIGNAS LPAREN BOOL LBRACK RBRACK WHILE
##
## Ends in an error in state: 426.
##
## direct_abstract_declarator -> array_abstract_declarator . [ RPAREN LPAREN LBRACK GT COMMA COLON ]
## direct_abstract_declarator -> array_abstract_declarator . attribute_specifier_sequence [ RPAREN LPAREN LBRACK GT COMMA COLON ]
##
## The known suffix of the stack is as follows:
## array_abstract_declarator
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ALIGNAS LPAREN BOOL LBRACK RBRACK LBRACK_LBRACK ALIGNAS RBRACK RBRACK WHILE
##
## Ends in an error in state: 427.
##
## attribute_specifier_sequence -> attribute_specifier_sequence . attribute_specifier [ RPAREN LPAREN LBRACK_LBRACK LBRACK GT COMMA COLON ]
## direct_abstract_declarator -> array_abstract_declarator attribute_specifier_sequence . [ RPAREN LPAREN LBRACK GT COMMA COLON ]
##
## The known suffix of the stack is as follows:
## array_abstract_declarator attribute_specifier_sequence
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: BOOL LPAREN LNAME TYPE VOLATILE
##
## Ends in an error in state: 431.
##
## direct_declarator -> LPAREN save_context declarator . RPAREN [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NORETURN LPAREN LONG LNAME LBRACK LBRACES LBRACE INT INLINE FLOAT EXTERN EQ ENUM DOUBLE CONST COMPLEX COMMA COLON CHAR CERB_MAGIC BOOL AUTO ATOMIC ASM ALIGNAS ]
##
## The known suffix of the stack is as follows:
## LPAREN save_context declarator
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 314, spurious reduction of production direct_declarator -> general_identifier
## In state 391, spurious reduction of production declarator -> direct_declarator
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ALIGNAS LPAREN BOOL LPAREN STAR COMMA
##
## Ends in an error in state: 433.
##
## direct_abstract_declarator -> LPAREN save_context abstract_declarator . RPAREN [ RPAREN LPAREN LBRACK GT COMMA COLON ]
##
## The known suffix of the stack is as follows:
## LPAREN save_context abstract_declarator
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 300, spurious reduction of production option(type_qualifier_list) ->
## In state 305, spurious reduction of production option(pointer) ->
## In state 307, spurious reduction of production pointer -> STAR option(type_qualifier_list) option(pointer)
## In state 487, spurious reduction of production abstract_declarator -> pointer
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: BOOL LNAME TYPE LPAREN LNAME VARIABLE WHILE
##
## Ends in an error in state: 440.
##
## direct_declarator -> direct_declarator LPAREN save_context identifier_list . RPAREN [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NORETURN LPAREN LONG LNAME LBRACK LBRACES LBRACE INT INLINE FLOAT EXTERN EQ ENUM DOUBLE CONST COMPLEX COMMA COLON CHAR CERB_MAGIC BOOL AUTO ATOMIC ASM ALIGNAS ]
## identifier_list -> identifier_list . COMMA var_name [ RPAREN COMMA ]
##
## The known suffix of the stack is as follows:
## direct_declarator LPAREN save_context identifier_list
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: STRUCT LBRACE BOOL COLON STRING_LITERAL RPAREN
##
## Ends in an error in state: 444.
##
## option(struct_declarator_list) -> struct_declarator_list . [ SEMICOLON ]
## struct_declarator_list -> struct_declarator_list . COMMA struct_declarator [ SEMICOLON COMMA ]
##
## The known suffix of the stack is as follows:
## struct_declarator_list
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 100, spurious reduction of production nonempty_list(string_literal_component) -> string_literal_component
## In state 104, spurious reduction of production string_literal -> nonempty_list(string_literal_component)
## In state 196, spurious reduction of production start_ignore ->
## In state 197, spurious reduction of production primary_expression -> string_literal start_ignore
## In state 198, spurious reduction of production postfix_expression -> primary_expression
## In state 199, spurious reduction of production unary_expression -> postfix_expression
## In state 195, spurious reduction of production cast_expression -> unary_expression
## In state 228, spurious reduction of production multiplicative_expression -> cast_expression
## In state 220, spurious reduction of production additive_expression -> multiplicative_expression
## In state 239, spurious reduction of production shift_expression -> additive_expression
## In state 218, spurious reduction of production relational_expression -> shift_expression
## In state 236, spurious reduction of production equality_expression -> relational_expression
## In state 254, spurious reduction of production _AND_expression -> equality_expression
## In state 262, spurious reduction of production exclusive_OR_expression -> _AND_expression
## In state 263, spurious reduction of production inclusive_OR_expression -> exclusive_OR_expression
## In state 264, spurious reduction of production logical_AND_expression -> inclusive_OR_expression
## In state 248, spurious reduction of production logical_OR_expression -> logical_AND_expression
## In state 246, spurious reduction of production conditional_expression -> logical_OR_expression
## In state 294, spurious reduction of production constant_expression -> conditional_expression
## In state 449, spurious reduction of production struct_declarator -> option(declarator) COLON constant_expression
## In state 451, spurious reduction of production struct_declarator_list -> struct_declarator
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: STRUCT LBRACE BOOL LNAME TYPE VOLATILE
##
## Ends in an error in state: 450.
##
## option(declarator) -> declarator . [ COLON ]
## struct_declarator -> declarator . [ SEMICOLON COMMA ]
##
## The known suffix of the stack is as follows:
## declarator
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 314, spurious reduction of production direct_declarator -> general_identifier
## In state 391, spurious reduction of production declarator -> direct_declarator
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ALIGNAS LPAREN BOOL TYPEDEF
##
## Ends in an error in state: 457.
##
## list_tuple3_eq1(attribute_type_specifier_unique,attribute_type_qualifier,attribute_alignment_specifier) -> attribute_type_specifier_unique . list_pair(attribute_type_qualifier,attribute_alignment_specifier) [ UNAME STAR SEMICOLON RPAREN LPAREN LNAME LBRACK GT COMMA COLON ]
##
## The known suffix of the stack is as follows:
## attribute_type_specifier_unique
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 170, spurious reduction of production attribute_type_specifier_unique -> type_specifier_unique
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ALIGNAS LPAREN BOOL ATOMIC VOID
##
## Ends in an error in state: 459.
##
## list_pair(attribute_type_qualifier,attribute_alignment_specifier) -> attribute_type_qualifier . list_pair(attribute_type_qualifier,attribute_alignment_specifier) [ UNAME STAR SEMICOLON RPAREN LPAREN LNAME LBRACK GT COMMA COLON ]
##
## The known suffix of the stack is as follows:
## attribute_type_qualifier
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 176, spurious reduction of production attribute_type_qualifier -> type_qualifier
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ALIGNAS LPAREN BOOL ALIGNAS LPAREN STRING_LITERAL RPAREN VOID
##
## Ends in an error in state: 461.
##
## list_pair(attribute_type_qualifier,attribute_alignment_specifier) -> attribute_alignment_specifier . list_pair(attribute_type_qualifier,attribute_alignment_specifier) [ UNAME STAR SEMICOLON RPAREN LPAREN LNAME LBRACK GT COMMA COLON ]
##
## The known suffix of the stack is as follows:
## attribute_alignment_specifier
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 463, spurious reduction of production attribute_alignment_specifier -> alignment_specifier
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ALIGNAS LPAREN ALIGNAS LPAREN STRING_LITERAL RPAREN WHILE
##
## Ends in an error in state: 463.
##
## attribute_alignment_specifier -> alignment_specifier . [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF STRUCT STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT LPAREN LONG LNAME LBRACK INT GT FLOAT ENUM DOUBLE CONST COMPLEX COMMA COLON CHAR BOOL ATOMIC ALIGNAS ]
## attribute_alignment_specifier -> alignment_specifier . attribute_specifier_sequence [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF STRUCT STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT LPAREN LONG LNAME LBRACK INT GT FLOAT ENUM DOUBLE CONST COMPLEX COMMA COLON CHAR BOOL ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## alignment_specifier
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ALIGNAS LPAREN ALIGNAS LPAREN STRING_LITERAL RPAREN LBRACK_LBRACK ALIGNAS RBRACK RBRACK WHILE
##
## Ends in an error in state: 464.
##
## attribute_alignment_specifier -> alignment_specifier attribute_specifier_sequence . [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF STRUCT STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT LPAREN LONG LNAME LBRACK INT GT FLOAT ENUM DOUBLE CONST COMPLEX COMMA COLON CHAR BOOL ATOMIC ALIGNAS ]
## attribute_specifier_sequence -> attribute_specifier_sequence . attribute_specifier [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF STRUCT STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT LPAREN LONG LNAME LBRACK_LBRACK LBRACK INT GT FLOAT ENUM DOUBLE CONST COMPLEX COMMA COLON CHAR BOOL ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## alignment_specifier attribute_specifier_sequence
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ALIGNAS LPAREN CHAR TYPEDEF
##
## Ends in an error in state: 465.
##
## list_tuple3_ge1(attribute_type_specifier_nonunique,attribute_type_qualifier,attribute_alignment_specifier) -> attribute_type_specifier_nonunique . list_pair(attribute_type_qualifier,attribute_alignment_specifier) [ UNAME STAR SEMICOLON RPAREN LPAREN LNAME LBRACK GT COMMA COLON ]
## list_tuple3_ge1(attribute_type_specifier_nonunique,attribute_type_qualifier,attribute_alignment_specifier) -> attribute_type_specifier_nonunique . list_tuple3_ge1(attribute_type_specifier_nonunique,attribute_type_qualifier,attribute_alignment_specifier) [ UNAME STAR SEMICOLON RPAREN LPAREN LNAME LBRACK GT COMMA COLON ]
##
## The known suffix of the stack is as follows:
## attribute_type_specifier_nonunique
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 174, spurious reduction of production attribute_type_specifier_nonunique -> type_specifier_nonunique
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ALIGNAS LPAREN CHAR ATOMIC VOID
##
## Ends in an error in state: 468.
##
## list_pair(attribute_type_qualifier,attribute_alignment_specifier) -> attribute_type_qualifier . list_pair(attribute_type_qualifier,attribute_alignment_specifier) [ UNAME STAR SEMICOLON RPAREN LPAREN LNAME LBRACK GT COMMA COLON ]
## list_tuple3_ge1(attribute_type_specifier_nonunique,attribute_type_qualifier,attribute_alignment_specifier) -> attribute_type_qualifier . list_tuple3_ge1(attribute_type_specifier_nonunique,attribute_type_qualifier,attribute_alignment_specifier) [ UNAME STAR SEMICOLON RPAREN LPAREN LNAME LBRACK GT COMMA COLON ]
##
## The known suffix of the stack is as follows:
## attribute_type_qualifier
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 176, spurious reduction of production attribute_type_qualifier -> type_qualifier
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ALIGNAS LPAREN CHAR ALIGNAS LPAREN STRING_LITERAL RPAREN VOID
##
## Ends in an error in state: 470.
##
## list_pair(attribute_type_qualifier,attribute_alignment_specifier) -> attribute_alignment_specifier . list_pair(attribute_type_qualifier,attribute_alignment_specifier) [ UNAME STAR SEMICOLON RPAREN LPAREN LNAME LBRACK GT COMMA COLON ]
## list_tuple3_ge1(attribute_type_specifier_nonunique,attribute_type_qualifier,attribute_alignment_specifier) -> attribute_alignment_specifier . list_tuple3_ge1(attribute_type_specifier_nonunique,attribute_type_qualifier,attribute_alignment_specifier) [ UNAME STAR SEMICOLON RPAREN LPAREN LNAME LBRACK GT COMMA COLON ]
##
## The known suffix of the stack is as follows:
## attribute_alignment_specifier
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 463, spurious reduction of production attribute_alignment_specifier -> alignment_specifier
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ALIGNAS LPAREN CONST STAR
##
## Ends in an error in state: 472.
##
## list_tuple3_eq1(attribute_type_specifier_unique,attribute_type_qualifier,attribute_alignment_specifier) -> attribute_type_qualifier . list_tuple3_eq1(attribute_type_specifier_unique,attribute_type_qualifier,attribute_alignment_specifier) [ UNAME STAR SEMICOLON RPAREN LPAREN LNAME LBRACK GT COMMA COLON ]
## list_tuple3_ge1(attribute_type_specifier_nonunique,attribute_type_qualifier,attribute_alignment_specifier) -> attribute_type_qualifier . list_tuple3_ge1(attribute_type_specifier_nonunique,attribute_type_qualifier,attribute_alignment_specifier) [ UNAME STAR SEMICOLON RPAREN LPAREN LNAME LBRACK GT COMMA COLON ]
##
## The known suffix of the stack is as follows:
## attribute_type_qualifier
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 176, spurious reduction of production attribute_type_qualifier -> type_qualifier
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ALIGNAS LPAREN ALIGNAS LPAREN STRING_LITERAL RPAREN STAR
##
## Ends in an error in state: 474.
##
## list_tuple3_eq1(attribute_type_specifier_unique,attribute_type_qualifier,attribute_alignment_specifier) -> attribute_alignment_specifier . list_tuple3_eq1(attribute_type_specifier_unique,attribute_type_qualifier,attribute_alignment_specifier) [ UNAME STAR SEMICOLON RPAREN LPAREN LNAME LBRACK GT COMMA COLON ]
## list_tuple3_ge1(attribute_type_specifier_nonunique,attribute_type_qualifier,attribute_alignment_specifier) -> attribute_alignment_specifier . list_tuple3_ge1(attribute_type_specifier_nonunique,attribute_type_qualifier,attribute_alignment_specifier) [ UNAME STAR SEMICOLON RPAREN LPAREN LNAME LBRACK GT COMMA COLON ]
##
## The known suffix of the stack is as follows:
## attribute_alignment_specifier
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 463, spurious reduction of production attribute_alignment_specifier -> alignment_specifier
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: STRUCT LBRACE LBRACK_LBRACK ALIGNAS RBRACK RBRACK WHILE
##
## Ends in an error in state: 476.
##
## attribute_specifier_sequence -> attribute_specifier_sequence . attribute_specifier [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF STRUCT SIGNED SHORT RESTRICT LONG LNAME LBRACK_LBRACK INT FLOAT ENUM DOUBLE CONST COMPLEX CHAR BOOL ATOMIC ALIGNAS ]
## struct_declaration -> attribute_specifier_sequence . specifier_qualifier_list option(struct_declarator_list) SEMICOLON boption(nonempty_list(SEMICOLON)) [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF STRUCT STATIC_ASSERT SIGNED SHORT RESTRICT RBRACE LONG LNAME LBRACK_LBRACK INT FLOAT ENUM DOUBLE CONST COMPLEX CHAR BOOL ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## attribute_specifier_sequence
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: STRUCT LBRACE LBRACK_LBRACK ALIGNAS RBRACK RBRACK BOOL GT
##
## Ends in an error in state: 477.
##
## struct_declaration -> attribute_specifier_sequence specifier_qualifier_list . option(struct_declarator_list) SEMICOLON boption(nonempty_list(SEMICOLON)) [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF STRUCT STATIC_ASSERT SIGNED SHORT RESTRICT RBRACE LONG LNAME LBRACK_LBRACK INT FLOAT ENUM DOUBLE CONST COMPLEX CHAR BOOL ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## attribute_specifier_sequence specifier_qualifier_list
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 170, spurious reduction of production attribute_type_specifier_unique -> type_specifier_unique
## In state 457, spurious reduction of production list_pair(attribute_type_qualifier,attribute_alignment_specifier) ->
## In state 458, spurious reduction of production list_tuple3_eq1(attribute_type_specifier_unique,attribute_type_qualifier,attribute_alignment_specifier) -> attribute_type_specifier_unique list_pair(attribute_type_qualifier,attribute_alignment_specifier)
## In state 456, spurious reduction of production specifier_qualifier_list -> list_tuple3_eq1(attribute_type_specifier_unique,attribute_type_qualifier,attribute_alignment_specifier)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: STRUCT LNAME TYPE WHILE
##
## Ends in an error in state: 482.
##
## option(general_identifier) -> general_identifier . [ LBRACE ]
## struct_or_union_specifier -> struct_or_union option(attribute_specifier_sequence) general_identifier . [ VOLATILE UNAME TYPEDEF THREAD_LOCAL STATIC STAR SEMICOLON RPAREN RESTRICT REGISTER NORETURN LPAREN LNAME LBRACK_LBRACK LBRACK INLINE GT EXTERN CONST COMMA COLON AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## struct_or_union option(attribute_specifier_sequence) general_identifier
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: STRUCT LBRACK_LBRACK ALIGNAS RBRACK RBRACK WHILE
##
## Ends in an error in state: 483.
##
## attribute_specifier_sequence -> attribute_specifier_sequence . attribute_specifier [ UNAME LNAME LBRACK_LBRACK LBRACE ]
## option(attribute_specifier_sequence) -> attribute_specifier_sequence . [ UNAME LNAME LBRACE ]
##
## The known suffix of the stack is as follows:
## attribute_specifier_sequence
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ALIGNAS LPAREN BOOL SEMICOLON
##
## Ends in an error in state: 484.
##
## type_name -> specifier_qualifier_list . option(abstract_declarator) [ RPAREN GT COMMA COLON ]
##
## The known suffix of the stack is as follows:
## specifier_qualifier_list
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 170, spurious reduction of production attribute_type_specifier_unique -> type_specifier_unique
## In state 457, spurious reduction of production list_pair(attribute_type_qualifier,attribute_alignment_specifier) ->
## In state 458, spurious reduction of production list_tuple3_eq1(attribute_type_specifier_unique,attribute_type_qualifier,attribute_alignment_specifier) -> attribute_type_specifier_unique list_pair(attribute_type_qualifier,attribute_alignment_specifier)
## In state 456, spurious reduction of production specifier_qualifier_list -> list_tuple3_eq1(attribute_type_specifier_unique,attribute_type_qualifier,attribute_alignment_specifier)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ALIGNAS LPAREN BOOL LPAREN WHILE
##
## Ends in an error in state: 485.
##
## direct_abstract_declarator -> LPAREN . save_context abstract_declarator RPAREN [ RPAREN LPAREN LBRACK GT COMMA COLON ]
## function_abstract_declarator -> LPAREN . option(scoped(parameter_type_list)) RPAREN [ RPAREN LPAREN LBRACK_LBRACK LBRACK GT COMMA COLON ]
##
## The known suffix of the stack is as follows:
## LPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ALIGNAS LPAREN BOOL STAR UNAME
##
## Ends in an error in state: 487.
##
## abstract_declarator -> pointer . [ RPAREN GT COMMA COLON ]
## abstract_declarator -> pointer . direct_abstract_declarator [ RPAREN GT COMMA COLON ]
##
## The known suffix of the stack is as follows:
## pointer
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 300, spurious reduction of production option(type_qualifier_list) ->
## In state 305, spurious reduction of production option(pointer) ->
## In state 307, spurious reduction of production pointer -> STAR option(type_qualifier_list) option(pointer)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ALIGNAS LPAREN ASSERT LPAREN STRING_LITERAL RBRACK
##
## Ends in an error in state: 490.
##
## postfix_expression -> ASSERT LPAREN assignment_expression . RPAREN [ STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_GT MINUS_EQ MINUS LT_LT_EQ LT_LT LT_EQ LT LPAREN LBRACK GT_GT_EQ GT_GT GT_EQ GT EQ_EQ EQ ELLIPSIS DOT COMMA COLON CARET_EQ CARET BANG_EQ AMPERSAND_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## ASSERT LPAREN assignment_expression
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 100, spurious reduction of production nonempty_list(string_literal_component) -> string_literal_component
## In state 104, spurious reduction of production string_literal -> nonempty_list(string_literal_component)
## In state 196, spurious reduction of production start_ignore ->
## In state 197, spurious reduction of production primary_expression -> string_literal start_ignore
## In state 198, spurious reduction of production postfix_expression -> primary_expression
## In state 199, spurious reduction of production unary_expression -> postfix_expression
## In state 205, spurious reduction of production cast_expression -> unary_expression
## In state 228, spurious reduction of production multiplicative_expression -> cast_expression
## In state 220, spurious reduction of production additive_expression -> multiplicative_expression
## In state 239, spurious reduction of production shift_expression -> additive_expression
## In state 218, spurious reduction of production relational_expression -> shift_expression
## In state 236, spurious reduction of production equality_expression -> relational_expression
## In state 254, spurious reduction of production _AND_expression -> equality_expression
## In state 262, spurious reduction of production exclusive_OR_expression -> _AND_expression
## In state 263, spurious reduction of production inclusive_OR_expression -> exclusive_OR_expression
## In state 264, spurious reduction of production logical_AND_expression -> inclusive_OR_expression
## In state 248, spurious reduction of production logical_OR_expression -> logical_AND_expression
## In state 246, spurious reduction of production conditional_expression -> logical_OR_expression
## In state 269, spurious reduction of production assignment_expression -> conditional_expression
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ALIGNAS LPAREN BMC_ASSUME LPAREN STRING_LITERAL RBRACK
##
## Ends in an error in state: 492.
##
## postfix_expression -> BMC_ASSUME LPAREN assignment_expression . RPAREN [ STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_GT MINUS_EQ MINUS LT_LT_EQ LT_LT LT_EQ LT LPAREN LBRACK GT_GT_EQ GT_GT GT_EQ GT EQ_EQ EQ ELLIPSIS DOT COMMA COLON CARET_EQ CARET BANG_EQ AMPERSAND_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## BMC_ASSUME LPAREN assignment_expression
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 100, spurious reduction of production nonempty_list(string_literal_component) -> string_literal_component
## In state 104, spurious reduction of production string_literal -> nonempty_list(string_literal_component)
## In state 196, spurious reduction of production start_ignore ->
## In state 197, spurious reduction of production primary_expression -> string_literal start_ignore
## In state 198, spurious reduction of production postfix_expression -> primary_expression
## In state 199, spurious reduction of production unary_expression -> postfix_expression
## In state 205, spurious reduction of production cast_expression -> unary_expression
## In state 228, spurious reduction of production multiplicative_expression -> cast_expression
## In state 220, spurious reduction of production additive_expression -> multiplicative_expression
## In state 239, spurious reduction of production shift_expression -> additive_expression
## In state 218, spurious reduction of production relational_expression -> shift_expression
## In state 236, spurious reduction of production equality_expression -> relational_expression
## In state 254, spurious reduction of production _AND_expression -> equality_expression
## In state 262, spurious reduction of production exclusive_OR_expression -> _AND_expression
## In state 263, spurious reduction of production inclusive_OR_expression -> exclusive_OR_expression
## In state 264, spurious reduction of production logical_AND_expression -> inclusive_OR_expression
## In state 248, spurious reduction of production logical_OR_expression -> logical_AND_expression
## In state 246, spurious reduction of production conditional_expression -> logical_OR_expression
## In state 269, spurious reduction of production assignment_expression -> conditional_expression
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ALIGNAS LPAREN BUILTIN_CHOOSE_EXPR LPAREN STRING_LITERAL RPAREN
##
## Ends in an error in state: 494.
##
## postfix_expression -> BUILTIN_CHOOSE_EXPR LPAREN assignment_expression . COMMA assignment_expression COMMA assignment_expression RPAREN [ STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_GT MINUS_EQ MINUS LT_LT_EQ LT_LT LT_EQ LT LPAREN LBRACK GT_GT_EQ GT_GT GT_EQ GT EQ_EQ EQ ELLIPSIS DOT COMMA COLON CARET_EQ CARET BANG_EQ AMPERSAND_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## BUILTIN_CHOOSE_EXPR LPAREN assignment_expression
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 100, spurious reduction of production nonempty_list(string_literal_component) -> string_literal_component
## In state 104, spurious reduction of production string_literal -> nonempty_list(string_literal_component)
## In state 196, spurious reduction of production start_ignore ->
## In state 197, spurious reduction of production primary_expression -> string_literal start_ignore
## In state 198, spurious reduction of production postfix_expression -> primary_expression
## In state 199, spurious reduction of production unary_expression -> postfix_expression
## In state 205, spurious reduction of production cast_expression -> unary_expression
## In state 228, spurious reduction of production multiplicative_expression -> cast_expression
## In state 220, spurious reduction of production additive_expression -> multiplicative_expression
## In state 239, spurious reduction of production shift_expression -> additive_expression
## In state 218, spurious reduction of production relational_expression -> shift_expression
## In state 236, spurious reduction of production equality_expression -> relational_expression
## In state 254, spurious reduction of production _AND_expression -> equality_expression
## In state 262, spurious reduction of production exclusive_OR_expression -> _AND_expression
## In state 263, spurious reduction of production inclusive_OR_expression -> exclusive_OR_expression
## In state 264, spurious reduction of production logical_AND_expression -> inclusive_OR_expression
## In state 248, spurious reduction of production logical_OR_expression -> logical_AND_expression
## In state 246, spurious reduction of production conditional_expression -> logical_OR_expression
## In state 269, spurious reduction of production assignment_expression -> conditional_expression
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ALIGNAS LPAREN BUILTIN_CHOOSE_EXPR LPAREN STRING_LITERAL COMMA STRING_LITERAL RPAREN
##
## Ends in an error in state: 496.
##
## postfix_expression -> BUILTIN_CHOOSE_EXPR LPAREN assignment_expression COMMA assignment_expression . COMMA assignment_expression RPAREN [ STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_GT MINUS_EQ MINUS LT_LT_EQ LT_LT LT_EQ LT LPAREN LBRACK GT_GT_EQ GT_GT GT_EQ GT EQ_EQ EQ ELLIPSIS DOT COMMA COLON CARET_EQ CARET BANG_EQ AMPERSAND_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## BUILTIN_CHOOSE_EXPR LPAREN assignment_expression COMMA assignment_expression
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 100, spurious reduction of production nonempty_list(string_literal_component) -> string_literal_component
## In state 104, spurious reduction of production string_literal -> nonempty_list(string_literal_component)
## In state 196, spurious reduction of production start_ignore ->
## In state 197, spurious reduction of production primary_expression -> string_literal start_ignore
## In state 198, spurious reduction of production postfix_expression -> primary_expression
## In state 199, spurious reduction of production unary_expression -> postfix_expression
## In state 205, spurious reduction of production cast_expression -> unary_expression
## In state 228, spurious reduction of production multiplicative_expression -> cast_expression
## In state 220, spurious reduction of production additive_expression -> multiplicative_expression
## In state 239, spurious reduction of production shift_expression -> additive_expression
## In state 218, spurious reduction of production relational_expression -> shift_expression
## In state 236, spurious reduction of production equality_expression -> relational_expression
## In state 254, spurious reduction of production _AND_expression -> equality_expression
## In state 262, spurious reduction of production exclusive_OR_expression -> _AND_expression
## In state 263, spurious reduction of production inclusive_OR_expression -> exclusive_OR_expression
## In state 264, spurious reduction of production logical_AND_expression -> inclusive_OR_expression
## In state 248, spurious reduction of production logical_OR_expression -> logical_AND_expression
## In state 246, spurious reduction of production conditional_expression -> logical_OR_expression
## In state 269, spurious reduction of production assignment_expression -> conditional_expression
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ALIGNAS LPAREN BUILTIN_CHOOSE_EXPR LPAREN STRING_LITERAL COMMA STRING_LITERAL COMMA STRING_LITERAL RBRACK
##
## Ends in an error in state: 498.
##
## postfix_expression -> BUILTIN_CHOOSE_EXPR LPAREN assignment_expression COMMA assignment_expression COMMA assignment_expression . RPAREN [ STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_GT MINUS_EQ MINUS LT_LT_EQ LT_LT LT_EQ LT LPAREN LBRACK GT_GT_EQ GT_GT GT_EQ GT EQ_EQ EQ ELLIPSIS DOT COMMA COLON CARET_EQ CARET BANG_EQ AMPERSAND_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## BUILTIN_CHOOSE_EXPR LPAREN assignment_expression COMMA assignment_expression COMMA assignment_expression
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 100, spurious reduction of production nonempty_list(string_literal_component) -> string_literal_component
## In state 104, spurious reduction of production string_literal -> nonempty_list(string_literal_component)
## In state 196, spurious reduction of production start_ignore ->
## In state 197, spurious reduction of production primary_expression -> string_literal start_ignore
## In state 198, spurious reduction of production postfix_expression -> primary_expression
## In state 199, spurious reduction of production unary_expression -> postfix_expression
## In state 205, spurious reduction of production cast_expression -> unary_expression
## In state 228, spurious reduction of production multiplicative_expression -> cast_expression
## In state 220, spurious reduction of production additive_expression -> multiplicative_expression
## In state 239, spurious reduction of production shift_expression -> additive_expression
## In state 218, spurious reduction of production relational_expression -> shift_expression
## In state 236, spurious reduction of production equality_expression -> relational_expression
## In state 254, spurious reduction of production _AND_expression -> equality_expression
## In state 262, spurious reduction of production exclusive_OR_expression -> _AND_expression
## In state 263, spurious reduction of production inclusive_OR_expression -> exclusive_OR_expression
## In state 264, spurious reduction of production logical_AND_expression -> inclusive_OR_expression
## In state 248, spurious reduction of production logical_OR_expression -> logical_AND_expression
## In state 246, spurious reduction of production conditional_expression -> logical_OR_expression
## In state 269, spurious reduction of production assignment_expression -> conditional_expression
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ALIGNAS LPAREN BOOL GT
##
## Ends in an error in state: 500.
##
## alignment_specifier -> ALIGNAS LPAREN type_name . RPAREN [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NORETURN LPAREN LONG LNAME LBRACK_LBRACK LBRACK INT INLINE GT FLOAT EXTERN ENUM DOUBLE CONST COMPLEX COMMA COLON CHAR BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## ALIGNAS LPAREN type_name
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 170, spurious reduction of production attribute_type_specifier_unique -> type_specifier_unique
## In state 457, spurious reduction of production list_pair(attribute_type_qualifier,attribute_alignment_specifier) ->
## In state 458, spurious reduction of production list_tuple3_eq1(attribute_type_specifier_unique,attribute_type_qualifier,attribute_alignment_specifier) -> attribute_type_specifier_unique list_pair(attribute_type_qualifier,attribute_alignment_specifier)
## In state 456, spurious reduction of production specifier_qualifier_list -> list_tuple3_eq1(attribute_type_specifier_unique,attribute_type_qualifier,attribute_alignment_specifier)
## In state 484, spurious reduction of production option(abstract_declarator) ->
## In state 488, spurious reduction of production type_name -> specifier_qualifier_list option(abstract_declarator)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ALIGNAS LPAREN STRING_LITERAL RBRACK
##
## Ends in an error in state: 502.
##
## alignment_specifier -> ALIGNAS LPAREN constant_expression . RPAREN [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NORETURN LPAREN LONG LNAME LBRACK_LBRACK LBRACK INT INLINE GT FLOAT EXTERN ENUM DOUBLE CONST COMPLEX COMMA COLON CHAR BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## ALIGNAS LPAREN constant_expression
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 100, spurious reduction of production nonempty_list(string_literal_component) -> string_literal_component
## In state 104, spurious reduction of production string_literal -> nonempty_list(string_literal_component)
## In state 196, spurious reduction of production start_ignore ->
## In state 197, spurious reduction of production primary_expression -> string_literal start_ignore
## In state 198, spurious reduction of production postfix_expression -> primary_expression
## In state 199, spurious reduction of production unary_expression -> postfix_expression
## In state 195, spurious reduction of production cast_expression -> unary_expression
## In state 228, spurious reduction of production multiplicative_expression -> cast_expression
## In state 220, spurious reduction of production additive_expression -> multiplicative_expression
## In state 239, spurious reduction of production shift_expression -> additive_expression
## In state 218, spurious reduction of production relational_expression -> shift_expression
## In state 236, spurious reduction of production equality_expression -> relational_expression
## In state 254, spurious reduction of production _AND_expression -> equality_expression
## In state 262, spurious reduction of production exclusive_OR_expression -> _AND_expression
## In state 263, spurious reduction of production inclusive_OR_expression -> exclusive_OR_expression
## In state 264, spurious reduction of production logical_AND_expression -> inclusive_OR_expression
## In state 248, spurious reduction of production logical_OR_expression -> logical_AND_expression
## In state 246, spurious reduction of production conditional_expression -> logical_OR_expression
## In state 294, spurious reduction of production constant_expression -> conditional_expression
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ATOMIC LPAREN BOOL GT
##
## Ends in an error in state: 504.
##
## atomic_type_specifier -> ATOMIC LPAREN type_name . RPAREN [ VOLATILE UNAME TYPEDEF THREAD_LOCAL STATIC STAR SEMICOLON RPAREN RESTRICT REGISTER NORETURN LPAREN LNAME LBRACK_LBRACK LBRACK INLINE GT EXTERN CONST COMMA COLON AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## ATOMIC LPAREN type_name
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 170, spurious reduction of production attribute_type_specifier_unique -> type_specifier_unique
## In state 457, spurious reduction of production list_pair(attribute_type_qualifier,attribute_alignment_specifier) ->
## In state 458, spurious reduction of production list_tuple3_eq1(attribute_type_specifier_unique,attribute_type_qualifier,attribute_alignment_specifier) -> attribute_type_specifier_unique list_pair(attribute_type_qualifier,attribute_alignment_specifier)
## In state 456, spurious reduction of production specifier_qualifier_list -> list_tuple3_eq1(attribute_type_specifier_unique,attribute_type_qualifier,attribute_alignment_specifier)
## In state 484, spurious reduction of production option(abstract_declarator) ->
## In state 488, spurious reduction of production type_name -> specifier_qualifier_list option(abstract_declarator)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ALIGNAS LPAREN BUILTIN_TYPES_COMPATIBLE_P LPAREN BOOL GT
##
## Ends in an error in state: 506.
##
## postfix_expression -> BUILTIN_TYPES_COMPATIBLE_P LPAREN type_name . COMMA type_name RPAREN [ STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_GT MINUS_EQ MINUS LT_LT_EQ LT_LT LT_EQ LT LPAREN LBRACK GT_GT_EQ GT_GT GT_EQ GT EQ_EQ EQ ELLIPSIS DOT COMMA COLON CARET_EQ CARET BANG_EQ AMPERSAND_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## BUILTIN_TYPES_COMPATIBLE_P LPAREN type_name
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 170, spurious reduction of production attribute_type_specifier_unique -> type_specifier_unique
## In state 457, spurious reduction of production list_pair(attribute_type_qualifier,attribute_alignment_specifier) ->
## In state 458, spurious reduction of production list_tuple3_eq1(attribute_type_specifier_unique,attribute_type_qualifier,attribute_alignment_specifier) -> attribute_type_specifier_unique list_pair(attribute_type_qualifier,attribute_alignment_specifier)
## In state 456, spurious reduction of production specifier_qualifier_list -> list_tuple3_eq1(attribute_type_specifier_unique,attribute_type_qualifier,attribute_alignment_specifier)
## In state 484, spurious reduction of production option(abstract_declarator) ->
## In state 488, spurious reduction of production type_name -> specifier_qualifier_list option(abstract_declarator)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ALIGNAS LPAREN BUILTIN_TYPES_COMPATIBLE_P LPAREN BOOL COMMA BOOL GT
##
## Ends in an error in state: 508.
##
## postfix_expression -> BUILTIN_TYPES_COMPATIBLE_P LPAREN type_name COMMA type_name . RPAREN [ STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_GT MINUS_EQ MINUS LT_LT_EQ LT_LT LT_EQ LT LPAREN LBRACK GT_GT_EQ GT_GT GT_EQ GT EQ_EQ EQ ELLIPSIS DOT COMMA COLON CARET_EQ CARET BANG_EQ AMPERSAND_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## BUILTIN_TYPES_COMPATIBLE_P LPAREN type_name COMMA type_name
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 170, spurious reduction of production attribute_type_specifier_unique -> type_specifier_unique
## In state 457, spurious reduction of production list_pair(attribute_type_qualifier,attribute_alignment_specifier) ->
## In state 458, spurious reduction of production list_tuple3_eq1(attribute_type_specifier_unique,attribute_type_qualifier,attribute_alignment_specifier) -> attribute_type_specifier_unique list_pair(attribute_type_qualifier,attribute_alignment_specifier)
## In state 456, spurious reduction of production specifier_qualifier_list -> list_tuple3_eq1(attribute_type_specifier_unique,attribute_type_qualifier,attribute_alignment_specifier)
## In state 484, spurious reduction of production option(abstract_declarator) ->
## In state 488, spurious reduction of production type_name -> specifier_qualifier_list option(abstract_declarator)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ALIGNAS LPAREN GENERIC LPAREN STRING_LITERAL RPAREN
##
## Ends in an error in state: 510.
##
## generic_selection -> GENERIC LPAREN assignment_expression . COMMA generic_assoc_list RPAREN [ STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_GT MINUS_EQ MINUS LT_LT_EQ LT_LT LT_EQ LT LPAREN LBRACK GT_GT_EQ GT_GT GT_EQ GT EQ_EQ EQ ELLIPSIS DOT COMMA COLON CARET_EQ CARET BANG_EQ AMPERSAND_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## GENERIC LPAREN assignment_expression
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 100, spurious reduction of production nonempty_list(string_literal_component) -> string_literal_component
## In state 104, spurious reduction of production string_literal -> nonempty_list(string_literal_component)
## In state 196, spurious reduction of production start_ignore ->
## In state 197, spurious reduction of production primary_expression -> string_literal start_ignore
## In state 198, spurious reduction of production postfix_expression -> primary_expression
## In state 199, spurious reduction of production unary_expression -> postfix_expression
## In state 205, spurious reduction of production cast_expression -> unary_expression
## In state 228, spurious reduction of production multiplicative_expression -> cast_expression
## In state 220, spurious reduction of production additive_expression -> multiplicative_expression
## In state 239, spurious reduction of production shift_expression -> additive_expression
## In state 218, spurious reduction of production relational_expression -> shift_expression
## In state 236, spurious reduction of production equality_expression -> relational_expression
## In state 254, spurious reduction of production _AND_expression -> equality_expression
## In state 262, spurious reduction of production exclusive_OR_expression -> _AND_expression
## In state 263, spurious reduction of production inclusive_OR_expression -> exclusive_OR_expression
## In state 264, spurious reduction of production logical_AND_expression -> inclusive_OR_expression
## In state 248, spurious reduction of production logical_OR_expression -> logical_AND_expression
## In state 246, spurious reduction of production conditional_expression -> logical_OR_expression
## In state 269, spurious reduction of production assignment_expression -> conditional_expression
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ALIGNAS LPAREN GENERIC LPAREN STRING_LITERAL COMMA BOOL GT
##
## Ends in an error in state: 515.
##
## generic_association -> type_name . COLON assignment_expression [ RPAREN COMMA ]
##
## The known suffix of the stack is as follows:
## type_name
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 170, spurious reduction of production attribute_type_specifier_unique -> type_specifier_unique
## In state 457, spurious reduction of production list_pair(attribute_type_qualifier,attribute_alignment_specifier) ->
## In state 458, spurious reduction of production list_tuple3_eq1(attribute_type_specifier_unique,attribute_type_qualifier,attribute_alignment_specifier) -> attribute_type_specifier_unique list_pair(attribute_type_qualifier,attribute_alignment_specifier)
## In state 456, spurious reduction of production specifier_qualifier_list -> list_tuple3_eq1(attribute_type_specifier_unique,attribute_type_qualifier,attribute_alignment_specifier)
## In state 484, spurious reduction of production option(abstract_declarator) ->
## In state 488, spurious reduction of production type_name -> specifier_qualifier_list option(abstract_declarator)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ALIGNAS LPAREN GENERIC LPAREN STRING_LITERAL COMMA BOOL COLON STRING_LITERAL RBRACK
##
## Ends in an error in state: 519.
##
## generic_assoc_list -> generic_assoc_list . COMMA generic_association [ RPAREN COMMA ]
## generic_selection -> GENERIC LPAREN assignment_expression COMMA generic_assoc_list . RPAREN [ STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_GT MINUS_EQ MINUS LT_LT_EQ LT_LT LT_EQ LT LPAREN LBRACK GT_GT_EQ GT_GT GT_EQ GT EQ_EQ EQ ELLIPSIS DOT COMMA COLON CARET_EQ CARET BANG_EQ AMPERSAND_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## GENERIC LPAREN assignment_expression COMMA generic_assoc_list
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 100, spurious reduction of production nonempty_list(string_literal_component) -> string_literal_component
## In state 104, spurious reduction of production string_literal -> nonempty_list(string_literal_component)
## In state 196, spurious reduction of production start_ignore ->
## In state 197, spurious reduction of production primary_expression -> string_literal start_ignore
## In state 198, spurious reduction of production postfix_expression -> primary_expression
## In state 199, spurious reduction of production unary_expression -> postfix_expression
## In state 205, spurious reduction of production cast_expression -> unary_expression
## In state 228, spurious reduction of production multiplicative_expression -> cast_expression
## In state 220, spurious reduction of production additive_expression -> multiplicative_expression
## In state 239, spurious reduction of production shift_expression -> additive_expression
## In state 218, spurious reduction of production relational_expression -> shift_expression
## In state 236, spurious reduction of production equality_expression -> relational_expression
## In state 254, spurious reduction of production _AND_expression -> equality_expression
## In state 262, spurious reduction of production exclusive_OR_expression -> _AND_expression
## In state 263, spurious reduction of production inclusive_OR_expression -> exclusive_OR_expression
## In state 264, spurious reduction of production logical_AND_expression -> inclusive_OR_expression
## In state 248, spurious reduction of production logical_OR_expression -> logical_AND_expression
## In state 246, spurious reduction of production conditional_expression -> logical_OR_expression
## In state 269, spurious reduction of production assignment_expression -> conditional_expression
## In state 517, spurious reduction of production generic_association -> type_name COLON assignment_expression
## In state 518, spurious reduction of production generic_assoc_list -> generic_association
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ALIGNAS LPAREN LPAREN BOOL GT
##
## Ends in an error in state: 523.
##
## cast_expression -> LPAREN type_name . RPAREN cast_expression [ STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_EQ MINUS LT_LT_EQ LT_LT LT_EQ LT GT_GT_EQ GT_GT GT_EQ GT EQ_EQ EQ ELLIPSIS COMMA COLON CARET_EQ CARET BANG_EQ AMPERSAND_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## postfix_expression -> LPAREN type_name . RPAREN LBRACE initializer_list option(COMMA) RBRACE [ STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_GT MINUS_EQ MINUS LT_LT_EQ LT_LT LT_EQ LT LPAREN LBRACK GT_GT_EQ GT_GT GT_EQ GT EQ_EQ EQ ELLIPSIS DOT COMMA COLON CARET_EQ CARET BANG_EQ AMPERSAND_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## LPAREN type_name
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 170, spurious reduction of production attribute_type_specifier_unique -> type_specifier_unique
## In state 457, spurious reduction of production list_pair(attribute_type_qualifier,attribute_alignment_specifier) ->
## In state 458, spurious reduction of production list_tuple3_eq1(attribute_type_specifier_unique,attribute_type_qualifier,attribute_alignment_specifier) -> attribute_type_specifier_unique list_pair(attribute_type_qualifier,attribute_alignment_specifier)
## In state 456, spurious reduction of production specifier_qualifier_list -> list_tuple3_eq1(attribute_type_specifier_unique,attribute_type_qualifier,attribute_alignment_specifier)
## In state 484, spurious reduction of production option(abstract_declarator) ->
## In state 488, spurious reduction of production type_name -> specifier_qualifier_list option(abstract_declarator)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ALIGNAS LPAREN LPAREN BOOL RPAREN WHILE
##
## Ends in an error in state: 524.
##
## cast_expression -> LPAREN type_name RPAREN . cast_expression [ STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_EQ MINUS LT_LT_EQ LT_LT LT_EQ LT GT_GT_EQ GT_GT GT_EQ GT EQ_EQ EQ ELLIPSIS COMMA COLON CARET_EQ CARET BANG_EQ AMPERSAND_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## postfix_expression -> LPAREN type_name RPAREN . LBRACE initializer_list option(COMMA) RBRACE [ STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_GT MINUS_EQ MINUS LT_LT_EQ LT_LT LT_EQ LT LPAREN LBRACK GT_GT_EQ GT_GT GT_EQ GT EQ_EQ EQ ELLIPSIS DOT COMMA COLON CARET_EQ CARET BANG_EQ AMPERSAND_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## LPAREN type_name RPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: BOOL LNAME TYPE EQ LBRACE LBRACK STRING_LITERAL RPAREN
##
## Ends in an error in state: 527.
##
## designator -> LBRACK constant_expression . RBRACK [ LBRACK EQ DOT ]
##
## The known suffix of the stack is as follows:
## LBRACK constant_expression
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 100, spurious reduction of production nonempty_list(string_literal_component) -> string_literal_component
## In state 104, spurious reduction of production string_literal -> nonempty_list(string_literal_component)
## In state 196, spurious reduction of production start_ignore ->
## In state 197, spurious reduction of production primary_expression -> string_literal start_ignore
## In state 198, spurious reduction of production postfix_expression -> primary_expression
## In state 199, spurious reduction of production unary_expression -> postfix_expression
## In state 195, spurious reduction of production cast_expression -> unary_expression
## In state 228, spurious reduction of production multiplicative_expression -> cast_expression
## In state 220, spurious reduction of production additive_expression -> multiplicative_expression
## In state 239, spurious reduction of production shift_expression -> additive_expression
## In state 218, spurious reduction of production relational_expression -> shift_expression
## In state 236, spurious reduction of production equality_expression -> relational_expression
## In state 254, spurious reduction of production _AND_expression -> equality_expression
## In state 262, spurious reduction of production exclusive_OR_expression -> _AND_expression
## In state 263, spurious reduction of production inclusive_OR_expression -> exclusive_OR_expression
## In state 264, spurious reduction of production logical_AND_expression -> inclusive_OR_expression
## In state 248, spurious reduction of production logical_OR_expression -> logical_AND_expression
## In state 246, spurious reduction of production conditional_expression -> logical_OR_expression
## In state 294, spurious reduction of production constant_expression -> conditional_expression
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: BOOL LNAME TYPE EQ LBRACE WHILE
##
## Ends in an error in state: 532.
##
## initializer_ -> LBRACE . initializer_list RBRACE [ SEMICOLON RBRACE COMMA ]
## initializer_ -> LBRACE . initializer_list COMMA RBRACE [ SEMICOLON RBRACE COMMA ]
##
## The known suffix of the stack is as follows:
## LBRACE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: BOOL LNAME TYPE EQ LBRACE STRING_LITERAL RPAREN
##
## Ends in an error in state: 533.
##
## initializer_ -> LBRACE initializer_list . RBRACE [ SEMICOLON RBRACE COMMA ]
## initializer_ -> LBRACE initializer_list . COMMA RBRACE [ SEMICOLON RBRACE COMMA ]
## initializer_list -> initializer_list . COMMA option(designation) initializer_ [ RBRACE COMMA ]
##
## The known suffix of the stack is as follows:
## LBRACE initializer_list
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 100, spurious reduction of production nonempty_list(string_literal_component) -> string_literal_component
## In state 104, spurious reduction of production string_literal -> nonempty_list(string_literal_component)
## In state 196, spurious reduction of production start_ignore ->
## In state 197, spurious reduction of production primary_expression -> string_literal start_ignore
## In state 198, spurious reduction of production postfix_expression -> primary_expression
## In state 199, spurious reduction of production unary_expression -> postfix_expression
## In state 205, spurious reduction of production cast_expression -> unary_expression
## In state 228, spurious reduction of production multiplicative_expression -> cast_expression
## In state 220, spurious reduction of production additive_expression -> multiplicative_expression
## In state 239, spurious reduction of production shift_expression -> additive_expression
## In state 218, spurious reduction of production relational_expression -> shift_expression
## In state 236, spurious reduction of production equality_expression -> relational_expression
## In state 254, spurious reduction of production _AND_expression -> equality_expression
## In state 262, spurious reduction of production exclusive_OR_expression -> _AND_expression
## In state 263, spurious reduction of production inclusive_OR_expression -> exclusive_OR_expression
## In state 264, spurious reduction of production logical_AND_expression -> inclusive_OR_expression
## In state 248, spurious reduction of production logical_OR_expression -> logical_AND_expression
## In state 246, spurious reduction of production conditional_expression -> logical_OR_expression
## In state 269, spurious reduction of production assignment_expression -> conditional_expression
## In state 539, spurious reduction of production initializer_ -> assignment_expression
## In state 545, spurious reduction of production initializer_list -> option(designation) initializer_
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: BOOL LNAME TYPE EQ LBRACE STRING_LITERAL COMMA WHILE
##
## Ends in an error in state: 535.
##
## initializer_ -> LBRACE initializer_list COMMA . RBRACE [ SEMICOLON RBRACE COMMA ]
## initializer_list -> initializer_list COMMA . option(designation) initializer_ [ RBRACE COMMA ]
##
## The known suffix of the stack is as follows:
## LBRACE initializer_list COMMA
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: BOOL LNAME TYPE EQ LBRACE DOT LNAME TYPE WHILE
##
## Ends in an error in state: 540.
##
## designation -> designator_list . EQ [ VA_START VA_END VA_COPY VA_ARG UNAME TILDE STRING_LITERAL STAR SIZEOF PRINT_TYPE PLUS_PLUS PLUS OFFSETOF MINUS_MINUS MINUS LPAREN LNAME LBRACE GENERIC CONSTANT BUILTIN_TYPES_COMPATIBLE_P BUILTIN_CHOOSE_EXPR BMC_ASSUME BANG ASSERT AMPERSAND ALIGNOF ]
## designator_list -> designator_list . designator [ LBRACK EQ DOT ]
##
## The known suffix of the stack is as follows:
## designator_list
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ALIGNAS LPAREN LPAREN BOOL RPAREN LBRACE STRING_LITERAL RPAREN
##
## Ends in an error in state: 546.
##
## initializer_list -> initializer_list . COMMA option(designation) initializer_ [ RBRACE COMMA ]
## postfix_expression -> LPAREN type_name RPAREN LBRACE initializer_list . option(COMMA) RBRACE [ STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_GT MINUS_EQ MINUS LT_LT_EQ LT_LT LT_EQ LT LPAREN LBRACK GT_GT_EQ GT_GT GT_EQ GT EQ_EQ EQ ELLIPSIS DOT COMMA COLON CARET_EQ CARET BANG_EQ AMPERSAND_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## LPAREN type_name RPAREN LBRACE initializer_list
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 100, spurious reduction of production nonempty_list(string_literal_component) -> string_literal_component
## In state 104, spurious reduction of production string_literal -> nonempty_list(string_literal_component)
## In state 196, spurious reduction of production start_ignore ->
## In state 197, spurious reduction of production primary_expression -> string_literal start_ignore
## In state 198, spurious reduction of production postfix_expression -> primary_expression
## In state 199, spurious reduction of production unary_expression -> postfix_expression
## In state 205, spurious reduction of production cast_expression -> unary_expression
## In state 228, spurious reduction of production multiplicative_expression -> cast_expression
## In state 220, spurious reduction of production additive_expression -> multiplicative_expression
## In state 239, spurious reduction of production shift_expression -> additive_expression
## In state 218, spurious reduction of production relational_expression -> shift_expression
## In state 236, spurious reduction of production equality_expression -> relational_expression
## In state 254, spurious reduction of production _AND_expression -> equality_expression
## In state 262, spurious reduction of production exclusive_OR_expression -> _AND_expression
## In state 263, spurious reduction of production inclusive_OR_expression -> exclusive_OR_expression
## In state 264, spurious reduction of production logical_AND_expression -> inclusive_OR_expression
## In state 248, spurious reduction of production logical_OR_expression -> logical_AND_expression
## In state 246, spurious reduction of production conditional_expression -> logical_OR_expression
## In state 269, spurious reduction of production assignment_expression -> conditional_expression
## In state 539, spurious reduction of production initializer_ -> assignment_expression
## In state 545, spurious reduction of production initializer_list -> option(designation) initializer_
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ALIGNAS LPAREN LPAREN BOOL RPAREN LBRACE STRING_LITERAL COMMA WHILE
##
## Ends in an error in state: 547.
##
## initializer_list -> initializer_list COMMA . option(designation) initializer_ [ RBRACE COMMA ]
## option(COMMA) -> COMMA . [ RBRACE ]
##
## The known suffix of the stack is as follows:
## initializer_list COMMA
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ALIGNAS LPAREN LPAREN LBRACE ASM WHILE
##
## Ends in an error in state: 555.
##
## asm_statement -> ASM . list(asm_qualifier) LPAREN string_literal RPAREN [ WHILE VOLATILE VOID VA_START VA_END VA_COPY VA_ARG UNSIGNED UNION UNAME TYPEOF TYPEDEF TILDE THREAD_LOCAL SWITCH STRUCT STRING_LITERAL STATIC_ASSERT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACES RBRACE PRINT_TYPE PLUS_PLUS PLUS PIPES OFFSETOF NORETURN MINUS_MINUS MINUS LPAREN LONG LNAME LBRACK_LBRACK LBRACES LBRACE INT INLINE IF GOTO GENERIC FOR FLOAT EXTERN ENUM ELSE DOUBLE DO DEFAULT CONTINUE CONSTANT CONST COMPLEX CHAR CERB_MAGIC CASE BUILTIN_TYPES_COMPATIBLE_P BUILTIN_CHOOSE_EXPR BREAK BOOL BMC_ASSUME BANG AUTO ATOMIC ASSERT ASM AMPERSAND ALIGNOF ALIGNAS ]
## asm_statement -> ASM . list(asm_qualifier) LPAREN string_literal asm_with_output RPAREN [ WHILE VOLATILE VOID VA_START VA_END VA_COPY VA_ARG UNSIGNED UNION UNAME TYPEOF TYPEDEF TILDE THREAD_LOCAL SWITCH STRUCT STRING_LITERAL STATIC_ASSERT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACES RBRACE PRINT_TYPE PLUS_PLUS PLUS PIPES OFFSETOF NORETURN MINUS_MINUS MINUS LPAREN LONG LNAME LBRACK_LBRACK LBRACES LBRACE INT INLINE IF GOTO GENERIC FOR FLOAT EXTERN ENUM ELSE DOUBLE DO DEFAULT CONTINUE CONSTANT CONST COMPLEX CHAR CERB_MAGIC CASE BUILTIN_TYPES_COMPATIBLE_P BUILTIN_CHOOSE_EXPR BREAK BOOL BMC_ASSUME BANG AUTO ATOMIC ASSERT ASM AMPERSAND ALIGNOF ALIGNAS ]
##
## The known suffix of the stack is as follows:
## ASM
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ALIGNAS LPAREN LPAREN LBRACE ASM LPAREN WHILE
##
## Ends in an error in state: 561.
##
## asm_statement -> ASM list(asm_qualifier) LPAREN . string_literal RPAREN [ WHILE VOLATILE VOID VA_START VA_END VA_COPY VA_ARG UNSIGNED UNION UNAME TYPEOF TYPEDEF TILDE THREAD_LOCAL SWITCH STRUCT STRING_LITERAL STATIC_ASSERT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACES RBRACE PRINT_TYPE PLUS_PLUS PLUS PIPES OFFSETOF NORETURN MINUS_MINUS MINUS LPAREN LONG LNAME LBRACK_LBRACK LBRACES LBRACE INT INLINE IF GOTO GENERIC FOR FLOAT EXTERN ENUM ELSE DOUBLE DO DEFAULT CONTINUE CONSTANT CONST COMPLEX CHAR CERB_MAGIC CASE BUILTIN_TYPES_COMPATIBLE_P BUILTIN_CHOOSE_EXPR BREAK BOOL BMC_ASSUME BANG AUTO ATOMIC ASSERT ASM AMPERSAND ALIGNOF ALIGNAS ]
## asm_statement -> ASM list(asm_qualifier) LPAREN . string_literal asm_with_output RPAREN [ WHILE VOLATILE VOID VA_START VA_END VA_COPY VA_ARG UNSIGNED UNION UNAME TYPEOF TYPEDEF TILDE THREAD_LOCAL SWITCH STRUCT STRING_LITERAL STATIC_ASSERT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACES RBRACE PRINT_TYPE PLUS_PLUS PLUS PIPES OFFSETOF NORETURN MINUS_MINUS MINUS LPAREN LONG LNAME LBRACK_LBRACK LBRACES LBRACE INT INLINE IF GOTO GENERIC FOR FLOAT EXTERN ENUM ELSE DOUBLE DO DEFAULT CONTINUE CONSTANT CONST COMPLEX CHAR CERB_MAGIC CASE BUILTIN_TYPES_COMPATIBLE_P BUILTIN_CHOOSE_EXPR BREAK BOOL BMC_ASSUME BANG AUTO ATOMIC ASSERT ASM AMPERSAND ALIGNOF ALIGNAS ]
##
## The known suffix of the stack is as follows:
## ASM list(asm_qualifier) LPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ALIGNAS LPAREN LPAREN LBRACE ASM LPAREN STRING_LITERAL STAR_EQ
##
## Ends in an error in state: 562.
##
## asm_statement -> ASM list(asm_qualifier) LPAREN string_literal . RPAREN [ WHILE VOLATILE VOID VA_START VA_END VA_COPY VA_ARG UNSIGNED UNION UNAME TYPEOF TYPEDEF TILDE THREAD_LOCAL SWITCH STRUCT STRING_LITERAL STATIC_ASSERT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACES RBRACE PRINT_TYPE PLUS_PLUS PLUS PIPES OFFSETOF NORETURN MINUS_MINUS MINUS LPAREN LONG LNAME LBRACK_LBRACK LBRACES LBRACE INT INLINE IF GOTO GENERIC FOR FLOAT EXTERN ENUM ELSE DOUBLE DO DEFAULT CONTINUE CONSTANT CONST COMPLEX CHAR CERB_MAGIC CASE BUILTIN_TYPES_COMPATIBLE_P BUILTIN_CHOOSE_EXPR BREAK BOOL BMC_ASSUME BANG AUTO ATOMIC ASSERT ASM AMPERSAND ALIGNOF ALIGNAS ]
## asm_statement -> ASM list(asm_qualifier) LPAREN string_literal . asm_with_output RPAREN [ WHILE VOLATILE VOID VA_START VA_END VA_COPY VA_ARG UNSIGNED UNION UNAME TYPEOF TYPEDEF TILDE THREAD_LOCAL SWITCH STRUCT STRING_LITERAL STATIC_ASSERT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACES RBRACE PRINT_TYPE PLUS_PLUS PLUS PIPES OFFSETOF NORETURN MINUS_MINUS MINUS LPAREN LONG LNAME LBRACK_LBRACK LBRACES LBRACE INT INLINE IF GOTO GENERIC FOR FLOAT EXTERN ENUM ELSE DOUBLE DO DEFAULT CONTINUE CONSTANT CONST COMPLEX CHAR CERB_MAGIC CASE BUILTIN_TYPES_COMPATIBLE_P BUILTIN_CHOOSE_EXPR BREAK BOOL BMC_ASSUME BANG AUTO ATOMIC ASSERT ASM AMPERSAND ALIGNOF ALIGNAS ]
##
## The known suffix of the stack is as follows:
## ASM list(asm_qualifier) LPAREN string_literal
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 100, spurious reduction of production nonempty_list(string_literal_component) -> string_literal_component
## In state 104, spurious reduction of production string_literal -> nonempty_list(string_literal_component)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ALIGNAS LPAREN LPAREN LBRACE ASM LPAREN STRING_LITERAL COLON LBRACK WHILE
##
## Ends in an error in state: 565.
##
## asm_output_input -> LBRACK . UNAME VARIABLE RBRACK string_literal LPAREN expression RPAREN [ RPAREN COMMA COLON ]
## asm_output_input -> LBRACK . LNAME VARIABLE RBRACK string_literal LPAREN expression RPAREN [ RPAREN COMMA COLON ]
##
## The known suffix of the stack is as follows:
## LBRACK
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ALIGNAS LPAREN LPAREN LBRACE ASM LPAREN STRING_LITERAL COLON LBRACK UNAME VARIABLE RBRACK STRING_LITERAL STAR_EQ
##
## Ends in an error in state: 569.
##
## asm_output_input -> LBRACK UNAME VARIABLE RBRACK string_literal . LPAREN expression RPAREN [ RPAREN COMMA COLON ]
##
## The known suffix of the stack is as follows:
## LBRACK UNAME VARIABLE RBRACK string_literal
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 100, spurious reduction of production nonempty_list(string_literal_component) -> string_literal_component
## In state 104, spurious reduction of production string_literal -> nonempty_list(string_literal_component)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ALIGNAS LPAREN LPAREN LBRACE ASM LPAREN STRING_LITERAL COLON LBRACK UNAME VARIABLE RBRACK STRING_LITERAL LPAREN STRING_LITERAL RBRACK
##
## Ends in an error in state: 571.
##
## asm_output_input -> LBRACK UNAME VARIABLE RBRACK string_literal LPAREN expression . RPAREN [ RPAREN COMMA COLON ]
## expression -> expression . COMMA assignment_expression [ RPAREN COMMA ]
##
## The known suffix of the stack is as follows:
## LBRACK UNAME VARIABLE RBRACK string_literal LPAREN expression
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 100, spurious reduction of production nonempty_list(string_literal_component) -> string_literal_component
## In state 104, spurious reduction of production string_literal -> nonempty_list(string_literal_component)
## In state 196, spurious reduction of production start_ignore ->
## In state 197, spurious reduction of production primary_expression -> string_literal start_ignore
## In state 198, spurious reduction of production postfix_expression -> primary_expression
## In state 199, spurious reduction of production unary_expression -> postfix_expression
## In state 205, spurious reduction of production cast_expression -> unary_expression
## In state 228, spurious reduction of production multiplicative_expression -> cast_expression
## In state 220, spurious reduction of production additive_expression -> multiplicative_expression
## In state 239, spurious reduction of production shift_expression -> additive_expression
## In state 218, spurious reduction of production relational_expression -> shift_expression
## In state 236, spurious reduction of production equality_expression -> relational_expression
## In state 254, spurious reduction of production _AND_expression -> equality_expression
## In state 262, spurious reduction of production exclusive_OR_expression -> _AND_expression
## In state 263, spurious reduction of production inclusive_OR_expression -> exclusive_OR_expression
## In state 264, spurious reduction of production logical_AND_expression -> inclusive_OR_expression
## In state 248, spurious reduction of production logical_OR_expression -> logical_AND_expression
## In state 246, spurious reduction of production conditional_expression -> logical_OR_expression
## In state 269, spurious reduction of production assignment_expression -> conditional_expression
## In state 273, spurious reduction of production expression -> assignment_expression
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ALIGNAS LPAREN LPAREN LBRACE ASM LPAREN STRING_LITERAL COLON LBRACK LNAME VARIABLE RBRACK STRING_LITERAL STAR_EQ
##
## Ends in an error in state: 576.
##
## asm_output_input -> LBRACK LNAME VARIABLE RBRACK string_literal . LPAREN expression RPAREN [ RPAREN COMMA COLON ]
##
## The known suffix of the stack is as follows:
## LBRACK LNAME VARIABLE RBRACK string_literal
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 100, spurious reduction of production nonempty_list(string_literal_component) -> string_literal_component
## In state 104, spurious reduction of production string_literal -> nonempty_list(string_literal_component)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ALIGNAS LPAREN LPAREN LBRACE ASM LPAREN STRING_LITERAL COLON LBRACK LNAME VARIABLE RBRACK STRING_LITERAL LPAREN STRING_LITERAL RBRACK
##
## Ends in an error in state: 578.
##
## asm_output_input -> LBRACK LNAME VARIABLE RBRACK string_literal LPAREN expression . RPAREN [ RPAREN COMMA COLON ]
## expression -> expression . COMMA assignment_expression [ RPAREN COMMA ]
##
## The known suffix of the stack is as follows:
## LBRACK LNAME VARIABLE RBRACK string_literal LPAREN expression
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 100, spurious reduction of production nonempty_list(string_literal_component) -> string_literal_component
## In state 104, spurious reduction of production string_literal -> nonempty_list(string_literal_component)
## In state 196, spurious reduction of production start_ignore ->
## In state 197, spurious reduction of production primary_expression -> string_literal start_ignore
## In state 198, spurious reduction of production postfix_expression -> primary_expression
## In state 199, spurious reduction of production unary_expression -> postfix_expression
## In state 205, spurious reduction of production cast_expression -> unary_expression
## In state 228, spurious reduction of production multiplicative_expression -> cast_expression
## In state 220, spurious reduction of production additive_expression -> multiplicative_expression
## In state 239, spurious reduction of production shift_expression -> additive_expression
## In state 218, spurious reduction of production relational_expression -> shift_expression
## In state 236, spurious reduction of production equality_expression -> relational_expression
## In state 254, spurious reduction of production _AND_expression -> equality_expression
## In state 262, spurious reduction of production exclusive_OR_expression -> _AND_expression
## In state 263, spurious reduction of production inclusive_OR_expression -> exclusive_OR_expression
## In state 264, spurious reduction of production logical_AND_expression -> inclusive_OR_expression
## In state 248, spurious reduction of production logical_OR_expression -> logical_AND_expression
## In state 246, spurious reduction of production conditional_expression -> logical_OR_expression
## In state 269, spurious reduction of production assignment_expression -> conditional_expression
## In state 273, spurious reduction of production expression -> assignment_expression
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ALIGNAS LPAREN LPAREN LBRACE ASM LPAREN STRING_LITERAL COLON STRING_LITERAL STAR_EQ
##
## Ends in an error in state: 580.
##
## asm_output_input -> string_literal . LPAREN expression RPAREN [ RPAREN COMMA COLON ]
##
## The known suffix of the stack is as follows:
## string_literal
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 100, spurious reduction of production nonempty_list(string_literal_component) -> string_literal_component
## In state 104, spurious reduction of production string_literal -> nonempty_list(string_literal_component)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ALIGNAS LPAREN LPAREN LBRACE ASM LPAREN STRING_LITERAL COLON STRING_LITERAL LPAREN STRING_LITERAL RBRACK
##
## Ends in an error in state: 582.
##
## asm_output_input -> string_literal LPAREN expression . RPAREN [ RPAREN COMMA COLON ]
## expression -> expression . COMMA assignment_expression [ RPAREN COMMA ]
##
## The known suffix of the stack is as follows:
## string_literal LPAREN expression
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 100, spurious reduction of production nonempty_list(string_literal_component) -> string_literal_component
## In state 104, spurious reduction of production string_literal -> nonempty_list(string_literal_component)
## In state 196, spurious reduction of production start_ignore ->
## In state 197, spurious reduction of production primary_expression -> string_literal start_ignore
## In state 198, spurious reduction of production postfix_expression -> primary_expression
## In state 199, spurious reduction of production unary_expression -> postfix_expression
## In state 205, spurious reduction of production cast_expression -> unary_expression
## In state 228, spurious reduction of production multiplicative_expression -> cast_expression
## In state 220, spurious reduction of production additive_expression -> multiplicative_expression
## In state 239, spurious reduction of production shift_expression -> additive_expression
## In state 218, spurious reduction of production relational_expression -> shift_expression
## In state 236, spurious reduction of production equality_expression -> relational_expression
## In state 254, spurious reduction of production _AND_expression -> equality_expression
## In state 262, spurious reduction of production exclusive_OR_expression -> _AND_expression
## In state 263, spurious reduction of production inclusive_OR_expression -> exclusive_OR_expression
## In state 264, spurious reduction of production logical_AND_expression -> inclusive_OR_expression
## In state 248, spurious reduction of production logical_OR_expression -> logical_AND_expression
## In state 246, spurious reduction of production conditional_expression -> logical_OR_expression
## In state 269, spurious reduction of production assignment_expression -> conditional_expression
## In state 273, spurious reduction of production expression -> assignment_expression
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ALIGNAS LPAREN LPAREN LBRACE ASM LPAREN STRING_LITERAL COLON COLON COLON STRING_LITERAL STAR_EQ
##
## Ends in an error in state: 602.
##
## separated_nonempty_list(COMMA,asm_clobber) -> asm_clobber . [ RPAREN COLON ]
## separated_nonempty_list(COMMA,asm_clobber) -> asm_clobber . COMMA separated_nonempty_list(COMMA,asm_clobber) [ RPAREN COLON ]
##
## The known suffix of the stack is as follows:
## asm_clobber
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 100, spurious reduction of production nonempty_list(string_literal_component) -> string_literal_component
## In state 104, spurious reduction of production string_literal -> nonempty_list(string_literal_component)
## In state 589, spurious reduction of production asm_clobber -> string_literal
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ALIGNAS LPAREN LPAREN LBRACE ASM LPAREN STRING_LITERAL COLON STRING_LITERAL LPAREN STRING_LITERAL RPAREN WHILE
##
## Ends in an error in state: 607.
##
## separated_nonempty_list(COMMA,asm_output_input) -> asm_output_input . [ RPAREN COLON ]
## separated_nonempty_list(COMMA,asm_output_input) -> asm_output_input . COMMA separated_nonempty_list(COMMA,asm_output_input) [ RPAREN COLON ]
##
## The known suffix of the stack is as follows:
## asm_output_input
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ALIGNAS LPAREN LPAREN LBRACE LNAME VARIABLE WHILE
##
## Ends in an error in state: 616.
##
## general_identifier -> var_name . [ COLON ]
## primary_expression -> var_name . start_ignore [ STAR_EQ STAR SLASH_EQ SLASH SEMICOLON QUESTION_COLON QUESTION PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_GT MINUS_EQ MINUS LT_LT_EQ LT_LT LT_EQ LT LPAREN LBRACK GT_GT_EQ GT_GT GT_EQ GT EQ_EQ EQ DOT COMMA CARET_EQ CARET BANG_EQ AMPERSAND_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## var_name
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ALIGNAS LPAREN LPAREN LBRACES SEMICOLON WHILE
##
## Ends in an error in state: 617.
##
## separated_nonempty_list(PIPES,statement) -> statement . [ RBRACES ]
## separated_nonempty_list(PIPES,statement) -> statement . PIPES separated_nonempty_list(PIPES,statement) [ RBRACES ]
##
## The known suffix of the stack is as follows:
## statement
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ALIGNAS LPAREN LPAREN LBRACE STRING_LITERAL RPAREN
##
## Ends in an error in state: 620.
##
## expression_statement -> option(full_expression) . SEMICOLON [ WHILE VOLATILE VOID VA_START VA_END VA_COPY VA_ARG UNSIGNED UNION UNAME TYPEOF TYPEDEF TILDE THREAD_LOCAL SWITCH STRUCT STRING_LITERAL STATIC_ASSERT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACES RBRACE PRINT_TYPE PLUS_PLUS PLUS PIPES OFFSETOF NORETURN MINUS_MINUS MINUS LPAREN LONG LNAME LBRACK_LBRACK LBRACES LBRACE INT INLINE IF GOTO GENERIC FOR FLOAT EXTERN ENUM ELSE DOUBLE DO DEFAULT CONTINUE CONSTANT CONST COMPLEX CHAR CERB_MAGIC CASE BUILTIN_TYPES_COMPATIBLE_P BUILTIN_CHOOSE_EXPR BREAK BOOL BMC_ASSUME BANG AUTO ATOMIC ASSERT ASM AMPERSAND ALIGNOF ALIGNAS ]
##
## The known suffix of the stack is as follows:
## option(full_expression)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 100, spurious reduction of production nonempty_list(string_literal_component) -> string_literal_component
## In state 104, spurious reduction of production string_literal -> nonempty_list(string_literal_component)
## In state 196, spurious reduction of production start_ignore ->
## In state 197, spurious reduction of production primary_expression -> string_literal start_ignore
## In state 198, spurious reduction of production postfix_expression -> primary_expression
## In state 199, spurious reduction of production unary_expression -> postfix_expression
## In state 205, spurious reduction of production cast_expression -> unary_expression
## In state 228, spurious reduction of production multiplicative_expression -> cast_expression
## In state 220, spurious reduction of production additive_expression -> multiplicative_expression
## In state 239, spurious reduction of production shift_expression -> additive_expression
## In state 218, spurious reduction of production relational_expression -> shift_expression
## In state 236, spurious reduction of production equality_expression -> relational_expression
## In state 254, spurious reduction of production _AND_expression -> equality_expression
## In state 262, spurious reduction of production exclusive_OR_expression -> _AND_expression
## In state 263, spurious reduction of production inclusive_OR_expression -> exclusive_OR_expression
## In state 264, spurious reduction of production logical_AND_expression -> inclusive_OR_expression
## In state 248, spurious reduction of production logical_OR_expression -> logical_AND_expression
## In state 246, spurious reduction of production conditional_expression -> logical_OR_expression
## In state 269, spurious reduction of production assignment_expression -> conditional_expression
## In state 273, spurious reduction of production expression -> assignment_expression
## In state 627, spurious reduction of production end_ignore ->
## In state 628, spurious reduction of production full_expression -> expression end_ignore
## In state 626, spurious reduction of production option(full_expression) -> full_expression
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ALIGNAS LPAREN LPAREN LBRACE RETURN STRING_LITERAL RPAREN
##
## Ends in an error in state: 624.
##
## jump_statement -> RETURN option(full_expression) . SEMICOLON [ WHILE VOLATILE VOID VA_START VA_END VA_COPY VA_ARG UNSIGNED UNION UNAME TYPEOF TYPEDEF TILDE THREAD_LOCAL SWITCH STRUCT STRING_LITERAL STATIC_ASSERT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACES RBRACE PRINT_TYPE PLUS_PLUS PLUS PIPES OFFSETOF NORETURN MINUS_MINUS MINUS LPAREN LONG LNAME LBRACK_LBRACK LBRACES LBRACE INT INLINE IF GOTO GENERIC FOR FLOAT EXTERN ENUM ELSE DOUBLE DO DEFAULT CONTINUE CONSTANT CONST COMPLEX CHAR CERB_MAGIC CASE BUILTIN_TYPES_COMPATIBLE_P BUILTIN_CHOOSE_EXPR BREAK BOOL BMC_ASSUME BANG AUTO ATOMIC ASSERT ASM AMPERSAND ALIGNOF ALIGNAS ]
##
## The known suffix of the stack is as follows:
## RETURN option(full_expression)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 100, spurious reduction of production nonempty_list(string_literal_component) -> string_literal_component
## In state 104, spurious reduction of production string_literal -> nonempty_list(string_literal_component)
## In state 196, spurious reduction of production start_ignore ->
## In state 197, spurious reduction of production primary_expression -> string_literal start_ignore
## In state 198, spurious reduction of production postfix_expression -> primary_expression
## In state 199, spurious reduction of production unary_expression -> postfix_expression
## In state 205, spurious reduction of production cast_expression -> unary_expression
## In state 228, spurious reduction of production multiplicative_expression -> cast_expression
## In state 220, spurious reduction of production additive_expression -> multiplicative_expression
## In state 239, spurious reduction of production shift_expression -> additive_expression
## In state 218, spurious reduction of production relational_expression -> shift_expression
## In state 236, spurious reduction of production equality_expression -> relational_expression
## In state 254, spurious reduction of production _AND_expression -> equality_expression
## In state 262, spurious reduction of production exclusive_OR_expression -> _AND_expression
## In state 263, spurious reduction of production inclusive_OR_expression -> exclusive_OR_expression
## In state 264, spurious reduction of production logical_AND_expression -> inclusive_OR_expression
## In state 248, spurious reduction of production logical_OR_expression -> logical_AND_expression
## In state 246, spurious reduction of production conditional_expression -> logical_OR_expression
## In state 269, spurious reduction of production assignment_expression -> conditional_expression
## In state 273, spurious reduction of production expression -> assignment_expression
## In state 627, spurious reduction of production end_ignore ->
## In state 628, spurious reduction of production full_expression -> expression end_ignore
## In state 626, spurious reduction of production option(full_expression) -> full_expression
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ALIGNAS LPAREN LPAREN LBRACE STRING_LITERAL RBRACK
##
## Ends in an error in state: 627.
##
## expression -> expression . COMMA assignment_expression [ SEMICOLON RPAREN COMMA ]
## full_expression -> expression . end_ignore [ SEMICOLON RPAREN ]
##
## The known suffix of the stack is as follows:
## expression
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 100, spurious reduction of production nonempty_list(string_literal_component) -> string_literal_component
## In state 104, spurious reduction of production string_literal -> nonempty_list(string_literal_component)
## In state 196, spurious reduction of production start_ignore ->
## In state 197, spurious reduction of production primary_expression -> string_literal start_ignore
## In state 198, spurious reduction of production postfix_expression -> primary_expression
## In state 199, spurious reduction of production unary_expression -> postfix_expression
## In state 205, spurious reduction of production cast_expression -> unary_expression
## In state 228, spurious reduction of production multiplicative_expression -> cast_expression
## In state 220, spurious reduction of production additive_expression -> multiplicative_expression
## In state 239, spurious reduction of production shift_expression -> additive_expression
## In state 218, spurious reduction of production relational_expression -> shift_expression
## In state 236, spurious reduction of production equality_expression -> relational_expression
## In state 254, spurious reduction of production _AND_expression -> equality_expression
## In state 262, spurious reduction of production exclusive_OR_expression -> _AND_expression
## In state 263, spurious reduction of production inclusive_OR_expression -> exclusive_OR_expression
## In state 264, spurious reduction of production logical_AND_expression -> inclusive_OR_expression
## In state 248, spurious reduction of production logical_OR_expression -> logical_AND_expression
## In state 246, spurious reduction of production conditional_expression -> logical_OR_expression
## In state 269, spurious reduction of production assignment_expression -> conditional_expression
## In state 273, spurious reduction of production expression -> assignment_expression
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ALIGNAS LPAREN LPAREN LBRACES LBRACK_LBRACK ALIGNAS RBRACK RBRACK VOLATILE
##
## Ends in an error in state: 640.
##
## attribute_specifier_sequence -> attribute_specifier_sequence . attribute_specifier [ WHILE VA_START VA_END VA_COPY VA_ARG UNAME TILDE SWITCH STRING_LITERAL STAR SIZEOF RETURN PRINT_TYPE PLUS_PLUS PLUS OFFSETOF MINUS_MINUS MINUS LPAREN LNAME LBRACK_LBRACK LBRACES LBRACE IF GOTO GENERIC FOR DO DEFAULT CONTINUE CONSTANT CASE BUILTIN_TYPES_COMPATIBLE_P BUILTIN_CHOOSE_EXPR BREAK BMC_ASSUME BANG ASSERT AMPERSAND ALIGNOF ]
## expression_statement -> attribute_specifier_sequence . full_expression SEMICOLON [ WHILE VOLATILE VOID VA_START VA_END VA_COPY VA_ARG UNSIGNED UNION UNAME TYPEOF TYPEDEF TILDE THREAD_LOCAL SWITCH STRUCT STRING_LITERAL STATIC_ASSERT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACES RBRACE PRINT_TYPE PLUS_PLUS PLUS PIPES OFFSETOF NORETURN MINUS_MINUS MINUS LPAREN LONG LNAME LBRACK_LBRACK LBRACES LBRACE INT INLINE IF GOTO GENERIC FOR FLOAT EXTERN ENUM ELSE DOUBLE DO DEFAULT CONTINUE CONSTANT CONST COMPLEX CHAR CERB_MAGIC CASE BUILTIN_TYPES_COMPATIBLE_P BUILTIN_CHOOSE_EXPR BREAK BOOL BMC_ASSUME BANG AUTO ATOMIC ASSERT ASM AMPERSAND ALIGNOF ALIGNAS ]
## labeled_statement -> attribute_specifier_sequence . general_identifier COLON statement [ WHILE VOLATILE VOID VA_START VA_END VA_COPY VA_ARG UNSIGNED UNION UNAME TYPEOF TYPEDEF TILDE THREAD_LOCAL SWITCH STRUCT STRING_LITERAL STATIC_ASSERT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACES RBRACE PRINT_TYPE PLUS_PLUS PLUS PIPES OFFSETOF NORETURN MINUS_MINUS MINUS LPAREN LONG LNAME LBRACK_LBRACK LBRACES LBRACE INT INLINE IF GOTO GENERIC FOR FLOAT EXTERN ENUM ELSE DOUBLE DO DEFAULT CONTINUE CONSTANT CONST COMPLEX CHAR CERB_MAGIC CASE BUILTIN_TYPES_COMPATIBLE_P BUILTIN_CHOOSE_EXPR BREAK BOOL BMC_ASSUME BANG AUTO ATOMIC ASSERT ASM AMPERSAND ALIGNOF ALIGNAS ]
## option(attribute_specifier_sequence) -> attribute_specifier_sequence . [ WHILE SWITCH RETURN LBRACES LBRACE IF GOTO FOR DO DEFAULT CONTINUE CASE BREAK ]
##
## The known suffix of the stack is as follows:
## attribute_specifier_sequence
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ALIGNAS LPAREN LPAREN LBRACE LBRACK_LBRACK ALIGNAS RBRACK RBRACK STRING_LITERAL RPAREN
##
## Ends in an error in state: 645.
##
## expression_statement -> attribute_specifier_sequence full_expression . SEMICOLON [ WHILE VOLATILE VOID VA_START VA_END VA_COPY VA_ARG UNSIGNED UNION UNAME TYPEOF TYPEDEF TILDE THREAD_LOCAL SWITCH STRUCT STRING_LITERAL STATIC_ASSERT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACES RBRACE PRINT_TYPE PLUS_PLUS PLUS PIPES OFFSETOF NORETURN MINUS_MINUS MINUS LPAREN LONG LNAME LBRACK_LBRACK LBRACES LBRACE INT INLINE IF GOTO GENERIC FOR FLOAT EXTERN ENUM ELSE DOUBLE DO DEFAULT CONTINUE CONSTANT CONST COMPLEX CHAR CERB_MAGIC CASE BUILTIN_TYPES_COMPATIBLE_P BUILTIN_CHOOSE_EXPR BREAK BOOL BMC_ASSUME BANG AUTO ATOMIC ASSERT ASM AMPERSAND ALIGNOF ALIGNAS ]
##
## The known suffix of the stack is as follows:
## attribute_specifier_sequence full_expression
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 100, spurious reduction of production nonempty_list(string_literal_component) -> string_literal_component
## In state 104, spurious reduction of production string_literal -> nonempty_list(string_literal_component)
## In state 196, spurious reduction of production start_ignore ->
## In state 197, spurious reduction of production primary_expression -> string_literal start_ignore
## In state 198, spurious reduction of production postfix_expression -> primary_expression
## In state 199, spurious reduction of production unary_expression -> postfix_expression
## In state 205, spurious reduction of production cast_expression -> unary_expression
## In state 228, spurious reduction of production multiplicative_expression -> cast_expression
## In state 220, spurious reduction of production additive_expression -> multiplicative_expression
## In state 239, spurious reduction of production shift_expression -> additive_expression
## In state 218, spurious reduction of production relational_expression -> shift_expression
## In state 236, spurious reduction of production equality_expression -> relational_expression
## In state 254, spurious reduction of production _AND_expression -> equality_expression
## In state 262, spurious reduction of production exclusive_OR_expression -> _AND_expression
## In state 263, spurious reduction of production inclusive_OR_expression -> exclusive_OR_expression
## In state 264, spurious reduction of production logical_AND_expression -> inclusive_OR_expression
## In state 248, spurious reduction of production logical_OR_expression -> logical_AND_expression
## In state 246, spurious reduction of production conditional_expression -> logical_OR_expression
## In state 269, spurious reduction of production assignment_expression -> conditional_expression
## In state 273, spurious reduction of production expression -> assignment_expression
## In state 627, spurious reduction of production end_ignore ->
## In state 628, spurious reduction of production full_expression -> expression end_ignore
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ALIGNAS LPAREN LPAREN LBRACE CASE WHILE
##
## Ends in an error in state: 649.
##
## labeled_statement -> option(attribute_specifier_sequence) CASE . constant_expression ELLIPSIS constant_expression COLON statement [ WHILE VOLATILE VOID VA_START VA_END VA_COPY VA_ARG UNSIGNED UNION UNAME TYPEOF TYPEDEF TILDE THREAD_LOCAL SWITCH STRUCT STRING_LITERAL STATIC_ASSERT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACES RBRACE PRINT_TYPE PLUS_PLUS PLUS PIPES OFFSETOF NORETURN MINUS_MINUS MINUS LPAREN LONG LNAME LBRACK_LBRACK LBRACES LBRACE INT INLINE IF GOTO GENERIC FOR FLOAT EXTERN ENUM ELSE DOUBLE DO DEFAULT CONTINUE CONSTANT CONST COMPLEX CHAR CERB_MAGIC CASE BUILTIN_TYPES_COMPATIBLE_P BUILTIN_CHOOSE_EXPR BREAK BOOL BMC_ASSUME BANG AUTO ATOMIC ASSERT ASM AMPERSAND ALIGNOF ALIGNAS ]
## labeled_statement -> option(attribute_specifier_sequence) CASE . constant_expression COLON statement [ WHILE VOLATILE VOID VA_START VA_END VA_COPY VA_ARG UNSIGNED UNION UNAME TYPEOF TYPEDEF TILDE THREAD_LOCAL SWITCH STRUCT STRING_LITERAL STATIC_ASSERT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACES RBRACE PRINT_TYPE PLUS_PLUS PLUS PIPES OFFSETOF NORETURN MINUS_MINUS MINUS LPAREN LONG LNAME LBRACK_LBRACK LBRACES LBRACE INT INLINE IF GOTO GENERIC FOR FLOAT EXTERN ENUM ELSE DOUBLE DO DEFAULT CONTINUE CONSTANT CONST COMPLEX CHAR CERB_MAGIC CASE BUILTIN_TYPES_COMPATIBLE_P BUILTIN_CHOOSE_EXPR BREAK BOOL BMC_ASSUME BANG AUTO ATOMIC ASSERT ASM AMPERSAND ALIGNOF ALIGNAS ]
##
## The known suffix of the stack is as follows:
## option(attribute_specifier_sequence) CASE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ALIGNAS LPAREN LPAREN LBRACE CASE STRING_LITERAL RPAREN
##
## Ends in an error in state: 650.
##
## labeled_statement -> option(attribute_specifier_sequence) CASE constant_expression . ELLIPSIS constant_expression COLON statement [ WHILE VOLATILE VOID VA_START VA_END VA_COPY VA_ARG UNSIGNED UNION UNAME TYPEOF TYPEDEF TILDE THREAD_LOCAL SWITCH STRUCT STRING_LITERAL STATIC_ASSERT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACES RBRACE PRINT_TYPE PLUS_PLUS PLUS PIPES OFFSETOF NORETURN MINUS_MINUS MINUS LPAREN LONG LNAME LBRACK_LBRACK LBRACES LBRACE INT INLINE IF GOTO GENERIC FOR FLOAT EXTERN ENUM ELSE DOUBLE DO DEFAULT CONTINUE CONSTANT CONST COMPLEX CHAR CERB_MAGIC CASE BUILTIN_TYPES_COMPATIBLE_P BUILTIN_CHOOSE_EXPR BREAK BOOL BMC_ASSUME BANG AUTO ATOMIC ASSERT ASM AMPERSAND ALIGNOF ALIGNAS ]
## labeled_statement -> option(attribute_specifier_sequence) CASE constant_expression . COLON statement [ WHILE VOLATILE VOID VA_START VA_END VA_COPY VA_ARG UNSIGNED UNION UNAME TYPEOF TYPEDEF TILDE THREAD_LOCAL SWITCH STRUCT STRING_LITERAL STATIC_ASSERT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACES RBRACE PRINT_TYPE PLUS_PLUS PLUS PIPES OFFSETOF NORETURN MINUS_MINUS MINUS LPAREN LONG LNAME LBRACK_LBRACK LBRACES LBRACE INT INLINE IF GOTO GENERIC FOR FLOAT EXTERN ENUM ELSE DOUBLE DO DEFAULT CONTINUE CONSTANT CONST COMPLEX CHAR CERB_MAGIC CASE BUILTIN_TYPES_COMPATIBLE_P BUILTIN_CHOOSE_EXPR BREAK BOOL BMC_ASSUME BANG AUTO ATOMIC ASSERT ASM AMPERSAND ALIGNOF ALIGNAS ]
##
## The known suffix of the stack is as follows:
## option(attribute_specifier_sequence) CASE constant_expression
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 100, spurious reduction of production nonempty_list(string_literal_component) -> string_literal_component
## In state 104, spurious reduction of production string_literal -> nonempty_list(string_literal_component)
## In state 196, spurious reduction of production start_ignore ->
## In state 197, spurious reduction of production primary_expression -> string_literal start_ignore
## In state 198, spurious reduction of production postfix_expression -> primary_expression
## In state 199, spurious reduction of production unary_expression -> postfix_expression
## In state 195, spurious reduction of production cast_expression -> unary_expression
## In state 228, spurious reduction of production multiplicative_expression -> cast_expression
## In state 220, spurious reduction of production additive_expression -> multiplicative_expression
## In state 239, spurious reduction of production shift_expression -> additive_expression
## In state 218, spurious reduction of production relational_expression -> shift_expression
## In state 236, spurious reduction of production equality_expression -> relational_expression
## In state 254, spurious reduction of production _AND_expression -> equality_expression
## In state 262, spurious reduction of production exclusive_OR_expression -> _AND_expression
## In state 263, spurious reduction of production inclusive_OR_expression -> exclusive_OR_expression
## In state 264, spurious reduction of production logical_AND_expression -> inclusive_OR_expression
## In state 248, spurious reduction of production logical_OR_expression -> logical_AND_expression
## In state 246, spurious reduction of production conditional_expression -> logical_OR_expression
## In state 294, spurious reduction of production constant_expression -> conditional_expression
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ALIGNAS LPAREN LPAREN LBRACE CASE STRING_LITERAL ELLIPSIS STRING_LITERAL RPAREN
##
## Ends in an error in state: 652.
##
## labeled_statement -> option(attribute_specifier_sequence) CASE constant_expression ELLIPSIS constant_expression . COLON statement [ WHILE VOLATILE VOID VA_START VA_END VA_COPY VA_ARG UNSIGNED UNION UNAME TYPEOF TYPEDEF TILDE THREAD_LOCAL SWITCH STRUCT STRING_LITERAL STATIC_ASSERT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACES RBRACE PRINT_TYPE PLUS_PLUS PLUS PIPES OFFSETOF NORETURN MINUS_MINUS MINUS LPAREN LONG LNAME LBRACK_LBRACK LBRACES LBRACE INT INLINE IF GOTO GENERIC FOR FLOAT EXTERN ENUM ELSE DOUBLE DO DEFAULT CONTINUE CONSTANT CONST COMPLEX CHAR CERB_MAGIC CASE BUILTIN_TYPES_COMPATIBLE_P BUILTIN_CHOOSE_EXPR BREAK BOOL BMC_ASSUME BANG AUTO ATOMIC ASSERT ASM AMPERSAND ALIGNOF ALIGNAS ]
##
## The known suffix of the stack is as follows:
## option(attribute_specifier_sequence) CASE constant_expression ELLIPSIS constant_expression
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 100, spurious reduction of production nonempty_list(string_literal_component) -> string_literal_component
## In state 104, spurious reduction of production string_literal -> nonempty_list(string_literal_component)
## In state 196, spurious reduction of production start_ignore ->
## In state 197, spurious reduction of production primary_expression -> string_literal start_ignore
## In state 198, spurious reduction of production postfix_expression -> primary_expression
## In state 199, spurious reduction of production unary_expression -> postfix_expression
## In state 195, spurious reduction of production cast_expression -> unary_expression
## In state 228, spurious reduction of production multiplicative_expression -> cast_expression
## In state 220, spurious reduction of production additive_expression -> multiplicative_expression
## In state 239, spurious reduction of production shift_expression -> additive_expression
## In state 218, spurious reduction of production relational_expression -> shift_expression
## In state 236, spurious reduction of production equality_expression -> relational_expression
## In state 254, spurious reduction of production _AND_expression -> equality_expression
## In state 262, spurious reduction of production exclusive_OR_expression -> _AND_expression
## In state 263, spurious reduction of production inclusive_OR_expression -> exclusive_OR_expression
## In state 264, spurious reduction of production logical_AND_expression -> inclusive_OR_expression
## In state 248, spurious reduction of production logical_OR_expression -> logical_AND_expression
## In state 246, spurious reduction of production conditional_expression -> logical_OR_expression
## In state 294, spurious reduction of production constant_expression -> conditional_expression
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ALIGNAS LPAREN LPAREN LBRACE WHILE LPAREN STRING_LITERAL SEMICOLON
##
## Ends in an error in state: 665.
##
## iteration_statement -> WHILE LPAREN full_expression . RPAREN magic_comment_list scoped(statement) [ WHILE VOLATILE VOID VA_START VA_END VA_COPY VA_ARG UNSIGNED UNION UNAME TYPEOF TYPEDEF TILDE THREAD_LOCAL SWITCH STRUCT STRING_LITERAL STATIC_ASSERT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACES RBRACE PRINT_TYPE PLUS_PLUS PLUS PIPES OFFSETOF NORETURN MINUS_MINUS MINUS LPAREN LONG LNAME LBRACK_LBRACK LBRACES LBRACE INT INLINE IF GOTO GENERIC FOR FLOAT EXTERN ENUM ELSE DOUBLE DO DEFAULT CONTINUE CONSTANT CONST COMPLEX CHAR CERB_MAGIC CASE BUILTIN_TYPES_COMPATIBLE_P BUILTIN_CHOOSE_EXPR BREAK BOOL BMC_ASSUME BANG AUTO ATOMIC ASSERT ASM AMPERSAND ALIGNOF ALIGNAS ]
##
## The known suffix of the stack is as follows:
## WHILE LPAREN full_expression
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 100, spurious reduction of production nonempty_list(string_literal_component) -> string_literal_component
## In state 104, spurious reduction of production string_literal -> nonempty_list(string_literal_component)
## In state 196, spurious reduction of production start_ignore ->
## In state 197, spurious reduction of production primary_expression -> string_literal start_ignore
## In state 198, spurious reduction of production postfix_expression -> primary_expression
## In state 199, spurious reduction of production unary_expression -> postfix_expression
## In state 205, spurious reduction of production cast_expression -> unary_expression
## In state 228, spurious reduction of production multiplicative_expression -> cast_expression
## In state 220, spurious reduction of production additive_expression -> multiplicative_expression
## In state 239, spurious reduction of production shift_expression -> additive_expression
## In state 218, spurious reduction of production relational_expression -> shift_expression
## In state 236, spurious reduction of production equality_expression -> relational_expression
## In state 254, spurious reduction of production _AND_expression -> equality_expression
## In state 262, spurious reduction of production exclusive_OR_expression -> _AND_expression
## In state 263, spurious reduction of production inclusive_OR_expression -> exclusive_OR_expression
## In state 264, spurious reduction of production logical_AND_expression -> inclusive_OR_expression
## In state 248, spurious reduction of production logical_OR_expression -> logical_AND_expression
## In state 246, spurious reduction of production conditional_expression -> logical_OR_expression
## In state 269, spurious reduction of production assignment_expression -> conditional_expression
## In state 273, spurious reduction of production expression -> assignment_expression
## In state 627, spurious reduction of production end_ignore ->
## In state 628, spurious reduction of production full_expression -> expression end_ignore
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ALIGNAS LPAREN LPAREN LBRACE WHILE LPAREN STRING_LITERAL RPAREN VOLATILE
##
## Ends in an error in state: 667.
##
## iteration_statement -> WHILE LPAREN full_expression RPAREN magic_comment_list . scoped(statement) [ WHILE VOLATILE VOID VA_START VA_END VA_COPY VA_ARG UNSIGNED UNION UNAME TYPEOF TYPEDEF TILDE THREAD_LOCAL SWITCH STRUCT STRING_LITERAL STATIC_ASSERT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACES RBRACE PRINT_TYPE PLUS_PLUS PLUS PIPES OFFSETOF NORETURN MINUS_MINUS MINUS LPAREN LONG LNAME LBRACK_LBRACK LBRACES LBRACE INT INLINE IF GOTO GENERIC FOR FLOAT EXTERN ENUM ELSE DOUBLE DO DEFAULT CONTINUE CONSTANT CONST COMPLEX CHAR CERB_MAGIC CASE BUILTIN_TYPES_COMPATIBLE_P BUILTIN_CHOOSE_EXPR BREAK BOOL BMC_ASSUME BANG AUTO ATOMIC ASSERT ASM AMPERSAND ALIGNOF ALIGNAS ]
## magic_comment_list -> magic_comment_list . CERB_MAGIC [ WHILE VA_START VA_END VA_COPY VA_ARG UNAME TILDE SWITCH STRING_LITERAL STAR SIZEOF SEMICOLON RETURN PRINT_TYPE PLUS_PLUS PLUS OFFSETOF MINUS_MINUS MINUS LPAREN LNAME LBRACK_LBRACK LBRACES LBRACE IF GOTO GENERIC FOR DO DEFAULT CONTINUE CONSTANT CERB_MAGIC CASE BUILTIN_TYPES_COMPATIBLE_P BUILTIN_CHOOSE_EXPR BREAK BMC_ASSUME BANG ASSERT ASM AMPERSAND ALIGNOF ]
##
## The known suffix of the stack is as follows:
## WHILE LPAREN full_expression RPAREN magic_comment_list
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ALIGNAS LPAREN LPAREN LBRACE SWITCH LPAREN STRING_LITERAL SEMICOLON
##
## Ends in an error in state: 674.
##
## selection_statement -> SWITCH LPAREN full_expression . RPAREN scoped(statement) [ WHILE VOLATILE VOID VA_START VA_END VA_COPY VA_ARG UNSIGNED UNION UNAME TYPEOF TYPEDEF TILDE THREAD_LOCAL SWITCH STRUCT STRING_LITERAL STATIC_ASSERT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACES RBRACE PRINT_TYPE PLUS_PLUS PLUS PIPES OFFSETOF NORETURN MINUS_MINUS MINUS LPAREN LONG LNAME LBRACK_LBRACK LBRACES LBRACE INT INLINE IF GOTO GENERIC FOR FLOAT EXTERN ENUM ELSE DOUBLE DO DEFAULT CONTINUE CONSTANT CONST COMPLEX CHAR CERB_MAGIC CASE BUILTIN_TYPES_COMPATIBLE_P BUILTIN_CHOOSE_EXPR BREAK BOOL BMC_ASSUME BANG AUTO ATOMIC ASSERT ASM AMPERSAND ALIGNOF ALIGNAS ]
##
## The known suffix of the stack is as follows:
## SWITCH LPAREN full_expression
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 100, spurious reduction of production nonempty_list(string_literal_component) -> string_literal_component
## In state 104, spurious reduction of production string_literal -> nonempty_list(string_literal_component)
## In state 196, spurious reduction of production start_ignore ->
## In state 197, spurious reduction of production primary_expression -> string_literal start_ignore
## In state 198, spurious reduction of production postfix_expression -> primary_expression
## In state 199, spurious reduction of production unary_expression -> postfix_expression
## In state 205, spurious reduction of production cast_expression -> unary_expression
## In state 228, spurious reduction of production multiplicative_expression -> cast_expression
## In state 220, spurious reduction of production additive_expression -> multiplicative_expression
## In state 239, spurious reduction of production shift_expression -> additive_expression
## In state 218, spurious reduction of production relational_expression -> shift_expression
## In state 236, spurious reduction of production equality_expression -> relational_expression
## In state 254, spurious reduction of production _AND_expression -> equality_expression
## In state 262, spurious reduction of production exclusive_OR_expression -> _AND_expression
## In state 263, spurious reduction of production inclusive_OR_expression -> exclusive_OR_expression
## In state 264, spurious reduction of production logical_AND_expression -> inclusive_OR_expression
## In state 248, spurious reduction of production logical_OR_expression -> logical_AND_expression
## In state 246, spurious reduction of production conditional_expression -> logical_OR_expression
## In state 269, spurious reduction of production assignment_expression -> conditional_expression
## In state 273, spurious reduction of production expression -> assignment_expression
## In state 627, spurious reduction of production end_ignore ->
## In state 628, spurious reduction of production full_expression -> expression end_ignore
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: TYPEDEF WHILE
##
## Ends in an error in state: 678.
##
## list_eq1_eq1(TYPEDEF,attribute_type_specifier_unique,declaration_specifier) -> TYPEDEF . list_eq1(attribute_type_specifier_unique,declaration_specifier) [ UNAME STAR SEMICOLON LPAREN LNAME ]
## list_eq1_ge1(TYPEDEF,attribute_type_specifier_nonunique,declaration_specifier) -> TYPEDEF . list_ge1(attribute_type_specifier_nonunique,declaration_specifier) [ UNAME STAR SEMICOLON LPAREN LNAME ]
##
## The known suffix of the stack is as follows:
## TYPEDEF
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: TYPEDEF BOOL RPAREN
##
## Ends in an error in state: 689.
##
## no_leading_attribute_declaration -> declaration_specifiers_typedef . option(init_declarator_list(declarator_typedefname)) SEMICOLON [ WHILE VOLATILE VOID VA_START VA_END VA_COPY VA_ARG UNSIGNED UNION UNAME TYPEOF TYPEDEF TILDE THREAD_LOCAL SWITCH STRUCT STRING_LITERAL STATIC_ASSERT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRINT_TYPE PLUS_PLUS PLUS OFFSETOF NORETURN MINUS_MINUS MINUS LPAREN LONG LNAME LBRACK_LBRACK LBRACES LBRACE INT INLINE IF GOTO GENERIC FOR FLOAT EXTERN EOF ENUM DOUBLE DO DEFAULT CONTINUE CONSTANT CONST COMPLEX CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE CHAR CERB_MAGIC CASE BUILTIN_TYPES_COMPATIBLE_P BUILTIN_CHOOSE_EXPR BREAK BOOL BMC_ASSUME BANG AUTO ATOMIC ASSERT ASM AMPERSAND ALIGNOF ALIGNAS ]
##
## The known suffix of the stack is as follows:
## declaration_specifiers_typedef
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 170, spurious reduction of production attribute_type_specifier_unique -> type_specifier_unique
## In state 378, spurious reduction of production list(declaration_specifier) ->
## In state 379, spurious reduction of production list_eq1(attribute_type_specifier_unique,declaration_specifier) -> attribute_type_specifier_unique list(declaration_specifier)
## In state 680, spurious reduction of production list_eq1_eq1(TYPEDEF,attribute_type_specifier_unique,declaration_specifier) -> TYPEDEF list_eq1(attribute_type_specifier_unique,declaration_specifier)
## In state 688, spurious reduction of production declaration_specifiers_typedef -> list_eq1_eq1(TYPEDEF,attribute_type_specifier_unique,declaration_specifier)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: BOOL TYPEDEF LNAME TYPE EQ STRING_LITERAL RPAREN
##
## Ends in an error in state: 692.
##
## init_declarator_list(declarator_typedefname) -> init_declarator_list(declarator_typedefname) . COMMA init_declarator(declarator_typedefname) [ SEMICOLON COMMA ]
## option(init_declarator_list(declarator_typedefname)) -> init_declarator_list(declarator_typedefname) . [ SEMICOLON ]
##
## The known suffix of the stack is as follows:
## init_declarator_list(declarator_typedefname)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 100, spurious reduction of production nonempty_list(string_literal_component) -> string_literal_component
## In state 104, spurious reduction of production string_literal -> nonempty_list(string_literal_component)
## In state 196, spurious reduction of production start_ignore ->
## In state 197, spurious reduction of production primary_expression -> string_literal start_ignore
## In state 198, spurious reduction of production postfix_expression -> primary_expression
## In state 199, spurious reduction of production unary_expression -> postfix_expression
## In state 205, spurious reduction of production cast_expression -> unary_expression
## In state 228, spurious reduction of production multiplicative_expression -> cast_expression
## In state 220, spurious reduction of production additive_expression -> multiplicative_expression
## In state 239, spurious reduction of production shift_expression -> additive_expression
## In state 218, spurious reduction of production relational_expression -> shift_expression
## In state 236, spurious reduction of production equality_expression -> relational_expression
## In state 254, spurious reduction of production _AND_expression -> equality_expression
## In state 262, spurious reduction of production exclusive_OR_expression -> _AND_expression
## In state 263, spurious reduction of production inclusive_OR_expression -> exclusive_OR_expression
## In state 264, spurious reduction of production logical_AND_expression -> inclusive_OR_expression
## In state 248, spurious reduction of production logical_OR_expression -> logical_AND_expression
## In state 246, spurious reduction of production conditional_expression -> logical_OR_expression
## In state 269, spurious reduction of production assignment_expression -> conditional_expression
## In state 539, spurious reduction of production initializer_ -> assignment_expression
## In state 697, spurious reduction of production init_declarator(declarator_typedefname) -> declarator_typedefname EQ initializer_
## In state 706, spurious reduction of production init_declarator_list(declarator_typedefname) -> init_declarator(declarator_typedefname)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: BOOL TYPEDEF LNAME TYPE VOLATILE
##
## Ends in an error in state: 695.
##
## init_declarator(declarator_typedefname) -> declarator_typedefname . [ SEMICOLON COMMA ]
## init_declarator(declarator_typedefname) -> declarator_typedefname . asm_register [ SEMICOLON COMMA ]
## init_declarator(declarator_typedefname) -> declarator_typedefname . EQ initializer_ [ SEMICOLON COMMA ]
## init_declarator(declarator_typedefname) -> declarator_typedefname . asm_register EQ initializer_ [ SEMICOLON COMMA ]
##
## The known suffix of the stack is as follows:
## declarator_typedefname
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 314, spurious reduction of production direct_declarator -> general_identifier
## In state 391, spurious reduction of production declarator -> direct_declarator
## In state 705, spurious reduction of production declarator_typedefname -> declarator
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: BOOL LNAME TYPE ASM LPAREN STRING_LITERAL STAR_EQ
##
## Ends in an error in state: 700.
##
## asm_register -> ASM LPAREN string_literal . RPAREN [ SEMICOLON EQ COMMA ]
##
## The known suffix of the stack is as follows:
## ASM LPAREN string_literal
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 100, spurious reduction of production nonempty_list(string_literal_component) -> string_literal_component
## In state 104, spurious reduction of production string_literal -> nonempty_list(string_literal_component)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: BOOL TYPEDEF LNAME TYPE ASM LPAREN STRING_LITERAL RPAREN WHILE
##
## Ends in an error in state: 702.
##
## init_declarator(declarator_typedefname) -> declarator_typedefname asm_register . [ SEMICOLON COMMA ]
## init_declarator(declarator_typedefname) -> declarator_typedefname asm_register . EQ initializer_ [ SEMICOLON COMMA ]
##
## The known suffix of the stack is as follows:
## declarator_typedefname asm_register
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: BOOL LNAME TYPE EQ STRING_LITERAL RPAREN
##
## Ends in an error in state: 710.
##
## init_declarator_list(declarator_varname) -> init_declarator_list(declarator_varname) . COMMA init_declarator(declarator_varname) [ SEMICOLON COMMA ]
## option(init_declarator_list(declarator_varname)) -> init_declarator_list(declarator_varname) . [ SEMICOLON ]
##
## The known suffix of the stack is as follows:
## init_declarator_list(declarator_varname)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 100, spurious reduction of production nonempty_list(string_literal_component) -> string_literal_component
## In state 104, spurious reduction of production string_literal -> nonempty_list(string_literal_component)
## In state 196, spurious reduction of production start_ignore ->
## In state 197, spurious reduction of production primary_expression -> string_literal start_ignore
## In state 198, spurious reduction of production postfix_expression -> primary_expression
## In state 199, spurious reduction of production unary_expression -> postfix_expression
## In state 205, spurious reduction of production cast_expression -> unary_expression
## In state 228, spurious reduction of production multiplicative_expression -> cast_expression
## In state 220, spurious reduction of production additive_expression -> multiplicative_expression
## In state 239, spurious reduction of production shift_expression -> additive_expression
## In state 218, spurious reduction of production relational_expression -> shift_expression
## In state 236, spurious reduction of production equality_expression -> relational_expression
## In state 254, spurious reduction of production _AND_expression -> equality_expression
## In state 262, spurious reduction of production exclusive_OR_expression -> _AND_expression
## In state 263, spurious reduction of production inclusive_OR_expression -> exclusive_OR_expression
## In state 264, spurious reduction of production logical_AND_expression -> inclusive_OR_expression
## In state 248, spurious reduction of production logical_OR_expression -> logical_AND_expression
## In state 246, spurious reduction of production conditional_expression -> logical_OR_expression
## In state 269, spurious reduction of production assignment_expression -> conditional_expression
## In state 539, spurious reduction of production initializer_ -> assignment_expression
## In state 715, spurious reduction of production init_declarator(declarator_varname) -> declarator_varname EQ initializer_
## In state 719, spurious reduction of production init_declarator_list(declarator_varname) -> init_declarator(declarator_varname)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: BOOL LNAME TYPE BOOL LNAME TYPE VOLATILE
##
## Ends in an error in state: 713.
##
## init_declarator(declarator_varname) -> declarator_varname . [ SEMICOLON COMMA ]
## init_declarator(declarator_varname) -> declarator_varname . asm_register [ SEMICOLON COMMA ]
## init_declarator(declarator_varname) -> declarator_varname . EQ initializer_ [ SEMICOLON COMMA ]
## init_declarator(declarator_varname) -> declarator_varname . asm_register EQ initializer_ [ SEMICOLON COMMA ]
##
## The known suffix of the stack is as follows:
## declarator_varname
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 314, spurious reduction of production direct_declarator -> general_identifier
## In state 391, spurious reduction of production declarator -> direct_declarator
## In state 423, spurious reduction of production declarator_varname -> declarator
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: BOOL LNAME TYPE ASM LPAREN STRING_LITERAL RPAREN WHILE
##
## Ends in an error in state: 716.
##
## init_declarator(declarator_varname) -> declarator_varname asm_register . [ SEMICOLON COMMA ]
## init_declarator(declarator_varname) -> declarator_varname asm_register . EQ initializer_ [ SEMICOLON COMMA ]
##
## The known suffix of the stack is as follows:
## declarator_varname asm_register
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: INLINE STAR
##
## Ends in an error in state: 720.
##
## list_eq1(attribute_type_specifier_unique,declaration_specifier) -> declaration_specifier . list_eq1(attribute_type_specifier_unique,declaration_specifier) [ UNAME STAR SEMICOLON LPAREN LNAME ]
## list_eq1_eq1(TYPEDEF,attribute_type_specifier_unique,declaration_specifier) -> declaration_specifier . list_eq1_eq1(TYPEDEF,attribute_type_specifier_unique,declaration_specifier) [ UNAME STAR SEMICOLON LPAREN LNAME ]
## list_eq1_ge1(TYPEDEF,attribute_type_specifier_nonunique,declaration_specifier) -> declaration_specifier . list_eq1_ge1(TYPEDEF,attribute_type_specifier_nonunique,declaration_specifier) [ UNAME STAR SEMICOLON LPAREN LNAME ]
## list_ge1(attribute_type_specifier_nonunique,declaration_specifier) -> declaration_specifier . list_ge1(attribute_type_specifier_nonunique,declaration_specifier) [ UNAME STAR SEMICOLON LPAREN LNAME ]
##
## The known suffix of the stack is as follows:
## declaration_specifier
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 344, spurious reduction of production declaration_specifier -> function_specifier
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: BOOL RPAREN
##
## Ends in an error in state: 723.
##
## list_eq1(attribute_type_specifier_unique,declaration_specifier) -> attribute_type_specifier_unique . list(declaration_specifier) [ UNAME STAR SEMICOLON LPAREN LNAME ]
## list_eq1_eq1(TYPEDEF,attribute_type_specifier_unique,declaration_specifier) -> attribute_type_specifier_unique . list_eq1(TYPEDEF,declaration_specifier) [ UNAME STAR SEMICOLON LPAREN LNAME ]
##
## The known suffix of the stack is as follows:
## attribute_type_specifier_unique
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 170, spurious reduction of production attribute_type_specifier_unique -> type_specifier_unique
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: BOOL INLINE VOID
##
## Ends in an error in state: 727.
##
## list(declaration_specifier) -> declaration_specifier . list(declaration_specifier) [ UNAME STAR SEMICOLON LPAREN LNAME ]
## list_eq1(TYPEDEF,declaration_specifier) -> declaration_specifier . list_eq1(TYPEDEF,declaration_specifier) [ UNAME STAR SEMICOLON LPAREN LNAME ]
##
## The known suffix of the stack is as follows:
## declaration_specifier
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 344, spurious reduction of production declaration_specifier -> function_specifier
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: CHAR RPAREN
##
## Ends in an error in state: 729.
##
## list_eq1_ge1(TYPEDEF,attribute_type_specifier_nonunique,declaration_specifier) -> attribute_type_specifier_nonunique . list_eq1(TYPEDEF,declaration_specifier) [ UNAME STAR SEMICOLON LPAREN LNAME ]
## list_eq1_ge1(TYPEDEF,attribute_type_specifier_nonunique,declaration_specifier) -> attribute_type_specifier_nonunique . list_eq1_ge1(TYPEDEF,attribute_type_specifier_nonunique,declaration_specifier) [ UNAME STAR SEMICOLON LPAREN LNAME ]
## list_ge1(attribute_type_specifier_nonunique,declaration_specifier) -> attribute_type_specifier_nonunique . list(declaration_specifier) [ UNAME STAR SEMICOLON LPAREN LNAME ]
## list_ge1(attribute_type_specifier_nonunique,declaration_specifier) -> attribute_type_specifier_nonunique . list_ge1(attribute_type_specifier_nonunique,declaration_specifier) [ UNAME STAR SEMICOLON LPAREN LNAME ]
##
## The known suffix of the stack is as follows:
## attribute_type_specifier_nonunique
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 174, spurious reduction of production attribute_type_specifier_nonunique -> type_specifier_nonunique
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: CHAR TYPEDEF WHILE
##
## Ends in an error in state: 730.
##
## list_eq1(TYPEDEF,declaration_specifier) -> TYPEDEF . list(declaration_specifier) [ UNAME STAR SEMICOLON LPAREN LNAME ]
## list_eq1_ge1(TYPEDEF,attribute_type_specifier_nonunique,declaration_specifier) -> TYPEDEF . list_ge1(attribute_type_specifier_nonunique,declaration_specifier) [ UNAME STAR SEMICOLON LPAREN LNAME ]
##
## The known suffix of the stack is as follows:
## TYPEDEF
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: CHAR INLINE VOID
##
## Ends in an error in state: 733.
##
## list(declaration_specifier) -> declaration_specifier . list(declaration_specifier) [ UNAME STAR SEMICOLON LPAREN LNAME ]
## list_eq1(TYPEDEF,declaration_specifier) -> declaration_specifier . list_eq1(TYPEDEF,declaration_specifier) [ UNAME STAR SEMICOLON LPAREN LNAME ]
## list_eq1_ge1(TYPEDEF,attribute_type_specifier_nonunique,declaration_specifier) -> declaration_specifier . list_eq1_ge1(TYPEDEF,attribute_type_specifier_nonunique,declaration_specifier) [ UNAME STAR SEMICOLON LPAREN LNAME ]
## list_ge1(attribute_type_specifier_nonunique,declaration_specifier) -> declaration_specifier . list_ge1(attribute_type_specifier_nonunique,declaration_specifier) [ UNAME STAR SEMICOLON LPAREN LNAME ]
##
## The known suffix of the stack is as follows:
## declaration_specifier
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 344, spurious reduction of production declaration_specifier -> function_specifier
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ALIGNAS LPAREN LPAREN LBRACE SEMICOLON RBRACES
##
## Ends in an error in state: 735.
##
## block_item_list -> block_item_list . block_item [ WHILE VOLATILE VOID VA_START VA_END VA_COPY VA_ARG UNSIGNED UNION UNAME TYPEOF TYPEDEF TILDE THREAD_LOCAL SWITCH STRUCT STRING_LITERAL STATIC_ASSERT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRINT_TYPE PLUS_PLUS PLUS OFFSETOF NORETURN MINUS_MINUS MINUS LPAREN LONG LNAME LBRACK_LBRACK LBRACES LBRACE INT INLINE IF GOTO GENERIC FOR FLOAT EXTERN ENUM DOUBLE DO DEFAULT CONTINUE CONSTANT CONST COMPLEX CHAR CERB_MAGIC CASE BUILTIN_TYPES_COMPATIBLE_P BUILTIN_CHOOSE_EXPR BREAK BOOL BMC_ASSUME BANG AUTO ATOMIC ASSERT ASM AMPERSAND ALIGNOF ALIGNAS ]
## option(block_item_list) -> block_item_list . [ RBRACE ]
##
## The known suffix of the stack is as follows:
## block_item_list
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ALIGNAS LPAREN LPAREN LBRACE LBRACK_LBRACK ALIGNAS RBRACK RBRACK VARIABLE
##
## Ends in an error in state: 737.
##
## attribute_declaration -> attribute_specifier_sequence . SEMICOLON [ WHILE VOLATILE VOID VA_START VA_END VA_COPY VA_ARG UNSIGNED UNION UNAME TYPEOF TYPEDEF TILDE THREAD_LOCAL SWITCH STRUCT STRING_LITERAL STATIC_ASSERT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRINT_TYPE PLUS_PLUS PLUS OFFSETOF NORETURN MINUS_MINUS MINUS LPAREN LONG LNAME LBRACK_LBRACK LBRACES LBRACE INT INLINE IF GOTO GENERIC FOR FLOAT EXTERN ENUM DOUBLE DO DEFAULT CONTINUE CONSTANT CONST COMPLEX CHAR CERB_MAGIC CASE BUILTIN_TYPES_COMPATIBLE_P BUILTIN_CHOOSE_EXPR BREAK BOOL BMC_ASSUME BANG AUTO ATOMIC ASSERT ASM AMPERSAND ALIGNOF ALIGNAS ]
## attribute_specifier_sequence -> attribute_specifier_sequence . attribute_specifier [ WHILE VOLATILE VOID VA_START VA_END VA_COPY VA_ARG UNSIGNED UNION UNAME TYPEOF TYPEDEF TILDE THREAD_LOCAL SWITCH STRUCT STRING_LITERAL STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER PRINT_TYPE PLUS_PLUS PLUS OFFSETOF NORETURN MINUS_MINUS MINUS LPAREN LONG LNAME LBRACK_LBRACK LBRACES LBRACE INT INLINE IF GOTO GENERIC FOR FLOAT EXTERN ENUM DOUBLE DO DEFAULT CONTINUE CONSTANT CONST COMPLEX CHAR CASE BUILTIN_TYPES_COMPATIBLE_P BUILTIN_CHOOSE_EXPR BREAK BOOL BMC_ASSUME BANG AUTO ATOMIC ASSERT AMPERSAND ALIGNOF ALIGNAS ]
## declaration -> attribute_specifier_sequence . declaration_specifiers option(init_declarator_list(declarator_varname)) SEMICOLON [ WHILE VOLATILE VOID VA_START VA_END VA_COPY VA_ARG UNSIGNED UNION UNAME TYPEOF TYPEDEF TILDE THREAD_LOCAL SWITCH STRUCT STRING_LITERAL STATIC_ASSERT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRINT_TYPE PLUS_PLUS PLUS OFFSETOF NORETURN MINUS_MINUS MINUS LPAREN LONG LNAME LBRACK_LBRACK LBRACES LBRACE INT INLINE IF GOTO GENERIC FOR FLOAT EXTERN ENUM DOUBLE DO DEFAULT CONTINUE CONSTANT CONST COMPLEX CHAR CERB_MAGIC CASE BUILTIN_TYPES_COMPATIBLE_P BUILTIN_CHOOSE_EXPR BREAK BOOL BMC_ASSUME BANG AUTO ATOMIC ASSERT ASM AMPERSAND ALIGNOF ALIGNAS ]
## declaration -> attribute_specifier_sequence . declaration_specifiers_typedef option(init_declarator_list(declarator_typedefname)) SEMICOLON [ WHILE VOLATILE VOID VA_START VA_END VA_COPY VA_ARG UNSIGNED UNION UNAME TYPEOF TYPEDEF TILDE THREAD_LOCAL SWITCH STRUCT STRING_LITERAL STATIC_ASSERT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRINT_TYPE PLUS_PLUS PLUS OFFSETOF NORETURN MINUS_MINUS MINUS LPAREN LONG LNAME LBRACK_LBRACK LBRACES LBRACE INT INLINE IF GOTO GENERIC FOR FLOAT EXTERN ENUM DOUBLE DO DEFAULT CONTINUE CONSTANT CONST COMPLEX CHAR CERB_MAGIC CASE BUILTIN_TYPES_COMPATIBLE_P BUILTIN_CHOOSE_EXPR BREAK BOOL BMC_ASSUME BANG AUTO ATOMIC ASSERT ASM AMPERSAND ALIGNOF ALIGNAS ]
## expression_statement -> attribute_specifier_sequence . full_expression SEMICOLON [ WHILE VOLATILE VOID VA_START VA_END VA_COPY VA_ARG UNSIGNED UNION UNAME TYPEOF TYPEDEF TILDE THREAD_LOCAL SWITCH STRUCT STRING_LITERAL STATIC_ASSERT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRINT_TYPE PLUS_PLUS PLUS OFFSETOF NORETURN MINUS_MINUS MINUS LPAREN LONG LNAME LBRACK_LBRACK LBRACES LBRACE INT INLINE IF GOTO GENERIC FOR FLOAT EXTERN ENUM DOUBLE DO DEFAULT CONTINUE CONSTANT CONST COMPLEX CHAR CERB_MAGIC CASE BUILTIN_TYPES_COMPATIBLE_P BUILTIN_CHOOSE_EXPR BREAK BOOL BMC_ASSUME BANG AUTO ATOMIC ASSERT ASM AMPERSAND ALIGNOF ALIGNAS ]
## labeled_statement -> attribute_specifier_sequence . general_identifier COLON statement [ WHILE VOLATILE VOID VA_START VA_END VA_COPY VA_ARG UNSIGNED UNION UNAME TYPEOF TYPEDEF TILDE THREAD_LOCAL SWITCH STRUCT STRING_LITERAL STATIC_ASSERT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRINT_TYPE PLUS_PLUS PLUS OFFSETOF NORETURN MINUS_MINUS MINUS LPAREN LONG LNAME LBRACK_LBRACK LBRACES LBRACE INT INLINE IF GOTO GENERIC FOR FLOAT EXTERN ENUM DOUBLE DO DEFAULT CONTINUE CONSTANT CONST COMPLEX CHAR CERB_MAGIC CASE BUILTIN_TYPES_COMPATIBLE_P BUILTIN_CHOOSE_EXPR BREAK BOOL BMC_ASSUME BANG AUTO ATOMIC ASSERT ASM AMPERSAND ALIGNOF ALIGNAS ]
## option(attribute_specifier_sequence) -> attribute_specifier_sequence . [ WHILE SWITCH RETURN LBRACES LBRACE IF GOTO FOR DO DEFAULT CONTINUE CASE BREAK ]
##
## The known suffix of the stack is as follows:
## attribute_specifier_sequence
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: LBRACK_LBRACK ALIGNAS RBRACK RBRACK TYPEDEF BOOL RPAREN
##
## Ends in an error in state: 739.
##
## declaration -> attribute_specifier_sequence declaration_specifiers_typedef . option(init_declarator_list(declarator_typedefname)) SEMICOLON [ WHILE VOLATILE VOID VA_START VA_END VA_COPY VA_ARG UNSIGNED UNION UNAME TYPEOF TYPEDEF TILDE THREAD_LOCAL SWITCH STRUCT STRING_LITERAL STATIC_ASSERT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRINT_TYPE PLUS_PLUS PLUS OFFSETOF NORETURN MINUS_MINUS MINUS LPAREN LONG LNAME LBRACK_LBRACK LBRACES LBRACE INT INLINE IF GOTO GENERIC FOR FLOAT EXTERN EOF ENUM DOUBLE DO DEFAULT CONTINUE CONSTANT CONST COMPLEX CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE CHAR CERB_MAGIC CASE BUILTIN_TYPES_COMPATIBLE_P BUILTIN_CHOOSE_EXPR BREAK BOOL BMC_ASSUME BANG AUTO ATOMIC ASSERT ASM AMPERSAND ALIGNOF ALIGNAS ]
##
## The known suffix of the stack is as follows:
## attribute_specifier_sequence declaration_specifiers_typedef
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 170, spurious reduction of production attribute_type_specifier_unique -> type_specifier_unique
## In state 378, spurious reduction of production list(declaration_specifier) ->
## In state 379, spurious reduction of production list_eq1(attribute_type_specifier_unique,declaration_specifier) -> attribute_type_specifier_unique list(declaration_specifier)
## In state 680, spurious reduction of production list_eq1_eq1(TYPEDEF,attribute_type_specifier_unique,declaration_specifier) -> TYPEDEF list_eq1(attribute_type_specifier_unique,declaration_specifier)
## In state 688, spurious reduction of production declaration_specifiers_typedef -> list_eq1_eq1(TYPEDEF,attribute_type_specifier_unique,declaration_specifier)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ALIGNAS LPAREN LPAREN LBRACE IF WHILE
##
## Ends in an error in state: 747.
##
## selection_statement -> IF . LPAREN full_expression RPAREN scoped(statement) [ WHILE VOLATILE VOID VA_START VA_END VA_COPY VA_ARG UNSIGNED UNION UNAME TYPEOF TYPEDEF TILDE THREAD_LOCAL SWITCH STRUCT STRING_LITERAL STATIC_ASSERT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACES RBRACE PRINT_TYPE PLUS_PLUS PLUS PIPES OFFSETOF NORETURN MINUS_MINUS MINUS LPAREN LONG LNAME LBRACK_LBRACK LBRACES LBRACE INT INLINE IF GOTO GENERIC FOR FLOAT EXTERN ENUM ELSE DOUBLE DO DEFAULT CONTINUE CONSTANT CONST COMPLEX CHAR CERB_MAGIC CASE BUILTIN_TYPES_COMPATIBLE_P BUILTIN_CHOOSE_EXPR BREAK BOOL BMC_ASSUME BANG AUTO ATOMIC ASSERT ASM AMPERSAND ALIGNOF ALIGNAS ]
## selection_statement -> IF . LPAREN full_expression RPAREN scoped(statement) ELSE scoped(statement) [ WHILE VOLATILE VOID VA_START VA_END VA_COPY VA_ARG UNSIGNED UNION UNAME TYPEOF TYPEDEF TILDE THREAD_LOCAL SWITCH STRUCT STRING_LITERAL STATIC_ASSERT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACES RBRACE PRINT_TYPE PLUS_PLUS PLUS PIPES OFFSETOF NORETURN MINUS_MINUS MINUS LPAREN LONG LNAME LBRACK_LBRACK LBRACES LBRACE INT INLINE IF GOTO GENERIC FOR FLOAT EXTERN ENUM ELSE DOUBLE DO DEFAULT CONTINUE CONSTANT CONST COMPLEX CHAR CERB_MAGIC CASE BUILTIN_TYPES_COMPATIBLE_P BUILTIN_CHOOSE_EXPR BREAK BOOL BMC_ASSUME BANG AUTO ATOMIC ASSERT ASM AMPERSAND ALIGNOF ALIGNAS ]
##
## The known suffix of the stack is as follows:
## IF
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ALIGNAS LPAREN LPAREN LBRACE IF LPAREN WHILE
##
## Ends in an error in state: 748.
##
## selection_statement -> IF LPAREN . full_expression RPAREN scoped(statement) [ WHILE VOLATILE VOID VA_START VA_END VA_COPY VA_ARG UNSIGNED UNION UNAME TYPEOF TYPEDEF TILDE THREAD_LOCAL SWITCH STRUCT STRING_LITERAL STATIC_ASSERT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACES RBRACE PRINT_TYPE PLUS_PLUS PLUS PIPES OFFSETOF NORETURN MINUS_MINUS MINUS LPAREN LONG LNAME LBRACK_LBRACK LBRACES LBRACE INT INLINE IF GOTO GENERIC FOR FLOAT EXTERN ENUM ELSE DOUBLE DO DEFAULT CONTINUE CONSTANT CONST COMPLEX CHAR CERB_MAGIC CASE BUILTIN_TYPES_COMPATIBLE_P BUILTIN_CHOOSE_EXPR BREAK BOOL BMC_ASSUME BANG AUTO ATOMIC ASSERT ASM AMPERSAND ALIGNOF ALIGNAS ]
## selection_statement -> IF LPAREN . full_expression RPAREN scoped(statement) ELSE scoped(statement) [ WHILE VOLATILE VOID VA_START VA_END VA_COPY VA_ARG UNSIGNED UNION UNAME TYPEOF TYPEDEF TILDE THREAD_LOCAL SWITCH STRUCT STRING_LITERAL STATIC_ASSERT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACES RBRACE PRINT_TYPE PLUS_PLUS PLUS PIPES OFFSETOF NORETURN MINUS_MINUS MINUS LPAREN LONG LNAME LBRACK_LBRACK LBRACES LBRACE INT INLINE IF GOTO GENERIC FOR FLOAT EXTERN ENUM ELSE DOUBLE DO DEFAULT CONTINUE CONSTANT CONST COMPLEX CHAR CERB_MAGIC CASE BUILTIN_TYPES_COMPATIBLE_P BUILTIN_CHOOSE_EXPR BREAK BOOL BMC_ASSUME BANG AUTO ATOMIC ASSERT ASM AMPERSAND ALIGNOF ALIGNAS ]
##
## The known suffix of the stack is as follows:
## IF LPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ALIGNAS LPAREN LPAREN LBRACE IF LPAREN STRING_LITERAL SEMICOLON
##
## Ends in an error in state: 749.
##
## selection_statement -> IF LPAREN full_expression . RPAREN scoped(statement) [ WHILE VOLATILE VOID VA_START VA_END VA_COPY VA_ARG UNSIGNED UNION UNAME TYPEOF TYPEDEF TILDE THREAD_LOCAL SWITCH STRUCT STRING_LITERAL STATIC_ASSERT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACES RBRACE PRINT_TYPE PLUS_PLUS PLUS PIPES OFFSETOF NORETURN MINUS_MINUS MINUS LPAREN LONG LNAME LBRACK_LBRACK LBRACES LBRACE INT INLINE IF GOTO GENERIC FOR FLOAT EXTERN ENUM ELSE DOUBLE DO DEFAULT CONTINUE CONSTANT CONST COMPLEX CHAR CERB_MAGIC CASE BUILTIN_TYPES_COMPATIBLE_P BUILTIN_CHOOSE_EXPR BREAK BOOL BMC_ASSUME BANG AUTO ATOMIC ASSERT ASM AMPERSAND ALIGNOF ALIGNAS ]
## selection_statement -> IF LPAREN full_expression . RPAREN scoped(statement) ELSE scoped(statement) [ WHILE VOLATILE VOID VA_START VA_END VA_COPY VA_ARG UNSIGNED UNION UNAME TYPEOF TYPEDEF TILDE THREAD_LOCAL SWITCH STRUCT STRING_LITERAL STATIC_ASSERT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACES RBRACE PRINT_TYPE PLUS_PLUS PLUS PIPES OFFSETOF NORETURN MINUS_MINUS MINUS LPAREN LONG LNAME LBRACK_LBRACK LBRACES LBRACE INT INLINE IF GOTO GENERIC FOR FLOAT EXTERN ENUM ELSE DOUBLE DO DEFAULT CONTINUE CONSTANT CONST COMPLEX CHAR CERB_MAGIC CASE BUILTIN_TYPES_COMPATIBLE_P BUILTIN_CHOOSE_EXPR BREAK BOOL BMC_ASSUME BANG AUTO ATOMIC ASSERT ASM AMPERSAND ALIGNOF ALIGNAS ]
##
## The known suffix of the stack is as follows:
## IF LPAREN full_expression
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 100, spurious reduction of production nonempty_list(string_literal_component) -> string_literal_component
## In state 104, spurious reduction of production string_literal -> nonempty_list(string_literal_component)
## In state 196, spurious reduction of production start_ignore ->
## In state 197, spurious reduction of production primary_expression -> string_literal start_ignore
## In state 198, spurious reduction of production postfix_expression -> primary_expression
## In state 199, spurious reduction of production unary_expression -> postfix_expression
## In state 205, spurious reduction of production cast_expression -> unary_expression
## In state 228, spurious reduction of production multiplicative_expression -> cast_expression
## In state 220, spurious reduction of production additive_expression -> multiplicative_expression
## In state 239, spurious reduction of production shift_expression -> additive_expression
## In state 218, spurious reduction of production relational_expression -> shift_expression
## In state 236, spurious reduction of production equality_expression -> relational_expression
## In state 254, spurious reduction of production _AND_expression -> equality_expression
## In state 262, spurious reduction of production exclusive_OR_expression -> _AND_expression
## In state 263, spurious reduction of production inclusive_OR_expression -> exclusive_OR_expression
## In state 264, spurious reduction of production logical_AND_expression -> inclusive_OR_expression
## In state 248, spurious reduction of production logical_OR_expression -> logical_AND_expression
## In state 246, spurious reduction of production conditional_expression -> logical_OR_expression
## In state 269, spurious reduction of production assignment_expression -> conditional_expression
## In state 273, spurious reduction of production expression -> assignment_expression
## In state 627, spurious reduction of production end_ignore ->
## In state 628, spurious reduction of production full_expression -> expression end_ignore
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ALIGNAS LPAREN LPAREN LBRACE IF LPAREN STRING_LITERAL RPAREN SEMICOLON VARIABLE
##
## Ends in an error in state: 751.
##
## selection_statement -> IF LPAREN full_expression RPAREN scoped(statement) . [ WHILE VOLATILE VOID VA_START VA_END VA_COPY VA_ARG UNSIGNED UNION UNAME TYPEOF TYPEDEF TILDE THREAD_LOCAL SWITCH STRUCT STRING_LITERAL STATIC_ASSERT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACES RBRACE PRINT_TYPE PLUS_PLUS PLUS PIPES OFFSETOF NORETURN MINUS_MINUS MINUS LPAREN LONG LNAME LBRACK_LBRACK LBRACES LBRACE INT INLINE IF GOTO GENERIC FOR FLOAT EXTERN ENUM ELSE DOUBLE DO DEFAULT CONTINUE CONSTANT CONST COMPLEX CHAR CERB_MAGIC CASE BUILTIN_TYPES_COMPATIBLE_P BUILTIN_CHOOSE_EXPR BREAK BOOL BMC_ASSUME BANG AUTO ATOMIC ASSERT ASM AMPERSAND ALIGNOF ALIGNAS ]
## selection_statement -> IF LPAREN full_expression RPAREN scoped(statement) . ELSE scoped(statement) [ WHILE VOLATILE VOID VA_START VA_END VA_COPY VA_ARG UNSIGNED UNION UNAME TYPEOF TYPEDEF TILDE THREAD_LOCAL SWITCH STRUCT STRING_LITERAL STATIC_ASSERT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACES RBRACE PRINT_TYPE PLUS_PLUS PLUS PIPES OFFSETOF NORETURN MINUS_MINUS MINUS LPAREN LONG LNAME LBRACK_LBRACK LBRACES LBRACE INT INLINE IF GOTO GENERIC FOR FLOAT EXTERN ENUM ELSE DOUBLE DO DEFAULT CONTINUE CONSTANT CONST COMPLEX CHAR CERB_MAGIC CASE BUILTIN_TYPES_COMPATIBLE_P BUILTIN_CHOOSE_EXPR BREAK BOOL BMC_ASSUME BANG AUTO ATOMIC ASSERT ASM AMPERSAND ALIGNOF ALIGNAS ]
##
## The known suffix of the stack is as follows:
## IF LPAREN full_expression RPAREN scoped(statement)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ALIGNAS LPAREN LPAREN LBRACE FOR WHILE
##
## Ends in an error in state: 754.
##
## iteration_statement -> FOR . LPAREN option(full_expression) SEMICOLON option(full_expression) SEMICOLON option(full_expression) RPAREN magic_comment_list scoped(statement) [ WHILE VOLATILE VOID VA_START VA_END VA_COPY VA_ARG UNSIGNED UNION UNAME TYPEOF TYPEDEF TILDE THREAD_LOCAL SWITCH STRUCT STRING_LITERAL STATIC_ASSERT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACES RBRACE PRINT_TYPE PLUS_PLUS PLUS PIPES OFFSETOF NORETURN MINUS_MINUS MINUS LPAREN LONG LNAME LBRACK_LBRACK LBRACES LBRACE INT INLINE IF GOTO GENERIC FOR FLOAT EXTERN ENUM ELSE DOUBLE DO DEFAULT CONTINUE CONSTANT CONST COMPLEX CHAR CERB_MAGIC CASE BUILTIN_TYPES_COMPATIBLE_P BUILTIN_CHOOSE_EXPR BREAK BOOL BMC_ASSUME BANG AUTO ATOMIC ASSERT ASM AMPERSAND ALIGNOF ALIGNAS ]
## iteration_statement -> FOR . LPAREN declaration option(full_expression) SEMICOLON option(full_expression) RPAREN scoped(statement) [ WHILE VOLATILE VOID VA_START VA_END VA_COPY VA_ARG UNSIGNED UNION UNAME TYPEOF TYPEDEF TILDE THREAD_LOCAL SWITCH STRUCT STRING_LITERAL STATIC_ASSERT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACES RBRACE PRINT_TYPE PLUS_PLUS PLUS PIPES OFFSETOF NORETURN MINUS_MINUS MINUS LPAREN LONG LNAME LBRACK_LBRACK LBRACES LBRACE INT INLINE IF GOTO GENERIC FOR FLOAT EXTERN ENUM ELSE DOUBLE DO DEFAULT CONTINUE CONSTANT CONST COMPLEX CHAR CERB_MAGIC CASE BUILTIN_TYPES_COMPATIBLE_P BUILTIN_CHOOSE_EXPR BREAK BOOL BMC_ASSUME BANG AUTO ATOMIC ASSERT ASM AMPERSAND ALIGNOF ALIGNAS ]
##
## The known suffix of the stack is as follows:
## FOR
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ALIGNAS LPAREN LPAREN LBRACE FOR LPAREN WHILE
##
## Ends in an error in state: 755.
##
## iteration_statement -> FOR LPAREN . option(full_expression) SEMICOLON option(full_expression) SEMICOLON option(full_expression) RPAREN magic_comment_list scoped(statement) [ WHILE VOLATILE VOID VA_START VA_END VA_COPY VA_ARG UNSIGNED UNION UNAME TYPEOF TYPEDEF TILDE THREAD_LOCAL SWITCH STRUCT STRING_LITERAL STATIC_ASSERT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACES RBRACE PRINT_TYPE PLUS_PLUS PLUS PIPES OFFSETOF NORETURN MINUS_MINUS MINUS LPAREN LONG LNAME LBRACK_LBRACK LBRACES LBRACE INT INLINE IF GOTO GENERIC FOR FLOAT EXTERN ENUM ELSE DOUBLE DO DEFAULT CONTINUE CONSTANT CONST COMPLEX CHAR CERB_MAGIC CASE BUILTIN_TYPES_COMPATIBLE_P BUILTIN_CHOOSE_EXPR BREAK BOOL BMC_ASSUME BANG AUTO ATOMIC ASSERT ASM AMPERSAND ALIGNOF ALIGNAS ]
## iteration_statement -> FOR LPAREN . declaration option(full_expression) SEMICOLON option(full_expression) RPAREN scoped(statement) [ WHILE VOLATILE VOID VA_START VA_END VA_COPY VA_ARG UNSIGNED UNION UNAME TYPEOF TYPEDEF TILDE THREAD_LOCAL SWITCH STRUCT STRING_LITERAL STATIC_ASSERT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACES RBRACE PRINT_TYPE PLUS_PLUS PLUS PIPES OFFSETOF NORETURN MINUS_MINUS MINUS LPAREN LONG LNAME LBRACK_LBRACK LBRACES LBRACE INT INLINE IF GOTO GENERIC FOR FLOAT EXTERN ENUM ELSE DOUBLE DO DEFAULT CONTINUE CONSTANT CONST COMPLEX CHAR CERB_MAGIC CASE BUILTIN_TYPES_COMPATIBLE_P BUILTIN_CHOOSE_EXPR BREAK BOOL BMC_ASSUME BANG AUTO ATOMIC ASSERT ASM AMPERSAND ALIGNOF ALIGNAS ]
##
## The known suffix of the stack is as follows:
## FOR LPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ALIGNAS LPAREN LPAREN LBRACE FOR LPAREN STRING_LITERAL RPAREN
##
## Ends in an error in state: 756.
##
## iteration_statement -> FOR LPAREN option(full_expression) . SEMICOLON option(full_expression) SEMICOLON option(full_expression) RPAREN magic_comment_list scoped(statement) [ WHILE VOLATILE VOID VA_START VA_END VA_COPY VA_ARG UNSIGNED UNION UNAME TYPEOF TYPEDEF TILDE THREAD_LOCAL SWITCH STRUCT STRING_LITERAL STATIC_ASSERT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACES RBRACE PRINT_TYPE PLUS_PLUS PLUS PIPES OFFSETOF NORETURN MINUS_MINUS MINUS LPAREN LONG LNAME LBRACK_LBRACK LBRACES LBRACE INT INLINE IF GOTO GENERIC FOR FLOAT EXTERN ENUM ELSE DOUBLE DO DEFAULT CONTINUE CONSTANT CONST COMPLEX CHAR CERB_MAGIC CASE BUILTIN_TYPES_COMPATIBLE_P BUILTIN_CHOOSE_EXPR BREAK BOOL BMC_ASSUME BANG AUTO ATOMIC ASSERT ASM AMPERSAND ALIGNOF ALIGNAS ]
##
## The known suffix of the stack is as follows:
## FOR LPAREN option(full_expression)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 100, spurious reduction of production nonempty_list(string_literal_component) -> string_literal_component
## In state 104, spurious reduction of production string_literal -> nonempty_list(string_literal_component)
## In state 196, spurious reduction of production start_ignore ->
## In state 197, spurious reduction of production primary_expression -> string_literal start_ignore
## In state 198, spurious reduction of production postfix_expression -> primary_expression
## In state 199, spurious reduction of production unary_expression -> postfix_expression
## In state 205, spurious reduction of production cast_expression -> unary_expression
## In state 228, spurious reduction of production multiplicative_expression -> cast_expression
## In state 220, spurious reduction of production additive_expression -> multiplicative_expression
## In state 239, spurious reduction of production shift_expression -> additive_expression
## In state 218, spurious reduction of production relational_expression -> shift_expression
## In state 236, spurious reduction of production equality_expression -> relational_expression
## In state 254, spurious reduction of production _AND_expression -> equality_expression
## In state 262, spurious reduction of production exclusive_OR_expression -> _AND_expression
## In state 263, spurious reduction of production inclusive_OR_expression -> exclusive_OR_expression
## In state 264, spurious reduction of production logical_AND_expression -> inclusive_OR_expression
## In state 248, spurious reduction of production logical_OR_expression -> logical_AND_expression
## In state 246, spurious reduction of production conditional_expression -> logical_OR_expression
## In state 269, spurious reduction of production assignment_expression -> conditional_expression
## In state 273, spurious reduction of production expression -> assignment_expression
## In state 627, spurious reduction of production end_ignore ->
## In state 628, spurious reduction of production full_expression -> expression end_ignore
## In state 626, spurious reduction of production option(full_expression) -> full_expression
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ALIGNAS LPAREN LPAREN LBRACE FOR LPAREN SEMICOLON STRING_LITERAL RPAREN
##
## Ends in an error in state: 758.
##
## iteration_statement -> FOR LPAREN option(full_expression) SEMICOLON option(full_expression) . SEMICOLON option(full_expression) RPAREN magic_comment_list scoped(statement) [ WHILE VOLATILE VOID VA_START VA_END VA_COPY VA_ARG UNSIGNED UNION UNAME TYPEOF TYPEDEF TILDE THREAD_LOCAL SWITCH STRUCT STRING_LITERAL STATIC_ASSERT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACES RBRACE PRINT_TYPE PLUS_PLUS PLUS PIPES OFFSETOF NORETURN MINUS_MINUS MINUS LPAREN LONG LNAME LBRACK_LBRACK LBRACES LBRACE INT INLINE IF GOTO GENERIC FOR FLOAT EXTERN ENUM ELSE DOUBLE DO DEFAULT CONTINUE CONSTANT CONST COMPLEX CHAR CERB_MAGIC CASE BUILTIN_TYPES_COMPATIBLE_P BUILTIN_CHOOSE_EXPR BREAK BOOL BMC_ASSUME BANG AUTO ATOMIC ASSERT ASM AMPERSAND ALIGNOF ALIGNAS ]
##
## The known suffix of the stack is as follows:
## FOR LPAREN option(full_expression) SEMICOLON option(full_expression)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 100, spurious reduction of production nonempty_list(string_literal_component) -> string_literal_component
## In state 104, spurious reduction of production string_literal -> nonempty_list(string_literal_component)
## In state 196, spurious reduction of production start_ignore ->
## In state 197, spurious reduction of production primary_expression -> string_literal start_ignore
## In state 198, spurious reduction of production postfix_expression -> primary_expression
## In state 199, spurious reduction of production unary_expression -> postfix_expression
## In state 205, spurious reduction of production cast_expression -> unary_expression
## In state 228, spurious reduction of production multiplicative_expression -> cast_expression
## In state 220, spurious reduction of production additive_expression -> multiplicative_expression
## In state 239, spurious reduction of production shift_expression -> additive_expression
## In state 218, spurious reduction of production relational_expression -> shift_expression
## In state 236, spurious reduction of production equality_expression -> relational_expression
## In state 254, spurious reduction of production _AND_expression -> equality_expression
## In state 262, spurious reduction of production exclusive_OR_expression -> _AND_expression
## In state 263, spurious reduction of production inclusive_OR_expression -> exclusive_OR_expression
## In state 264, spurious reduction of production logical_AND_expression -> inclusive_OR_expression
## In state 248, spurious reduction of production logical_OR_expression -> logical_AND_expression
## In state 246, spurious reduction of production conditional_expression -> logical_OR_expression
## In state 269, spurious reduction of production assignment_expression -> conditional_expression
## In state 273, spurious reduction of production expression -> assignment_expression
## In state 627, spurious reduction of production end_ignore ->
## In state 628, spurious reduction of production full_expression -> expression end_ignore
## In state 626, spurious reduction of production option(full_expression) -> full_expression
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ALIGNAS LPAREN LPAREN LBRACE FOR LPAREN SEMICOLON SEMICOLON STRING_LITERAL SEMICOLON
##
## Ends in an error in state: 760.
##
## iteration_statement -> FOR LPAREN option(full_expression) SEMICOLON option(full_expression) SEMICOLON option(full_expression) . RPAREN magic_comment_list scoped(statement) [ WHILE VOLATILE VOID VA_START VA_END VA_COPY VA_ARG UNSIGNED UNION UNAME TYPEOF TYPEDEF TILDE THREAD_LOCAL SWITCH STRUCT STRING_LITERAL STATIC_ASSERT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACES RBRACE PRINT_TYPE PLUS_PLUS PLUS PIPES OFFSETOF NORETURN MINUS_MINUS MINUS LPAREN LONG LNAME LBRACK_LBRACK LBRACES LBRACE INT INLINE IF GOTO GENERIC FOR FLOAT EXTERN ENUM ELSE DOUBLE DO DEFAULT CONTINUE CONSTANT CONST COMPLEX CHAR CERB_MAGIC CASE BUILTIN_TYPES_COMPATIBLE_P BUILTIN_CHOOSE_EXPR BREAK BOOL BMC_ASSUME BANG AUTO ATOMIC ASSERT ASM AMPERSAND ALIGNOF ALIGNAS ]
##
## The known suffix of the stack is as follows:
## FOR LPAREN option(full_expression) SEMICOLON option(full_expression) SEMICOLON option(full_expression)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 100, spurious reduction of production nonempty_list(string_literal_component) -> string_literal_component
## In state 104, spurious reduction of production string_literal -> nonempty_list(string_literal_component)
## In state 196, spurious reduction of production start_ignore ->
## In state 197, spurious reduction of production primary_expression -> string_literal start_ignore
## In state 198, spurious reduction of production postfix_expression -> primary_expression
## In state 199, spurious reduction of production unary_expression -> postfix_expression
## In state 205, spurious reduction of production cast_expression -> unary_expression
## In state 228, spurious reduction of production multiplicative_expression -> cast_expression
## In state 220, spurious reduction of production additive_expression -> multiplicative_expression
## In state 239, spurious reduction of production shift_expression -> additive_expression
## In state 218, spurious reduction of production relational_expression -> shift_expression
## In state 236, spurious reduction of production equality_expression -> relational_expression
## In state 254, spurious reduction of production _AND_expression -> equality_expression
## In state 262, spurious reduction of production exclusive_OR_expression -> _AND_expression
## In state 263, spurious reduction of production inclusive_OR_expression -> exclusive_OR_expression
## In state 264, spurious reduction of production logical_AND_expression -> inclusive_OR_expression
## In state 248, spurious reduction of production logical_OR_expression -> logical_AND_expression
## In state 246, spurious reduction of production conditional_expression -> logical_OR_expression
## In state 269, spurious reduction of production assignment_expression -> conditional_expression
## In state 273, spurious reduction of production expression -> assignment_expression
## In state 627, spurious reduction of production end_ignore ->
## In state 628, spurious reduction of production full_expression -> expression end_ignore
## In state 626, spurious reduction of production option(full_expression) -> full_expression
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ALIGNAS LPAREN LPAREN LBRACE FOR LPAREN SEMICOLON SEMICOLON RPAREN VOLATILE
##
## Ends in an error in state: 762.
##
## iteration_statement -> FOR LPAREN option(full_expression) SEMICOLON option(full_expression) SEMICOLON option(full_expression) RPAREN magic_comment_list . scoped(statement) [ WHILE VOLATILE VOID VA_START VA_END VA_COPY VA_ARG UNSIGNED UNION UNAME TYPEOF TYPEDEF TILDE THREAD_LOCAL SWITCH STRUCT STRING_LITERAL STATIC_ASSERT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACES RBRACE PRINT_TYPE PLUS_PLUS PLUS PIPES OFFSETOF NORETURN MINUS_MINUS MINUS LPAREN LONG LNAME LBRACK_LBRACK LBRACES LBRACE INT INLINE IF GOTO GENERIC FOR FLOAT EXTERN ENUM ELSE DOUBLE DO DEFAULT CONTINUE CONSTANT CONST COMPLEX CHAR CERB_MAGIC CASE BUILTIN_TYPES_COMPATIBLE_P BUILTIN_CHOOSE_EXPR BREAK BOOL BMC_ASSUME BANG AUTO ATOMIC ASSERT ASM AMPERSAND ALIGNOF ALIGNAS ]
## magic_comment_list -> magic_comment_list . CERB_MAGIC [ WHILE VA_START VA_END VA_COPY VA_ARG UNAME TILDE SWITCH STRING_LITERAL STAR SIZEOF SEMICOLON RETURN PRINT_TYPE PLUS_PLUS PLUS OFFSETOF MINUS_MINUS MINUS LPAREN LNAME LBRACK_LBRACK LBRACES LBRACE IF GOTO GENERIC FOR DO DEFAULT CONTINUE CONSTANT CERB_MAGIC CASE BUILTIN_TYPES_COMPATIBLE_P BUILTIN_CHOOSE_EXPR BREAK BMC_ASSUME BANG ASSERT ASM AMPERSAND ALIGNOF ]
##
## The known suffix of the stack is as follows:
## FOR LPAREN option(full_expression) SEMICOLON option(full_expression) SEMICOLON option(full_expression) RPAREN magic_comment_list
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ALIGNAS LPAREN LPAREN LBRACE FOR LPAREN BOOL SEMICOLON STRING_LITERAL RPAREN
##
## Ends in an error in state: 765.
##
## iteration_statement -> FOR LPAREN declaration option(full_expression) . SEMICOLON option(full_expression) RPAREN scoped(statement) [ WHILE VOLATILE VOID VA_START VA_END VA_COPY VA_ARG UNSIGNED UNION UNAME TYPEOF TYPEDEF TILDE THREAD_LOCAL SWITCH STRUCT STRING_LITERAL STATIC_ASSERT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACES RBRACE PRINT_TYPE PLUS_PLUS PLUS PIPES OFFSETOF NORETURN MINUS_MINUS MINUS LPAREN LONG LNAME LBRACK_LBRACK LBRACES LBRACE INT INLINE IF GOTO GENERIC FOR FLOAT EXTERN ENUM ELSE DOUBLE DO DEFAULT CONTINUE CONSTANT CONST COMPLEX CHAR CERB_MAGIC CASE BUILTIN_TYPES_COMPATIBLE_P BUILTIN_CHOOSE_EXPR BREAK BOOL BMC_ASSUME BANG AUTO ATOMIC ASSERT ASM AMPERSAND ALIGNOF ALIGNAS ]
##
## The known suffix of the stack is as follows:
## FOR LPAREN declaration option(full_expression)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 100, spurious reduction of production nonempty_list(string_literal_component) -> string_literal_component
## In state 104, spurious reduction of production string_literal -> nonempty_list(string_literal_component)
## In state 196, spurious reduction of production start_ignore ->
## In state 197, spurious reduction of production primary_expression -> string_literal start_ignore
## In state 198, spurious reduction of production postfix_expression -> primary_expression
## In state 199, spurious reduction of production unary_expression -> postfix_expression
## In state 205, spurious reduction of production cast_expression -> unary_expression
## In state 228, spurious reduction of production multiplicative_expression -> cast_expression
## In state 220, spurious reduction of production additive_expression -> multiplicative_expression
## In state 239, spurious reduction of production shift_expression -> additive_expression
## In state 218, spurious reduction of production relational_expression -> shift_expression
## In state 236, spurious reduction of production equality_expression -> relational_expression
## In state 254, spurious reduction of production _AND_expression -> equality_expression
## In state 262, spurious reduction of production exclusive_OR_expression -> _AND_expression
## In state 263, spurious reduction of production inclusive_OR_expression -> exclusive_OR_expression
## In state 264, spurious reduction of production logical_AND_expression -> inclusive_OR_expression
## In state 248, spurious reduction of production logical_OR_expression -> logical_AND_expression
## In state 246, spurious reduction of production conditional_expression -> logical_OR_expression
## In state 269, spurious reduction of production assignment_expression -> conditional_expression
## In state 273, spurious reduction of production expression -> assignment_expression
## In state 627, spurious reduction of production end_ignore ->
## In state 628, spurious reduction of production full_expression -> expression end_ignore
## In state 626, spurious reduction of production option(full_expression) -> full_expression
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ALIGNAS LPAREN LPAREN LBRACE FOR LPAREN BOOL SEMICOLON SEMICOLON STRING_LITERAL SEMICOLON
##
## Ends in an error in state: 767.
##
## iteration_statement -> FOR LPAREN declaration option(full_expression) SEMICOLON option(full_expression) . RPAREN scoped(statement) [ WHILE VOLATILE VOID VA_START VA_END VA_COPY VA_ARG UNSIGNED UNION UNAME TYPEOF TYPEDEF TILDE THREAD_LOCAL SWITCH STRUCT STRING_LITERAL STATIC_ASSERT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACES RBRACE PRINT_TYPE PLUS_PLUS PLUS PIPES OFFSETOF NORETURN MINUS_MINUS MINUS LPAREN LONG LNAME LBRACK_LBRACK LBRACES LBRACE INT INLINE IF GOTO GENERIC FOR FLOAT EXTERN ENUM ELSE DOUBLE DO DEFAULT CONTINUE CONSTANT CONST COMPLEX CHAR CERB_MAGIC CASE BUILTIN_TYPES_COMPATIBLE_P BUILTIN_CHOOSE_EXPR BREAK BOOL BMC_ASSUME BANG AUTO ATOMIC ASSERT ASM AMPERSAND ALIGNOF ALIGNAS ]
##
## The known suffix of the stack is as follows:
## FOR LPAREN declaration option(full_expression) SEMICOLON option(full_expression)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 100, spurious reduction of production nonempty_list(string_literal_component) -> string_literal_component
## In state 104, spurious reduction of production string_literal -> nonempty_list(string_literal_component)
## In state 196, spurious reduction of production start_ignore ->
## In state 197, spurious reduction of production primary_expression -> string_literal start_ignore
## In state 198, spurious reduction of production postfix_expression -> primary_expression
## In state 199, spurious reduction of production unary_expression -> postfix_expression
## In state 205, spurious reduction of production cast_expression -> unary_expression
## In state 228, spurious reduction of production multiplicative_expression -> cast_expression
## In state 220, spurious reduction of production additive_expression -> multiplicative_expression
## In state 239, spurious reduction of production shift_expression -> additive_expression
## In state 218, spurious reduction of production relational_expression -> shift_expression
## In state 236, spurious reduction of production equality_expression -> relational_expression
## In state 254, spurious reduction of production _AND_expression -> equality_expression
## In state 262, spurious reduction of production exclusive_OR_expression -> _AND_expression
## In state 263, spurious reduction of production inclusive_OR_expression -> exclusive_OR_expression
## In state 264, spurious reduction of production logical_AND_expression -> inclusive_OR_expression
## In state 248, spurious reduction of production logical_OR_expression -> logical_AND_expression
## In state 246, spurious reduction of production conditional_expression -> logical_OR_expression
## In state 269, spurious reduction of production assignment_expression -> conditional_expression
## In state 273, spurious reduction of production expression -> assignment_expression
## In state 627, spurious reduction of production end_ignore ->
## In state 628, spurious reduction of production full_expression -> expression end_ignore
## In state 626, spurious reduction of production option(full_expression) -> full_expression
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ALIGNAS LPAREN LPAREN LBRACE FOR LPAREN LBRACK_LBRACK ALIGNAS RBRACK RBRACK WHILE
##
## Ends in an error in state: 770.
##
## attribute_declaration -> attribute_specifier_sequence . SEMICOLON [ VA_START VA_END VA_COPY VA_ARG UNAME TILDE STRING_LITERAL STAR SIZEOF SEMICOLON PRINT_TYPE PLUS_PLUS PLUS OFFSETOF MINUS_MINUS MINUS LPAREN LNAME GENERIC CONSTANT BUILTIN_TYPES_COMPATIBLE_P BUILTIN_CHOOSE_EXPR BMC_ASSUME BANG ASSERT AMPERSAND ALIGNOF ]
## attribute_specifier_sequence -> attribute_specifier_sequence . attribute_specifier [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC SIGNED SHORT SEMICOLON RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN ENUM DOUBLE CONST COMPLEX CHAR BOOL AUTO ATOMIC ALIGNAS ]
## declaration -> attribute_specifier_sequence . declaration_specifiers option(init_declarator_list(declarator_varname)) SEMICOLON [ VA_START VA_END VA_COPY VA_ARG UNAME TILDE STRING_LITERAL STAR SIZEOF SEMICOLON PRINT_TYPE PLUS_PLUS PLUS OFFSETOF MINUS_MINUS MINUS LPAREN LNAME GENERIC CONSTANT BUILTIN_TYPES_COMPATIBLE_P BUILTIN_CHOOSE_EXPR BMC_ASSUME BANG ASSERT AMPERSAND ALIGNOF ]
## declaration -> attribute_specifier_sequence . declaration_specifiers_typedef option(init_declarator_list(declarator_typedefname)) SEMICOLON [ VA_START VA_END VA_COPY VA_ARG UNAME TILDE STRING_LITERAL STAR SIZEOF SEMICOLON PRINT_TYPE PLUS_PLUS PLUS OFFSETOF MINUS_MINUS MINUS LPAREN LNAME GENERIC CONSTANT BUILTIN_TYPES_COMPATIBLE_P BUILTIN_CHOOSE_EXPR BMC_ASSUME BANG ASSERT AMPERSAND ALIGNOF ]
##
## The known suffix of the stack is as follows:
## attribute_specifier_sequence
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ALIGNAS LPAREN LPAREN LBRACE DO SEMICOLON WHILE LPAREN STRING_LITERAL SEMICOLON
##
## Ends in an error in state: 775.
##
## iteration_statement -> DO scoped(statement) WHILE LPAREN full_expression . RPAREN SEMICOLON [ WHILE VOLATILE VOID VA_START VA_END VA_COPY VA_ARG UNSIGNED UNION UNAME TYPEOF TYPEDEF TILDE THREAD_LOCAL SWITCH STRUCT STRING_LITERAL STATIC_ASSERT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACES RBRACE PRINT_TYPE PLUS_PLUS PLUS PIPES OFFSETOF NORETURN MINUS_MINUS MINUS LPAREN LONG LNAME LBRACK_LBRACK LBRACES LBRACE INT INLINE IF GOTO GENERIC FOR FLOAT EXTERN ENUM ELSE DOUBLE DO DEFAULT CONTINUE CONSTANT CONST COMPLEX CHAR CERB_MAGIC CASE BUILTIN_TYPES_COMPATIBLE_P BUILTIN_CHOOSE_EXPR BREAK BOOL BMC_ASSUME BANG AUTO ATOMIC ASSERT ASM AMPERSAND ALIGNOF ALIGNAS ]
##
## The known suffix of the stack is as follows:
## DO scoped(statement) WHILE LPAREN full_expression
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 100, spurious reduction of production nonempty_list(string_literal_component) -> string_literal_component
## In state 104, spurious reduction of production string_literal -> nonempty_list(string_literal_component)
## In state 196, spurious reduction of production start_ignore ->
## In state 197, spurious reduction of production primary_expression -> string_literal start_ignore
## In state 198, spurious reduction of production postfix_expression -> primary_expression
## In state 199, spurious reduction of production unary_expression -> postfix_expression
## In state 205, spurious reduction of production cast_expression -> unary_expression
## In state 228, spurious reduction of production multiplicative_expression -> cast_expression
## In state 220, spurious reduction of production additive_expression -> multiplicative_expression
## In state 239, spurious reduction of production shift_expression -> additive_expression
## In state 218, spurious reduction of production relational_expression -> shift_expression
## In state 236, spurious reduction of production equality_expression -> relational_expression
## In state 254, spurious reduction of production _AND_expression -> equality_expression
## In state 262, spurious reduction of production exclusive_OR_expression -> _AND_expression
## In state 263, spurious reduction of production inclusive_OR_expression -> exclusive_OR_expression
## In state 264, spurious reduction of production logical_AND_expression -> inclusive_OR_expression
## In state 248, spurious reduction of production logical_OR_expression -> logical_AND_expression
## In state 246, spurious reduction of production conditional_expression -> logical_OR_expression
## In state 269, spurious reduction of production assignment_expression -> conditional_expression
## In state 273, spurious reduction of production expression -> assignment_expression
## In state 627, spurious reduction of production end_ignore ->
## In state 628, spurious reduction of production full_expression -> expression end_ignore
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ALIGNAS LPAREN LPAREN STRING_LITERAL RBRACK
##
## Ends in an error in state: 784.
##
## expression -> expression . COMMA assignment_expression [ RPAREN COMMA ]
## primary_expression -> LPAREN expression . RPAREN [ STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_GT MINUS_EQ MINUS LT_LT_EQ LT_LT LT_EQ LT LPAREN LBRACK GT_GT_EQ GT_GT GT_EQ GT EQ_EQ EQ ELLIPSIS DOT COMMA COLON CARET_EQ CARET BANG_EQ AMPERSAND_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## LPAREN expression
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 100, spurious reduction of production nonempty_list(string_literal_component) -> string_literal_component
## In state 104, spurious reduction of production string_literal -> nonempty_list(string_literal_component)
## In state 196, spurious reduction of production start_ignore ->
## In state 197, spurious reduction of production primary_expression -> string_literal start_ignore
## In state 198, spurious reduction of production postfix_expression -> primary_expression
## In state 199, spurious reduction of production unary_expression -> postfix_expression
## In state 205, spurious reduction of production cast_expression -> unary_expression
## In state 228, spurious reduction of production multiplicative_expression -> cast_expression
## In state 220, spurious reduction of production additive_expression -> multiplicative_expression
## In state 239, spurious reduction of production shift_expression -> additive_expression
## In state 218, spurious reduction of production relational_expression -> shift_expression
## In state 236, spurious reduction of production equality_expression -> relational_expression
## In state 254, spurious reduction of production _AND_expression -> equality_expression
## In state 262, spurious reduction of production exclusive_OR_expression -> _AND_expression
## In state 263, spurious reduction of production inclusive_OR_expression -> exclusive_OR_expression
## In state 264, spurious reduction of production logical_AND_expression -> inclusive_OR_expression
## In state 248, spurious reduction of production logical_OR_expression -> logical_AND_expression
## In state 246, spurious reduction of production conditional_expression -> logical_OR_expression
## In state 269, spurious reduction of production assignment_expression -> conditional_expression
## In state 273, spurious reduction of production expression -> assignment_expression
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ALIGNAS LPAREN MINUS_MINUS LPAREN BOOL GT
##
## Ends in an error in state: 786.
##
## postfix_expression -> LPAREN type_name . RPAREN LBRACE initializer_list option(COMMA) RBRACE [ STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_GT MINUS_EQ MINUS LT_LT_EQ LT_LT LT_EQ LT LPAREN LBRACK GT_GT_EQ GT_GT GT_EQ GT EQ_EQ EQ ELLIPSIS DOT COMMA COLON CARET_EQ CARET BANG_EQ AMPERSAND_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## LPAREN type_name
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 170, spurious reduction of production attribute_type_specifier_unique -> type_specifier_unique
## In state 457, spurious reduction of production list_pair(attribute_type_qualifier,attribute_alignment_specifier) ->
## In state 458, spurious reduction of production list_tuple3_eq1(attribute_type_specifier_unique,attribute_type_qualifier,attribute_alignment_specifier) -> attribute_type_specifier_unique list_pair(attribute_type_qualifier,attribute_alignment_specifier)
## In state 456, spurious reduction of production specifier_qualifier_list -> list_tuple3_eq1(attribute_type_specifier_unique,attribute_type_qualifier,attribute_alignment_specifier)
## In state 484, spurious reduction of production option(abstract_declarator) ->
## In state 488, spurious reduction of production type_name -> specifier_qualifier_list option(abstract_declarator)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ENUM LBRACE LNAME TYPE LBRACK_LBRACK ALIGNAS RBRACK RBRACK WHILE
##
## Ends in an error in state: 790.
##
## attribute_specifier_sequence -> attribute_specifier_sequence . attribute_specifier [ RBRACE LBRACK_LBRACK EQ COMMA ]
## enumerator -> enumeration_constant attribute_specifier_sequence . [ RBRACE COMMA ]
## enumerator -> enumeration_constant attribute_specifier_sequence . EQ constant_expression [ RBRACE COMMA ]
##
## The known suffix of the stack is as follows:
## enumeration_constant attribute_specifier_sequence
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ENUM LNAME TYPE WHILE
##
## Ends in an error in state: 796.
##
## enum_specifier -> ENUM general_identifier . [ VOLATILE UNAME TYPEDEF THREAD_LOCAL STATIC STAR SEMICOLON RPAREN RESTRICT REGISTER NORETURN LPAREN LNAME LBRACK_LBRACK LBRACK INLINE GT EXTERN CONST COMMA COLON AUTO ATOMIC ALIGNAS ]
## option(general_identifier) -> general_identifier . [ LBRACE ]
##
## The known suffix of the stack is as follows:
## ENUM general_identifier
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ENUM LBRACK_LBRACK ALIGNAS RBRACK RBRACK WHILE
##
## Ends in an error in state: 797.
##
## attribute_specifier_sequence -> attribute_specifier_sequence . attribute_specifier [ UNAME LNAME LBRACK_LBRACK LBRACE ]
## enum_specifier -> ENUM attribute_specifier_sequence . option(general_identifier) LBRACE enumerator_list option(COMMA) RBRACE [ VOLATILE UNAME TYPEDEF THREAD_LOCAL STATIC STAR SEMICOLON RPAREN RESTRICT REGISTER NORETURN LPAREN LNAME LBRACK_LBRACK LBRACK INLINE GT EXTERN CONST COMMA COLON AUTO ATOMIC ALIGNAS ]
## enum_specifier -> ENUM attribute_specifier_sequence . general_identifier [ VOLATILE UNAME TYPEDEF THREAD_LOCAL STATIC STAR SEMICOLON RPAREN RESTRICT REGISTER NORETURN LPAREN LNAME LBRACK_LBRACK LBRACK INLINE GT EXTERN CONST COMMA COLON AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## ENUM attribute_specifier_sequence
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ENUM LBRACK_LBRACK ALIGNAS RBRACK RBRACK LBRACE LNAME TYPE EQ STRING_LITERAL RPAREN
##
## Ends in an error in state: 800.
##
## enum_specifier -> ENUM attribute_specifier_sequence option(general_identifier) LBRACE enumerator_list . option(COMMA) RBRACE [ VOLATILE UNAME TYPEDEF THREAD_LOCAL STATIC STAR SEMICOLON RPAREN RESTRICT REGISTER NORETURN LPAREN LNAME LBRACK_LBRACK LBRACK INLINE GT EXTERN CONST COMMA COLON AUTO ATOMIC ALIGNAS ]
## enumerator_list -> enumerator_list . COMMA enumerator [ RBRACE COMMA ]
##
## The known suffix of the stack is as follows:
## ENUM attribute_specifier_sequence option(general_identifier) LBRACE enumerator_list
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 100, spurious reduction of production nonempty_list(string_literal_component) -> string_literal_component
## In state 104, spurious reduction of production string_literal -> nonempty_list(string_literal_component)
## In state 196, spurious reduction of production start_ignore ->
## In state 197, spurious reduction of production primary_expression -> string_literal start_ignore
## In state 198, spurious reduction of production postfix_expression -> primary_expression
## In state 199, spurious reduction of production unary_expression -> postfix_expression
## In state 195, spurious reduction of production cast_expression -> unary_expression
## In state 228, spurious reduction of production multiplicative_expression -> cast_expression
## In state 220, spurious reduction of production additive_expression -> multiplicative_expression
## In state 239, spurious reduction of production shift_expression -> additive_expression
## In state 218, spurious reduction of production relational_expression -> shift_expression
## In state 236, spurious reduction of production equality_expression -> relational_expression
## In state 254, spurious reduction of production _AND_expression -> equality_expression
## In state 262, spurious reduction of production exclusive_OR_expression -> _AND_expression
## In state 263, spurious reduction of production inclusive_OR_expression -> exclusive_OR_expression
## In state 264, spurious reduction of production logical_AND_expression -> inclusive_OR_expression
## In state 248, spurious reduction of production logical_OR_expression -> logical_AND_expression
## In state 246, spurious reduction of production conditional_expression -> logical_OR_expression
## In state 294, spurious reduction of production constant_expression -> conditional_expression
## In state 789, spurious reduction of production enumerator -> enumeration_constant EQ constant_expression
## In state 795, spurious reduction of production enumerator_list -> enumerator
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ENUM LBRACK_LBRACK ALIGNAS RBRACK RBRACK LNAME TYPE WHILE
##
## Ends in an error in state: 803.
##
## enum_specifier -> ENUM attribute_specifier_sequence general_identifier . [ VOLATILE UNAME TYPEDEF THREAD_LOCAL STATIC STAR SEMICOLON RPAREN RESTRICT REGISTER NORETURN LPAREN LNAME LBRACK_LBRACK LBRACK INLINE GT EXTERN CONST COMMA COLON AUTO ATOMIC ALIGNAS ]
## option(general_identifier) -> general_identifier . [ LBRACE ]
##
## The known suffix of the stack is as follows:
## ENUM attribute_specifier_sequence general_identifier
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ALIGNAS LPAREN OFFSETOF LPAREN BOOL GT
##
## Ends in an error in state: 804.
##
## postfix_expression -> OFFSETOF LPAREN type_name . COMMA general_identifier RPAREN [ STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_GT MINUS_EQ MINUS LT_LT_EQ LT_LT LT_EQ LT LPAREN LBRACK GT_GT_EQ GT_GT GT_EQ GT EQ_EQ EQ ELLIPSIS DOT COMMA COLON CARET_EQ CARET BANG_EQ AMPERSAND_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## OFFSETOF LPAREN type_name
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 170, spurious reduction of production attribute_type_specifier_unique -> type_specifier_unique
## In state 457, spurious reduction of production list_pair(attribute_type_qualifier,attribute_alignment_specifier) ->
## In state 458, spurious reduction of production list_tuple3_eq1(attribute_type_specifier_unique,attribute_type_qualifier,attribute_alignment_specifier) -> attribute_type_specifier_unique list_pair(attribute_type_qualifier,attribute_alignment_specifier)
## In state 456, spurious reduction of production specifier_qualifier_list -> list_tuple3_eq1(attribute_type_specifier_unique,attribute_type_qualifier,attribute_alignment_specifier)
## In state 484, spurious reduction of production option(abstract_declarator) ->
## In state 488, spurious reduction of production type_name -> specifier_qualifier_list option(abstract_declarator)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ALIGNAS LPAREN PRINT_TYPE LPAREN STRING_LITERAL RBRACK
##
## Ends in an error in state: 809.
##
## expression -> expression . COMMA assignment_expression [ RPAREN COMMA ]
## postfix_expression -> PRINT_TYPE LPAREN expression . RPAREN [ STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_GT MINUS_EQ MINUS LT_LT_EQ LT_LT LT_EQ LT LPAREN LBRACK GT_GT_EQ GT_GT GT_EQ GT EQ_EQ EQ ELLIPSIS DOT COMMA COLON CARET_EQ CARET BANG_EQ AMPERSAND_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## PRINT_TYPE LPAREN expression
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 100, spurious reduction of production nonempty_list(string_literal_component) -> string_literal_component
## In state 104, spurious reduction of production string_literal -> nonempty_list(string_literal_component)
## In state 196, spurious reduction of production start_ignore ->
## In state 197, spurious reduction of production primary_expression -> string_literal start_ignore
## In state 198, spurious reduction of production postfix_expression -> primary_expression
## In state 199, spurious reduction of production unary_expression -> postfix_expression
## In state 205, spurious reduction of production cast_expression -> unary_expression
## In state 228, spurious reduction of production multiplicative_expression -> cast_expression
## In state 220, spurious reduction of production additive_expression -> multiplicative_expression
## In state 239, spurious reduction of production shift_expression -> additive_expression
## In state 218, spurious reduction of production relational_expression -> shift_expression
## In state 236, spurious reduction of production equality_expression -> relational_expression
## In state 254, spurious reduction of production _AND_expression -> equality_expression
## In state 262, spurious reduction of production exclusive_OR_expression -> _AND_expression
## In state 263, spurious reduction of production inclusive_OR_expression -> exclusive_OR_expression
## In state 264, spurious reduction of production logical_AND_expression -> inclusive_OR_expression
## In state 248, spurious reduction of production logical_OR_expression -> logical_AND_expression
## In state 246, spurious reduction of production conditional_expression -> logical_OR_expression
## In state 269, spurious reduction of production assignment_expression -> conditional_expression
## In state 273, spurious reduction of production expression -> assignment_expression
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ALIGNAS LPAREN SIZEOF LPAREN WHILE
##
## Ends in an error in state: 811.
##
## postfix_expression -> LPAREN . type_name RPAREN LBRACE initializer_list option(COMMA) RBRACE [ STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_GT MINUS_EQ MINUS LT_LT_EQ LT_LT LT_EQ LT LPAREN LBRACK GT_GT_EQ GT_GT GT_EQ GT EQ_EQ EQ ELLIPSIS DOT COMMA COLON CARET_EQ CARET BANG_EQ AMPERSAND_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## primary_expression -> LPAREN . expression RPAREN [ STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_GT MINUS_EQ MINUS LT_LT_EQ LT_LT LT_EQ LT LPAREN LBRACK GT_GT_EQ GT_GT GT_EQ GT EQ_EQ EQ ELLIPSIS DOT COMMA COLON CARET_EQ CARET BANG_EQ AMPERSAND_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## primary_expression -> LPAREN . scoped(compound_statement) RPAREN [ STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_GT MINUS_EQ MINUS LT_LT_EQ LT_LT LT_EQ LT LPAREN LBRACK GT_GT_EQ GT_GT GT_EQ GT EQ_EQ EQ ELLIPSIS DOT COMMA COLON CARET_EQ CARET BANG_EQ AMPERSAND_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## unary_expression -> SIZEOF LPAREN . type_name RPAREN [ STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_EQ MINUS LT_LT_EQ LT_LT LT_EQ LT GT_GT_EQ GT_GT GT_EQ GT EQ_EQ EQ ELLIPSIS COMMA COLON CARET_EQ CARET BANG_EQ AMPERSAND_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## SIZEOF LPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ALIGNAS LPAREN SIZEOF LPAREN BOOL GT
##
## Ends in an error in state: 812.
##
## postfix_expression -> LPAREN type_name . RPAREN LBRACE initializer_list option(COMMA) RBRACE [ STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_GT MINUS_EQ MINUS LT_LT_EQ LT_LT LT_EQ LT LPAREN LBRACK GT_GT_EQ GT_GT GT_EQ GT EQ_EQ EQ ELLIPSIS DOT COMMA COLON CARET_EQ CARET BANG_EQ AMPERSAND_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## unary_expression -> SIZEOF LPAREN type_name . RPAREN [ STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_EQ MINUS LT_LT_EQ LT_LT LT_EQ LT GT_GT_EQ GT_GT GT_EQ GT EQ_EQ EQ ELLIPSIS COMMA COLON CARET_EQ CARET BANG_EQ AMPERSAND_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## SIZEOF LPAREN type_name
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 170, spurious reduction of production attribute_type_specifier_unique -> type_specifier_unique
## In state 457, spurious reduction of production list_pair(attribute_type_qualifier,attribute_alignment_specifier) ->
## In state 458, spurious reduction of production list_tuple3_eq1(attribute_type_specifier_unique,attribute_type_qualifier,attribute_alignment_specifier) -> attribute_type_specifier_unique list_pair(attribute_type_qualifier,attribute_alignment_specifier)
## In state 456, spurious reduction of production specifier_qualifier_list -> list_tuple3_eq1(attribute_type_specifier_unique,attribute_type_qualifier,attribute_alignment_specifier)
## In state 484, spurious reduction of production option(abstract_declarator) ->
## In state 488, spurious reduction of production type_name -> specifier_qualifier_list option(abstract_declarator)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ALIGNAS LPAREN SIZEOF LPAREN BOOL RPAREN WHILE
##
## Ends in an error in state: 813.
##
## postfix_expression -> LPAREN type_name RPAREN . LBRACE initializer_list option(COMMA) RBRACE [ STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_GT MINUS_EQ MINUS LT_LT_EQ LT_LT LT_EQ LT LPAREN LBRACK GT_GT_EQ GT_GT GT_EQ GT EQ_EQ EQ ELLIPSIS DOT COMMA COLON CARET_EQ CARET BANG_EQ AMPERSAND_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## unary_expression -> SIZEOF LPAREN type_name RPAREN . [ STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_EQ MINUS LT_LT_EQ LT_LT LT_EQ LT GT_GT_EQ GT_GT GT_EQ GT EQ_EQ EQ ELLIPSIS COMMA COLON CARET_EQ CARET BANG_EQ AMPERSAND_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## SIZEOF LPAREN type_name RPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ALIGNAS LPAREN VA_ARG LPAREN STRING_LITERAL RPAREN
##
## Ends in an error in state: 815.
##
## postfix_expression -> VA_ARG LPAREN assignment_expression . COMMA type_name RPAREN [ STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_GT MINUS_EQ MINUS LT_LT_EQ LT_LT LT_EQ LT LPAREN LBRACK GT_GT_EQ GT_GT GT_EQ GT EQ_EQ EQ ELLIPSIS DOT COMMA COLON CARET_EQ CARET BANG_EQ AMPERSAND_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## VA_ARG LPAREN assignment_expression
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 100, spurious reduction of production nonempty_list(string_literal_component) -> string_literal_component
## In state 104, spurious reduction of production string_literal -> nonempty_list(string_literal_component)
## In state 196, spurious reduction of production start_ignore ->
## In state 197, spurious reduction of production primary_expression -> string_literal start_ignore
## In state 198, spurious reduction of production postfix_expression -> primary_expression
## In state 199, spurious reduction of production unary_expression -> postfix_expression
## In state 205, spurious reduction of production cast_expression -> unary_expression
## In state 228, spurious reduction of production multiplicative_expression -> cast_expression
## In state 220, spurious reduction of production additive_expression -> multiplicative_expression
## In state 239, spurious reduction of production shift_expression -> additive_expression
## In state 218, spurious reduction of production relational_expression -> shift_expression
## In state 236, spurious reduction of production equality_expression -> relational_expression
## In state 254, spurious reduction of production _AND_expression -> equality_expression
## In state 262, spurious reduction of production exclusive_OR_expression -> _AND_expression
## In state 263, spurious reduction of production inclusive_OR_expression -> exclusive_OR_expression
## In state 264, spurious reduction of production logical_AND_expression -> inclusive_OR_expression
## In state 248, spurious reduction of production logical_OR_expression -> logical_AND_expression
## In state 246, spurious reduction of production conditional_expression -> logical_OR_expression
## In state 269, spurious reduction of production assignment_expression -> conditional_expression
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ALIGNAS LPAREN VA_ARG LPAREN STRING_LITERAL COMMA BOOL GT
##
## Ends in an error in state: 817.
##
## postfix_expression -> VA_ARG LPAREN assignment_expression COMMA type_name . RPAREN [ STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_GT MINUS_EQ MINUS LT_LT_EQ LT_LT LT_EQ LT LPAREN LBRACK GT_GT_EQ GT_GT GT_EQ GT EQ_EQ EQ ELLIPSIS DOT COMMA COLON CARET_EQ CARET BANG_EQ AMPERSAND_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## VA_ARG LPAREN assignment_expression COMMA type_name
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 170, spurious reduction of production attribute_type_specifier_unique -> type_specifier_unique
## In state 457, spurious reduction of production list_pair(attribute_type_qualifier,attribute_alignment_specifier) ->
## In state 458, spurious reduction of production list_tuple3_eq1(attribute_type_specifier_unique,attribute_type_qualifier,attribute_alignment_specifier) -> attribute_type_specifier_unique list_pair(attribute_type_qualifier,attribute_alignment_specifier)
## In state 456, spurious reduction of production specifier_qualifier_list -> list_tuple3_eq1(attribute_type_specifier_unique,attribute_type_qualifier,attribute_alignment_specifier)
## In state 484, spurious reduction of production option(abstract_declarator) ->
## In state 488, spurious reduction of production type_name -> specifier_qualifier_list option(abstract_declarator)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ALIGNAS LPAREN VA_COPY LPAREN STRING_LITERAL RPAREN
##
## Ends in an error in state: 819.
##
## postfix_expression -> VA_COPY LPAREN assignment_expression . COMMA assignment_expression RPAREN [ STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_GT MINUS_EQ MINUS LT_LT_EQ LT_LT LT_EQ LT LPAREN LBRACK GT_GT_EQ GT_GT GT_EQ GT EQ_EQ EQ ELLIPSIS DOT COMMA COLON CARET_EQ CARET BANG_EQ AMPERSAND_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## VA_COPY LPAREN assignment_expression
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 100, spurious reduction of production nonempty_list(string_literal_component) -> string_literal_component
## In state 104, spurious reduction of production string_literal -> nonempty_list(string_literal_component)
## In state 196, spurious reduction of production start_ignore ->
## In state 197, spurious reduction of production primary_expression -> string_literal start_ignore
## In state 198, spurious reduction of production postfix_expression -> primary_expression
## In state 199, spurious reduction of production unary_expression -> postfix_expression
## In state 205, spurious reduction of production cast_expression -> unary_expression
## In state 228, spurious reduction of production multiplicative_expression -> cast_expression
## In state 220, spurious reduction of production additive_expression -> multiplicative_expression
## In state 239, spurious reduction of production shift_expression -> additive_expression
## In state 218, spurious reduction of production relational_expression -> shift_expression
## In state 236, spurious reduction of production equality_expression -> relational_expression
## In state 254, spurious reduction of production _AND_expression -> equality_expression
## In state 262, spurious reduction of production exclusive_OR_expression -> _AND_expression
## In state 263, spurious reduction of production inclusive_OR_expression -> exclusive_OR_expression
## In state 264, spurious reduction of production logical_AND_expression -> inclusive_OR_expression
## In state 248, spurious reduction of production logical_OR_expression -> logical_AND_expression
## In state 246, spurious reduction of production conditional_expression -> logical_OR_expression
## In state 269, spurious reduction of production assignment_expression -> conditional_expression
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ALIGNAS LPAREN VA_COPY LPAREN STRING_LITERAL COMMA STRING_LITERAL RBRACK
##
## Ends in an error in state: 821.
##
## postfix_expression -> VA_COPY LPAREN assignment_expression COMMA assignment_expression . RPAREN [ STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_GT MINUS_EQ MINUS LT_LT_EQ LT_LT LT_EQ LT LPAREN LBRACK GT_GT_EQ GT_GT GT_EQ GT EQ_EQ EQ ELLIPSIS DOT COMMA COLON CARET_EQ CARET BANG_EQ AMPERSAND_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## VA_COPY LPAREN assignment_expression COMMA assignment_expression
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 100, spurious reduction of production nonempty_list(string_literal_component) -> string_literal_component
## In state 104, spurious reduction of production string_literal -> nonempty_list(string_literal_component)
## In state 196, spurious reduction of production start_ignore ->
## In state 197, spurious reduction of production primary_expression -> string_literal start_ignore
## In state 198, spurious reduction of production postfix_expression -> primary_expression
## In state 199, spurious reduction of production unary_expression -> postfix_expression
## In state 205, spurious reduction of production cast_expression -> unary_expression
## In state 228, spurious reduction of production multiplicative_expression -> cast_expression
## In state 220, spurious reduction of production additive_expression -> multiplicative_expression
## In state 239, spurious reduction of production shift_expression -> additive_expression
## In state 218, spurious reduction of production relational_expression -> shift_expression
## In state 236, spurious reduction of production equality_expression -> relational_expression
## In state 254, spurious reduction of production _AND_expression -> equality_expression
## In state 262, spurious reduction of production exclusive_OR_expression -> _AND_expression
## In state 263, spurious reduction of production inclusive_OR_expression -> exclusive_OR_expression
## In state 264, spurious reduction of production logical_AND_expression -> inclusive_OR_expression
## In state 248, spurious reduction of production logical_OR_expression -> logical_AND_expression
## In state 246, spurious reduction of production conditional_expression -> logical_OR_expression
## In state 269, spurious reduction of production assignment_expression -> conditional_expression
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ALIGNAS LPAREN VA_END LPAREN STRING_LITERAL RBRACK
##
## Ends in an error in state: 823.
##
## postfix_expression -> VA_END LPAREN assignment_expression . RPAREN [ STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_GT MINUS_EQ MINUS LT_LT_EQ LT_LT LT_EQ LT LPAREN LBRACK GT_GT_EQ GT_GT GT_EQ GT EQ_EQ EQ ELLIPSIS DOT COMMA COLON CARET_EQ CARET BANG_EQ AMPERSAND_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## VA_END LPAREN assignment_expression
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 100, spurious reduction of production nonempty_list(string_literal_component) -> string_literal_component
## In state 104, spurious reduction of production string_literal -> nonempty_list(string_literal_component)
## In state 196, spurious reduction of production start_ignore ->
## In state 197, spurious reduction of production primary_expression -> string_literal start_ignore
## In state 198, spurious reduction of production postfix_expression -> primary_expression
## In state 199, spurious reduction of production unary_expression -> postfix_expression
## In state 205, spurious reduction of production cast_expression -> unary_expression
## In state 228, spurious reduction of production multiplicative_expression -> cast_expression
## In state 220, spurious reduction of production additive_expression -> multiplicative_expression
## In state 239, spurious reduction of production shift_expression -> additive_expression
## In state 218, spurious reduction of production relational_expression -> shift_expression
## In state 236, spurious reduction of production equality_expression -> relational_expression
## In state 254, spurious reduction of production _AND_expression -> equality_expression
## In state 262, spurious reduction of production exclusive_OR_expression -> _AND_expression
## In state 263, spurious reduction of production inclusive_OR_expression -> exclusive_OR_expression
## In state 264, spurious reduction of production logical_AND_expression -> inclusive_OR_expression
## In state 248, spurious reduction of production logical_OR_expression -> logical_AND_expression
## In state 246, spurious reduction of production conditional_expression -> logical_OR_expression
## In state 269, spurious reduction of production assignment_expression -> conditional_expression
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ALIGNAS LPAREN VA_START LPAREN STRING_LITERAL RPAREN
##
## Ends in an error in state: 825.
##
## postfix_expression -> VA_START LPAREN assignment_expression . COMMA general_identifier RPAREN [ STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_GT MINUS_EQ MINUS LT_LT_EQ LT_LT LT_EQ LT LPAREN LBRACK GT_GT_EQ GT_GT GT_EQ GT EQ_EQ EQ ELLIPSIS DOT COMMA COLON CARET_EQ CARET BANG_EQ AMPERSAND_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## VA_START LPAREN assignment_expression
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 100, spurious reduction of production nonempty_list(string_literal_component) -> string_literal_component
## In state 104, spurious reduction of production string_literal -> nonempty_list(string_literal_component)
## In state 196, spurious reduction of production start_ignore ->
## In state 197, spurious reduction of production primary_expression -> string_literal start_ignore
## In state 198, spurious reduction of production postfix_expression -> primary_expression
## In state 199, spurious reduction of production unary_expression -> postfix_expression
## In state 205, spurious reduction of production cast_expression -> unary_expression
## In state 228, spurious reduction of production multiplicative_expression -> cast_expression
## In state 220, spurious reduction of production additive_expression -> multiplicative_expression
## In state 239, spurious reduction of production shift_expression -> additive_expression
## In state 218, spurious reduction of production relational_expression -> shift_expression
## In state 236, spurious reduction of production equality_expression -> relational_expression
## In state 254, spurious reduction of production _AND_expression -> equality_expression
## In state 262, spurious reduction of production exclusive_OR_expression -> _AND_expression
## In state 263, spurious reduction of production inclusive_OR_expression -> exclusive_OR_expression
## In state 264, spurious reduction of production logical_AND_expression -> inclusive_OR_expression
## In state 248, spurious reduction of production logical_OR_expression -> logical_AND_expression
## In state 246, spurious reduction of production conditional_expression -> logical_OR_expression
## In state 269, spurious reduction of production assignment_expression -> conditional_expression
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: TYPEOF LPAREN BOOL GT
##
## Ends in an error in state: 829.
##
## type_specifier_unique -> TYPEOF LPAREN type_name . RPAREN [ VOLATILE UNAME TYPEDEF THREAD_LOCAL STATIC STAR SEMICOLON RPAREN RESTRICT REGISTER NORETURN LPAREN LNAME LBRACK_LBRACK LBRACK INLINE GT EXTERN CONST COMMA COLON AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## TYPEOF LPAREN type_name
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 170, spurious reduction of production attribute_type_specifier_unique -> type_specifier_unique
## In state 457, spurious reduction of production list_pair(attribute_type_qualifier,attribute_alignment_specifier) ->
## In state 458, spurious reduction of production list_tuple3_eq1(attribute_type_specifier_unique,attribute_type_qualifier,attribute_alignment_specifier) -> attribute_type_specifier_unique list_pair(attribute_type_qualifier,attribute_alignment_specifier)
## In state 456, spurious reduction of production specifier_qualifier_list -> list_tuple3_eq1(attribute_type_specifier_unique,attribute_type_qualifier,attribute_alignment_specifier)
## In state 484, spurious reduction of production option(abstract_declarator) ->
## In state 488, spurious reduction of production type_name -> specifier_qualifier_list option(abstract_declarator)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: TYPEOF LPAREN STRING_LITERAL RBRACK
##
## Ends in an error in state: 831.
##
## expression -> expression . COMMA assignment_expression [ RPAREN COMMA ]
## type_specifier_unique -> TYPEOF LPAREN expression . RPAREN [ VOLATILE UNAME TYPEDEF THREAD_LOCAL STATIC STAR SEMICOLON RPAREN RESTRICT REGISTER NORETURN LPAREN LNAME LBRACK_LBRACK LBRACK INLINE GT EXTERN CONST COMMA COLON AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## TYPEOF LPAREN expression
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 100, spurious reduction of production nonempty_list(string_literal_component) -> string_literal_component
## In state 104, spurious reduction of production string_literal -> nonempty_list(string_literal_component)
## In state 196, spurious reduction of production start_ignore ->
## In state 197, spurious reduction of production primary_expression -> string_literal start_ignore
## In state 198, spurious reduction of production postfix_expression -> primary_expression
## In state 199, spurious reduction of production unary_expression -> postfix_expression
## In state 205, spurious reduction of production cast_expression -> unary_expression
## In state 228, spurious reduction of production multiplicative_expression -> cast_expression
## In state 220, spurious reduction of production additive_expression -> multiplicative_expression
## In state 239, spurious reduction of production shift_expression -> additive_expression
## In state 218, spurious reduction of production relational_expression -> shift_expression
## In state 236, spurious reduction of production equality_expression -> relational_expression
## In state 254, spurious reduction of production _AND_expression -> equality_expression
## In state 262, spurious reduction of production exclusive_OR_expression -> _AND_expression
## In state 263, spurious reduction of production inclusive_OR_expression -> exclusive_OR_expression
## In state 264, spurious reduction of production logical_AND_expression -> inclusive_OR_expression
## In state 248, spurious reduction of production logical_OR_expression -> logical_AND_expression
## In state 246, spurious reduction of production conditional_expression -> logical_OR_expression
## In state 269, spurious reduction of production assignment_expression -> conditional_expression
## In state 273, spurious reduction of production expression -> assignment_expression
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statement: CN_EXTRACT CN_OWNED LT BOOL COLON
##
## Ends in an error in state: 834.
##
## pred -> CN_OWNED LT ctype . GT [ LPAREN COMMA ]
##
## The known suffix of the stack is as follows:
## CN_OWNED LT ctype
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 170, spurious reduction of production attribute_type_specifier_unique -> type_specifier_unique
## In state 457, spurious reduction of production list_pair(attribute_type_qualifier,attribute_alignment_specifier) ->
## In state 458, spurious reduction of production list_tuple3_eq1(attribute_type_specifier_unique,attribute_type_qualifier,attribute_alignment_specifier) -> attribute_type_specifier_unique list_pair(attribute_type_qualifier,attribute_alignment_specifier)
## In state 456, spurious reduction of production specifier_qualifier_list -> list_tuple3_eq1(attribute_type_specifier_unique,attribute_type_qualifier,attribute_alignment_specifier)
## In state 484, spurious reduction of production option(abstract_declarator) ->
## In state 488, spurious reduction of production type_name -> specifier_qualifier_list option(abstract_declarator)
## In state 833, spurious reduction of production ctype -> type_name
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statement: CN_EXTRACT CN_BLOCK LT BOOL COLON
##
## Ends in an error in state: 838.
##
## pred -> CN_BLOCK LT ctype . GT [ LPAREN COMMA ]
##
## The known suffix of the stack is as follows:
## CN_BLOCK LT ctype
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 170, spurious reduction of production attribute_type_specifier_unique -> type_specifier_unique
## In state 457, spurious reduction of production list_pair(attribute_type_qualifier,attribute_alignment_specifier) ->
## In state 458, spurious reduction of production list_tuple3_eq1(attribute_type_specifier_unique,attribute_type_qualifier,attribute_alignment_specifier) -> attribute_type_specifier_unique list_pair(attribute_type_qualifier,attribute_alignment_specifier)
## In state 456, spurious reduction of production specifier_qualifier_list -> list_tuple3_eq1(attribute_type_specifier_unique,attribute_type_qualifier,attribute_alignment_specifier)
## In state 484, spurious reduction of production option(abstract_declarator) ->
## In state 488, spurious reduction of production type_name -> specifier_qualifier_list option(abstract_declarator)
## In state 833, spurious reduction of production ctype -> type_name
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statement: CN_UNPACK CN_OWNED COMMA
##
## Ends in an error in state: 840.
##
## cn_statement -> CN_UNPACK pred . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN SEMICOLON [ # ]
##
## The known suffix of the stack is as follows:
## CN_UNPACK pred
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 4, spurious reduction of production pred -> CN_OWNED
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statement: CN_HAVE UNAME WHILE
##
## Ends in an error in state: 842.
##
## prim_expr -> UNAME . VARIABLE [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS_GT MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE DOT CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
## prim_expr -> UNAME . TYPE [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS_GT MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE DOT CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
## prim_expr -> UNAME . VARIABLE LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS_GT MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE DOT CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
## prim_expr -> UNAME . TYPE LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS_GT MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE DOT CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
## prim_expr -> UNAME . VARIABLE cons_args [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS_GT MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE DOT CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
## prim_expr -> UNAME . TYPE cons_args [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS_GT MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE DOT CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
##
## The known suffix of the stack is as follows:
## UNAME
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statement: CN_HAVE UNAME VARIABLE WHILE
##
## Ends in an error in state: 843.
##
## prim_expr -> UNAME VARIABLE . [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS_GT MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE DOT CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
## prim_expr -> UNAME VARIABLE . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS_GT MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE DOT CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
## prim_expr -> UNAME VARIABLE . cons_args [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS_GT MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE DOT CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
##
## The known suffix of the stack is as follows:
## UNAME VARIABLE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statement: CN_EXTRACT SIZEOF LT BOOL COLON
##
## Ends in an error in state: 848.
##
## unary_expr -> SIZEOF LT ctype . GT [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
##
## The known suffix of the stack is as follows:
## SIZEOF LT ctype
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 170, spurious reduction of production attribute_type_specifier_unique -> type_specifier_unique
## In state 457, spurious reduction of production list_pair(attribute_type_qualifier,attribute_alignment_specifier) ->
## In state 458, spurious reduction of production list_tuple3_eq1(attribute_type_specifier_unique,attribute_type_qualifier,attribute_alignment_specifier) -> attribute_type_specifier_unique list_pair(attribute_type_qualifier,attribute_alignment_specifier)
## In state 456, spurious reduction of production specifier_qualifier_list -> list_tuple3_eq1(attribute_type_specifier_unique,attribute_type_qualifier,attribute_alignment_specifier)
## In state 484, spurious reduction of production option(abstract_declarator) ->
## In state 488, spurious reduction of production type_name -> specifier_qualifier_list option(abstract_declarator)
## In state 833, spurious reduction of production ctype -> type_name
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statement: CN_EXTRACT OFFSETOF WHILE
##
## Ends in an error in state: 851.
##
## unary_expr -> OFFSETOF . LPAREN UNAME VARIABLE COMMA UNAME VARIABLE RPAREN [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
## unary_expr -> OFFSETOF . LPAREN UNAME VARIABLE COMMA LNAME VARIABLE RPAREN [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
## unary_expr -> OFFSETOF . LPAREN UNAME VARIABLE COMMA UNAME TYPE RPAREN [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
## unary_expr -> OFFSETOF . LPAREN UNAME VARIABLE COMMA LNAME TYPE RPAREN [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
## unary_expr -> OFFSETOF . LPAREN LNAME VARIABLE COMMA UNAME VARIABLE RPAREN [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
## unary_expr -> OFFSETOF . LPAREN LNAME VARIABLE COMMA LNAME VARIABLE RPAREN [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
## unary_expr -> OFFSETOF . LPAREN LNAME VARIABLE COMMA UNAME TYPE RPAREN [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
## unary_expr -> OFFSETOF . LPAREN LNAME VARIABLE COMMA LNAME TYPE RPAREN [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
## unary_expr -> OFFSETOF . LPAREN UNAME TYPE COMMA UNAME VARIABLE RPAREN [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
## unary_expr -> OFFSETOF . LPAREN UNAME TYPE COMMA LNAME VARIABLE RPAREN [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
## unary_expr -> OFFSETOF . LPAREN UNAME TYPE COMMA UNAME TYPE RPAREN [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
## unary_expr -> OFFSETOF . LPAREN UNAME TYPE COMMA LNAME TYPE RPAREN [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
## unary_expr -> OFFSETOF . LPAREN LNAME TYPE COMMA UNAME VARIABLE RPAREN [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
## unary_expr -> OFFSETOF . LPAREN LNAME TYPE COMMA LNAME VARIABLE RPAREN [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
## unary_expr -> OFFSETOF . LPAREN LNAME TYPE COMMA UNAME TYPE RPAREN [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
## unary_expr -> OFFSETOF . LPAREN LNAME TYPE COMMA LNAME TYPE RPAREN [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
##
## The known suffix of the stack is as follows:
## OFFSETOF
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statement: CN_EXTRACT OFFSETOF LPAREN WHILE
##
## Ends in an error in state: 852.
##
## unary_expr -> OFFSETOF LPAREN . UNAME VARIABLE COMMA UNAME VARIABLE RPAREN [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
## unary_expr -> OFFSETOF LPAREN . UNAME VARIABLE COMMA LNAME VARIABLE RPAREN [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
## unary_expr -> OFFSETOF LPAREN . UNAME VARIABLE COMMA UNAME TYPE RPAREN [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
## unary_expr -> OFFSETOF LPAREN . UNAME VARIABLE COMMA LNAME TYPE RPAREN [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
## unary_expr -> OFFSETOF LPAREN . LNAME VARIABLE COMMA UNAME VARIABLE RPAREN [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
## unary_expr -> OFFSETOF LPAREN . LNAME VARIABLE COMMA LNAME VARIABLE RPAREN [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
## unary_expr -> OFFSETOF LPAREN . LNAME VARIABLE COMMA UNAME TYPE RPAREN [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
## unary_expr -> OFFSETOF LPAREN . LNAME VARIABLE COMMA LNAME TYPE RPAREN [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
## unary_expr -> OFFSETOF LPAREN . UNAME TYPE COMMA UNAME VARIABLE RPAREN [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
## unary_expr -> OFFSETOF LPAREN . UNAME TYPE COMMA LNAME VARIABLE RPAREN [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
## unary_expr -> OFFSETOF LPAREN . UNAME TYPE COMMA UNAME TYPE RPAREN [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
## unary_expr -> OFFSETOF LPAREN . UNAME TYPE COMMA LNAME TYPE RPAREN [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
## unary_expr -> OFFSETOF LPAREN . LNAME TYPE COMMA UNAME VARIABLE RPAREN [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
## unary_expr -> OFFSETOF LPAREN . LNAME TYPE COMMA LNAME VARIABLE RPAREN [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
## unary_expr -> OFFSETOF LPAREN . LNAME TYPE COMMA UNAME TYPE RPAREN [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
## unary_expr -> OFFSETOF LPAREN . LNAME TYPE COMMA LNAME TYPE RPAREN [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
##
## The known suffix of the stack is as follows:
## OFFSETOF LPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statement: CN_EXTRACT OFFSETOF LPAREN UNAME WHILE
##
## Ends in an error in state: 853.
##
## unary_expr -> OFFSETOF LPAREN UNAME . VARIABLE COMMA UNAME VARIABLE RPAREN [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
## unary_expr -> OFFSETOF LPAREN UNAME . VARIABLE COMMA LNAME VARIABLE RPAREN [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
## unary_expr -> OFFSETOF LPAREN UNAME . VARIABLE COMMA UNAME TYPE RPAREN [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
## unary_expr -> OFFSETOF LPAREN UNAME . VARIABLE COMMA LNAME TYPE RPAREN [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
## unary_expr -> OFFSETOF LPAREN UNAME . TYPE COMMA UNAME VARIABLE RPAREN [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
## unary_expr -> OFFSETOF LPAREN UNAME . TYPE COMMA LNAME VARIABLE RPAREN [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
## unary_expr -> OFFSETOF LPAREN UNAME . TYPE COMMA UNAME TYPE RPAREN [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
## unary_expr -> OFFSETOF LPAREN UNAME . TYPE COMMA LNAME TYPE RPAREN [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
##
## The known suffix of the stack is as follows:
## OFFSETOF LPAREN UNAME
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statement: CN_EXTRACT OFFSETOF LPAREN UNAME VARIABLE WHILE
##
## Ends in an error in state: 854.
##
## unary_expr -> OFFSETOF LPAREN UNAME VARIABLE . COMMA UNAME VARIABLE RPAREN [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
## unary_expr -> OFFSETOF LPAREN UNAME VARIABLE . COMMA LNAME VARIABLE RPAREN [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
## unary_expr -> OFFSETOF LPAREN UNAME VARIABLE . COMMA UNAME TYPE RPAREN [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
## unary_expr -> OFFSETOF LPAREN UNAME VARIABLE . COMMA LNAME TYPE RPAREN [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
##
## The known suffix of the stack is as follows:
## OFFSETOF LPAREN UNAME VARIABLE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statement: CN_EXTRACT OFFSETOF LPAREN UNAME VARIABLE COMMA WHILE
##
## Ends in an error in state: 855.
##
## unary_expr -> OFFSETOF LPAREN UNAME VARIABLE COMMA . UNAME VARIABLE RPAREN [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
## unary_expr -> OFFSETOF LPAREN UNAME VARIABLE COMMA . LNAME VARIABLE RPAREN [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
## unary_expr -> OFFSETOF LPAREN UNAME VARIABLE COMMA . UNAME TYPE RPAREN [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
## unary_expr -> OFFSETOF LPAREN UNAME VARIABLE COMMA . LNAME TYPE RPAREN [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
##
## The known suffix of the stack is as follows:
## OFFSETOF LPAREN UNAME VARIABLE COMMA
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statement: CN_EXTRACT OFFSETOF LPAREN UNAME VARIABLE COMMA UNAME WHILE
##
## Ends in an error in state: 856.
##
## unary_expr -> OFFSETOF LPAREN UNAME VARIABLE COMMA UNAME . VARIABLE RPAREN [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
## unary_expr -> OFFSETOF LPAREN UNAME VARIABLE COMMA UNAME . TYPE RPAREN [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
##
## The known suffix of the stack is as follows:
## OFFSETOF LPAREN UNAME VARIABLE COMMA UNAME
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statement: CN_EXTRACT OFFSETOF LPAREN UNAME VARIABLE COMMA LNAME WHILE
##
## Ends in an error in state: 861.
##
## unary_expr -> OFFSETOF LPAREN UNAME VARIABLE COMMA LNAME . VARIABLE RPAREN [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
## unary_expr -> OFFSETOF LPAREN UNAME VARIABLE COMMA LNAME . TYPE RPAREN [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
##
## The known suffix of the stack is as follows:
## OFFSETOF LPAREN UNAME VARIABLE COMMA LNAME
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statement: CN_EXTRACT OFFSETOF LPAREN UNAME TYPE WHILE
##
## Ends in an error in state: 866.
##
## unary_expr -> OFFSETOF LPAREN UNAME TYPE . COMMA UNAME VARIABLE RPAREN [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
## unary_expr -> OFFSETOF LPAREN UNAME TYPE . COMMA LNAME VARIABLE RPAREN [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
## unary_expr -> OFFSETOF LPAREN UNAME TYPE . COMMA UNAME TYPE RPAREN [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
## unary_expr -> OFFSETOF LPAREN UNAME TYPE . COMMA LNAME TYPE RPAREN [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
##
## The known suffix of the stack is as follows:
## OFFSETOF LPAREN UNAME TYPE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statement: CN_EXTRACT OFFSETOF LPAREN UNAME TYPE COMMA WHILE
##
## Ends in an error in state: 867.
##
## unary_expr -> OFFSETOF LPAREN UNAME TYPE COMMA . UNAME VARIABLE RPAREN [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
## unary_expr -> OFFSETOF LPAREN UNAME TYPE COMMA . LNAME VARIABLE RPAREN [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
## unary_expr -> OFFSETOF LPAREN UNAME TYPE COMMA . UNAME TYPE RPAREN [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
## unary_expr -> OFFSETOF LPAREN UNAME TYPE COMMA . LNAME TYPE RPAREN [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
##
## The known suffix of the stack is as follows:
## OFFSETOF LPAREN UNAME TYPE COMMA
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statement: CN_EXTRACT OFFSETOF LPAREN UNAME TYPE COMMA UNAME WHILE
##
## Ends in an error in state: 868.
##
## unary_expr -> OFFSETOF LPAREN UNAME TYPE COMMA UNAME . VARIABLE RPAREN [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
## unary_expr -> OFFSETOF LPAREN UNAME TYPE COMMA UNAME . TYPE RPAREN [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
##
## The known suffix of the stack is as follows:
## OFFSETOF LPAREN UNAME TYPE COMMA UNAME
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statement: CN_EXTRACT OFFSETOF LPAREN UNAME TYPE COMMA LNAME WHILE
##
## Ends in an error in state: 873.
##
## unary_expr -> OFFSETOF LPAREN UNAME TYPE COMMA LNAME . VARIABLE RPAREN [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
## unary_expr -> OFFSETOF LPAREN UNAME TYPE COMMA LNAME . TYPE RPAREN [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
##
## The known suffix of the stack is as follows:
## OFFSETOF LPAREN UNAME TYPE COMMA LNAME
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statement: CN_EXTRACT OFFSETOF LPAREN LNAME WHILE
##
## Ends in an error in state: 878.
##
## unary_expr -> OFFSETOF LPAREN LNAME . VARIABLE COMMA UNAME VARIABLE RPAREN [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
## unary_expr -> OFFSETOF LPAREN LNAME . VARIABLE COMMA LNAME VARIABLE RPAREN [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
## unary_expr -> OFFSETOF LPAREN LNAME . VARIABLE COMMA UNAME TYPE RPAREN [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
## unary_expr -> OFFSETOF LPAREN LNAME . VARIABLE COMMA LNAME TYPE RPAREN [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
## unary_expr -> OFFSETOF LPAREN LNAME . TYPE COMMA UNAME VARIABLE RPAREN [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
## unary_expr -> OFFSETOF LPAREN LNAME . TYPE COMMA LNAME VARIABLE RPAREN [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
## unary_expr -> OFFSETOF LPAREN LNAME . TYPE COMMA UNAME TYPE RPAREN [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
## unary_expr -> OFFSETOF LPAREN LNAME . TYPE COMMA LNAME TYPE RPAREN [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
##
## The known suffix of the stack is as follows:
## OFFSETOF LPAREN LNAME
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statement: CN_EXTRACT OFFSETOF LPAREN LNAME VARIABLE WHILE
##
## Ends in an error in state: 879.
##
## unary_expr -> OFFSETOF LPAREN LNAME VARIABLE . COMMA UNAME VARIABLE RPAREN [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
## unary_expr -> OFFSETOF LPAREN LNAME VARIABLE . COMMA LNAME VARIABLE RPAREN [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
## unary_expr -> OFFSETOF LPAREN LNAME VARIABLE . COMMA UNAME TYPE RPAREN [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
## unary_expr -> OFFSETOF LPAREN LNAME VARIABLE . COMMA LNAME TYPE RPAREN [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
##
## The known suffix of the stack is as follows:
## OFFSETOF LPAREN LNAME VARIABLE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statement: CN_EXTRACT OFFSETOF LPAREN LNAME VARIABLE COMMA WHILE
##
## Ends in an error in state: 880.
##
## unary_expr -> OFFSETOF LPAREN LNAME VARIABLE COMMA . UNAME VARIABLE RPAREN [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
## unary_expr -> OFFSETOF LPAREN LNAME VARIABLE COMMA . LNAME VARIABLE RPAREN [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
## unary_expr -> OFFSETOF LPAREN LNAME VARIABLE COMMA . UNAME TYPE RPAREN [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
## unary_expr -> OFFSETOF LPAREN LNAME VARIABLE COMMA . LNAME TYPE RPAREN [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
##
## The known suffix of the stack is as follows:
## OFFSETOF LPAREN LNAME VARIABLE COMMA
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statement: CN_EXTRACT OFFSETOF LPAREN LNAME VARIABLE COMMA UNAME WHILE
##
## Ends in an error in state: 881.
##
## unary_expr -> OFFSETOF LPAREN LNAME VARIABLE COMMA UNAME . VARIABLE RPAREN [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
## unary_expr -> OFFSETOF LPAREN LNAME VARIABLE COMMA UNAME . TYPE RPAREN [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
##
## The known suffix of the stack is as follows:
## OFFSETOF LPAREN LNAME VARIABLE COMMA UNAME
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statement: CN_EXTRACT OFFSETOF LPAREN LNAME VARIABLE COMMA LNAME WHILE
##
## Ends in an error in state: 886.
##
## unary_expr -> OFFSETOF LPAREN LNAME VARIABLE COMMA LNAME . VARIABLE RPAREN [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
## unary_expr -> OFFSETOF LPAREN LNAME VARIABLE COMMA LNAME . TYPE RPAREN [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
##
## The known suffix of the stack is as follows:
## OFFSETOF LPAREN LNAME VARIABLE COMMA LNAME
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statement: CN_EXTRACT OFFSETOF LPAREN LNAME TYPE WHILE
##
## Ends in an error in state: 891.
##
## unary_expr -> OFFSETOF LPAREN LNAME TYPE . COMMA UNAME VARIABLE RPAREN [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
## unary_expr -> OFFSETOF LPAREN LNAME TYPE . COMMA LNAME VARIABLE RPAREN [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
## unary_expr -> OFFSETOF LPAREN LNAME TYPE . COMMA UNAME TYPE RPAREN [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
## unary_expr -> OFFSETOF LPAREN LNAME TYPE . COMMA LNAME TYPE RPAREN [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
##
## The known suffix of the stack is as follows:
## OFFSETOF LPAREN LNAME TYPE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statement: CN_EXTRACT OFFSETOF LPAREN LNAME TYPE COMMA WHILE
##
## Ends in an error in state: 892.
##
## unary_expr -> OFFSETOF LPAREN LNAME TYPE COMMA . UNAME VARIABLE RPAREN [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
## unary_expr -> OFFSETOF LPAREN LNAME TYPE COMMA . LNAME VARIABLE RPAREN [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
## unary_expr -> OFFSETOF LPAREN LNAME TYPE COMMA . UNAME TYPE RPAREN [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
## unary_expr -> OFFSETOF LPAREN LNAME TYPE COMMA . LNAME TYPE RPAREN [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
##
## The known suffix of the stack is as follows:
## OFFSETOF LPAREN LNAME TYPE COMMA
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statement: CN_EXTRACT OFFSETOF LPAREN LNAME TYPE COMMA UNAME WHILE
##
## Ends in an error in state: 893.
##
## unary_expr -> OFFSETOF LPAREN LNAME TYPE COMMA UNAME . VARIABLE RPAREN [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
## unary_expr -> OFFSETOF LPAREN LNAME TYPE COMMA UNAME . TYPE RPAREN [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
##
## The known suffix of the stack is as follows:
## OFFSETOF LPAREN LNAME TYPE COMMA UNAME
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statement: CN_EXTRACT OFFSETOF LPAREN LNAME TYPE COMMA LNAME WHILE
##
## Ends in an error in state: 898.
##
## unary_expr -> OFFSETOF LPAREN LNAME TYPE COMMA LNAME . VARIABLE RPAREN [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
## unary_expr -> OFFSETOF LPAREN LNAME TYPE COMMA LNAME . TYPE RPAREN [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
##
## The known suffix of the stack is as follows:
## OFFSETOF LPAREN LNAME TYPE COMMA LNAME
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statement: CN_EXTRACT LPAREN WHILE
##
## Ends in an error in state: 903.
##
## prim_expr -> LPAREN . expr RPAREN [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE DOT CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
## unary_expr -> LPAREN . base_type RPAREN prim_expr [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
##
## The known suffix of the stack is as follows:
## LPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_toplevel: CN_PREDICATE STRUCT WHILE
##
## Ends in an error in state: 905.
##
## base_type -> STRUCT . UNAME VARIABLE [ UNAME RPAREN LNAME GT COMMA ]
## base_type -> STRUCT . LNAME VARIABLE [ UNAME RPAREN LNAME GT COMMA ]
## base_type -> STRUCT . UNAME TYPE [ UNAME RPAREN LNAME GT COMMA ]
## base_type -> STRUCT . LNAME TYPE [ UNAME RPAREN LNAME GT COMMA ]
##
## The known suffix of the stack is as follows:
## STRUCT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_toplevel: CN_PREDICATE STRUCT UNAME WHILE
##
## Ends in an error in state: 906.
##
## base_type -> STRUCT UNAME . VARIABLE [ UNAME RPAREN LNAME GT COMMA ]
## base_type -> STRUCT UNAME . TYPE [ UNAME RPAREN LNAME GT COMMA ]
##
## The known suffix of the stack is as follows:
## STRUCT UNAME
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_toplevel: CN_PREDICATE STRUCT LNAME WHILE
##
## Ends in an error in state: 909.
##
## base_type -> STRUCT LNAME . VARIABLE [ UNAME RPAREN LNAME GT COMMA ]
## base_type -> STRUCT LNAME . TYPE [ UNAME RPAREN LNAME GT COMMA ]
##
## The known suffix of the stack is as follows:
## STRUCT LNAME
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statement: CN_EXTRACT LNAME WHILE
##
## Ends in an error in state: 912.
##
## prim_expr -> LNAME . VARIABLE [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS_GT MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE DOT CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
## prim_expr -> LNAME . TYPE [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS_GT MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE DOT CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
## prim_expr -> LNAME . VARIABLE LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS_GT MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE DOT CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
## prim_expr -> LNAME . TYPE LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS_GT MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE DOT CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
## prim_expr -> LNAME . VARIABLE cons_args [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS_GT MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE DOT CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
## prim_expr -> LNAME . TYPE cons_args [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS_GT MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE DOT CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
##
## The known suffix of the stack is as follows:
## LNAME
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statement: CN_EXTRACT LNAME VARIABLE WHILE
##
## Ends in an error in state: 913.
##
## prim_expr -> LNAME VARIABLE . [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS_GT MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE DOT CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
## prim_expr -> LNAME VARIABLE . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS_GT MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE DOT CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
## prim_expr -> LNAME VARIABLE . cons_args [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS_GT MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE DOT CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
##
## The known suffix of the stack is as follows:
## LNAME VARIABLE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statement: CN_EXTRACT LBRACE WHILE
##
## Ends in an error in state: 916.
##
## prim_expr -> LBRACE . expr RBRACE PERCENT UNAME VARIABLE [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE DOT CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
## prim_expr -> LBRACE . expr RBRACE PERCENT LNAME VARIABLE [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE DOT CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
## prim_expr -> LBRACE . record_def RBRACE [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE DOT CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
## prim_expr -> LBRACE . nonempty_member_updates RBRACE [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE DOT CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
## unary_expr -> LBRACE . expr RBRACE CN_UNCHANGED [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
##
## The known suffix of the stack is as follows:
## LBRACE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statement: CN_EXTRACT LBRACE UNAME WHILE
##
## Ends in an error in state: 917.
##
## member_def -> UNAME . VARIABLE COLON expr [ RBRACE COMMA ]
## member_def -> UNAME . TYPE COLON expr [ RBRACE COMMA ]
## prim_expr -> UNAME . VARIABLE [ STAR SLASH RBRACE QUESTION PLUS PIPE_PIPE MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT BANG_EQ AMPERSAND_AMPERSAND ]
## prim_expr -> UNAME . TYPE [ STAR SLASH RBRACE QUESTION PLUS PIPE_PIPE MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT BANG_EQ AMPERSAND_AMPERSAND ]
## prim_expr -> UNAME . VARIABLE LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ STAR SLASH RBRACE QUESTION PLUS PIPE_PIPE MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT BANG_EQ AMPERSAND_AMPERSAND ]
## prim_expr -> UNAME . TYPE LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ STAR SLASH RBRACE QUESTION PLUS PIPE_PIPE MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT BANG_EQ AMPERSAND_AMPERSAND ]
## prim_expr -> UNAME . VARIABLE cons_args [ STAR SLASH RBRACE QUESTION PLUS PIPE_PIPE MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT BANG_EQ AMPERSAND_AMPERSAND ]
## prim_expr -> UNAME . TYPE cons_args [ STAR SLASH RBRACE QUESTION PLUS PIPE_PIPE MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT BANG_EQ AMPERSAND_AMPERSAND ]
##
## The known suffix of the stack is as follows:
## UNAME
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statement: CN_EXTRACT LBRACE UNAME VARIABLE WHILE
##
## Ends in an error in state: 918.
##
## member_def -> UNAME VARIABLE . COLON expr [ RBRACE COMMA ]
## prim_expr -> UNAME VARIABLE . [ STAR SLASH RBRACE QUESTION PLUS PIPE_PIPE MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT BANG_EQ AMPERSAND_AMPERSAND ]
## prim_expr -> UNAME VARIABLE . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ STAR SLASH RBRACE QUESTION PLUS PIPE_PIPE MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT BANG_EQ AMPERSAND_AMPERSAND ]
## prim_expr -> UNAME VARIABLE . cons_args [ STAR SLASH RBRACE QUESTION PLUS PIPE_PIPE MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT BANG_EQ AMPERSAND_AMPERSAND ]
##
## The known suffix of the stack is as follows:
## UNAME VARIABLE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statement: CN_EXTRACT LNAME TYPE LBRACE UNAME WHILE
##
## Ends in an error in state: 920.
##
## member_def -> UNAME . VARIABLE COLON expr [ RBRACE COMMA ]
## member_def -> UNAME . TYPE COLON expr [ RBRACE COMMA ]
##
## The known suffix of the stack is as follows:
## UNAME
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statement: CN_EXTRACT CN_MATCH UNAME WHILE
##
## Ends in an error in state: 929.
##
## match_target -> UNAME . VARIABLE [ LBRACE ]
## match_target -> UNAME . TYPE [ LBRACE ]
##
## The known suffix of the stack is as follows:
## UNAME
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statement: CN_EXTRACT CN_LET WHILE
##
## Ends in an error in state: 933.
##
## expr -> CN_LET . UNAME VARIABLE EQ expr SEMICOLON expr [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX COMMA CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
## expr -> CN_LET . LNAME VARIABLE EQ expr SEMICOLON expr [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX COMMA CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
## expr -> CN_LET . UNAME TYPE EQ expr SEMICOLON expr [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX COMMA CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
## expr -> CN_LET . LNAME TYPE EQ expr SEMICOLON expr [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX COMMA CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## CN_LET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statement: CN_EXTRACT CN_LET UNAME WHILE
##
## Ends in an error in state: 934.
##
## expr -> CN_LET UNAME . VARIABLE EQ expr SEMICOLON expr [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX COMMA CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
## expr -> CN_LET UNAME . TYPE EQ expr SEMICOLON expr [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX COMMA CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## CN_LET UNAME
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statement: CN_EXTRACT CN_GOOD LT BOOL COLON
##
## Ends in an error in state: 939.
##
## cn_good -> CN_GOOD LT ctype . GT [ LPAREN COMMA ]
##
## The known suffix of the stack is as follows:
## CN_GOOD LT ctype
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 170, spurious reduction of production attribute_type_specifier_unique -> type_specifier_unique
## In state 457, spurious reduction of production list_pair(attribute_type_qualifier,attribute_alignment_specifier) ->
## In state 458, spurious reduction of production list_tuple3_eq1(attribute_type_specifier_unique,attribute_type_qualifier,attribute_alignment_specifier) -> attribute_type_specifier_unique list_pair(attribute_type_qualifier,attribute_alignment_specifier)
## In state 456, spurious reduction of production specifier_qualifier_list -> list_tuple3_eq1(attribute_type_specifier_unique,attribute_type_qualifier,attribute_alignment_specifier)
## In state 484, spurious reduction of production option(abstract_declarator) ->
## In state 488, spurious reduction of production type_name -> specifier_qualifier_list option(abstract_declarator)
## In state 833, spurious reduction of production ctype -> type_name
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statement: CN_EXTRACT CN_EACH WHILE
##
## Ends in an error in state: 942.
##
## expr_without_let -> CN_EACH . LPAREN UNAME VARIABLE COLON int_range SEMICOLON expr RPAREN [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX COMMA CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
## expr_without_let -> CN_EACH . LPAREN LNAME VARIABLE COLON int_range SEMICOLON expr RPAREN [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX COMMA CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
## expr_without_let -> CN_EACH . LPAREN UNAME TYPE COLON int_range SEMICOLON expr RPAREN [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX COMMA CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
## expr_without_let -> CN_EACH . LPAREN LNAME TYPE COLON int_range SEMICOLON expr RPAREN [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX COMMA CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## CN_EACH
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statement: CN_EXTRACT CN_EACH LPAREN WHILE
##
## Ends in an error in state: 943.
##
## expr_without_let -> CN_EACH LPAREN . UNAME VARIABLE COLON int_range SEMICOLON expr RPAREN [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX COMMA CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
## expr_without_let -> CN_EACH LPAREN . LNAME VARIABLE COLON int_range SEMICOLON expr RPAREN [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX COMMA CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
## expr_without_let -> CN_EACH LPAREN . UNAME TYPE COLON int_range SEMICOLON expr RPAREN [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX COMMA CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
## expr_without_let -> CN_EACH LPAREN . LNAME TYPE COLON int_range SEMICOLON expr RPAREN [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX COMMA CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## CN_EACH LPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statement: CN_EXTRACT CN_EACH LPAREN UNAME WHILE
##
## Ends in an error in state: 944.
##
## expr_without_let -> CN_EACH LPAREN UNAME . VARIABLE COLON int_range SEMICOLON expr RPAREN [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX COMMA CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
## expr_without_let -> CN_EACH LPAREN UNAME . TYPE COLON int_range SEMICOLON expr RPAREN [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX COMMA CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## CN_EACH LPAREN UNAME
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statement: CN_EXTRACT AMPERSAND WHILE
##
## Ends in an error in state: 954.
##
## unary_expr -> AMPERSAND . LPAREN prim_expr MINUS_GT UNAME VARIABLE RPAREN [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
## unary_expr -> AMPERSAND . LPAREN prim_expr MINUS_GT LNAME VARIABLE RPAREN [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
## unary_expr -> AMPERSAND . LPAREN prim_expr MINUS_GT UNAME TYPE RPAREN [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
## unary_expr -> AMPERSAND . LPAREN prim_expr MINUS_GT LNAME TYPE RPAREN [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
## unary_expr -> AMPERSAND . UNAME VARIABLE [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
## unary_expr -> AMPERSAND . LNAME VARIABLE [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
## unary_expr -> AMPERSAND . UNAME TYPE [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
## unary_expr -> AMPERSAND . LNAME TYPE [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
##
## The known suffix of the stack is as follows:
## AMPERSAND
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statement: CN_EXTRACT AMPERSAND UNAME WHILE
##
## Ends in an error in state: 955.
##
## unary_expr -> AMPERSAND UNAME . VARIABLE [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
## unary_expr -> AMPERSAND UNAME . TYPE [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
##
## The known suffix of the stack is as follows:
## AMPERSAND UNAME
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statement: CN_EXTRACT AMPERSAND LPAREN WHILE
##
## Ends in an error in state: 958.
##
## unary_expr -> AMPERSAND LPAREN . prim_expr MINUS_GT UNAME VARIABLE RPAREN [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
## unary_expr -> AMPERSAND LPAREN . prim_expr MINUS_GT LNAME VARIABLE RPAREN [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
## unary_expr -> AMPERSAND LPAREN . prim_expr MINUS_GT UNAME TYPE RPAREN [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
## unary_expr -> AMPERSAND LPAREN . prim_expr MINUS_GT LNAME TYPE RPAREN [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
##
## The known suffix of the stack is as follows:
## AMPERSAND LPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statement: CN_EXTRACT BANG LBRACE WHILE
##
## Ends in an error in state: 959.
##
## prim_expr -> LBRACE . expr RBRACE PERCENT UNAME VARIABLE [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS_GT MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE DOT CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
## prim_expr -> LBRACE . expr RBRACE PERCENT LNAME VARIABLE [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS_GT MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE DOT CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
## prim_expr -> LBRACE . record_def RBRACE [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS_GT MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE DOT CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
## prim_expr -> LBRACE . nonempty_member_updates RBRACE [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS_GT MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE DOT CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
##
## The known suffix of the stack is as follows:
## LBRACE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statement: CN_EXTRACT LBRACE LNAME WHILE
##
## Ends in an error in state: 960.
##
## member_def -> LNAME . VARIABLE COLON expr [ RBRACE COMMA ]
## member_def -> LNAME . TYPE COLON expr [ RBRACE COMMA ]
## prim_expr -> LNAME . VARIABLE [ STAR SLASH RBRACE QUESTION PLUS PIPE_PIPE MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT BANG_EQ AMPERSAND_AMPERSAND ]
## prim_expr -> LNAME . TYPE [ STAR SLASH RBRACE QUESTION PLUS PIPE_PIPE MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT BANG_EQ AMPERSAND_AMPERSAND ]
## prim_expr -> LNAME . VARIABLE LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ STAR SLASH RBRACE QUESTION PLUS PIPE_PIPE MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT BANG_EQ AMPERSAND_AMPERSAND ]
## prim_expr -> LNAME . TYPE LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ STAR SLASH RBRACE QUESTION PLUS PIPE_PIPE MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT BANG_EQ AMPERSAND_AMPERSAND ]
## prim_expr -> LNAME . VARIABLE cons_args [ STAR SLASH RBRACE QUESTION PLUS PIPE_PIPE MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT BANG_EQ AMPERSAND_AMPERSAND ]
## prim_expr -> LNAME . TYPE cons_args [ STAR SLASH RBRACE QUESTION PLUS PIPE_PIPE MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT BANG_EQ AMPERSAND_AMPERSAND ]
##
## The known suffix of the stack is as follows:
## LNAME
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statement: CN_EXTRACT LBRACE LNAME VARIABLE WHILE
##
## Ends in an error in state: 961.
##
## member_def -> LNAME VARIABLE . COLON expr [ RBRACE COMMA ]
## prim_expr -> LNAME VARIABLE . [ STAR SLASH RBRACE QUESTION PLUS PIPE_PIPE MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT BANG_EQ AMPERSAND_AMPERSAND ]
## prim_expr -> LNAME VARIABLE . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ STAR SLASH RBRACE QUESTION PLUS PIPE_PIPE MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT BANG_EQ AMPERSAND_AMPERSAND ]
## prim_expr -> LNAME VARIABLE . cons_args [ STAR SLASH RBRACE QUESTION PLUS PIPE_PIPE MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT BANG_EQ AMPERSAND_AMPERSAND ]
##
## The known suffix of the stack is as follows:
## LNAME VARIABLE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statement: CN_EXTRACT CN_FALSE MINUS_GT
##
## Ends in an error in state: 966.
##
## prim_expr -> prim_expr . DOT UNAME VARIABLE [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE DOT CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
## prim_expr -> prim_expr . DOT LNAME VARIABLE [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE DOT CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
## prim_expr -> prim_expr . DOT UNAME TYPE [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE DOT CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
## prim_expr -> prim_expr . DOT LNAME TYPE [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE DOT CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
## prim_expr -> prim_expr . LBRACK expr RBRACK [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE DOT CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
## prim_expr -> prim_expr . LBRACK separated_nonempty_list(COMMA,index_update) RBRACK [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE DOT CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
## unary_expr -> prim_expr . [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
##
## The known suffix of the stack is as follows:
## prim_expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statement: CN_EXTRACT CN_FALSE LBRACK WHILE
##
## Ends in an error in state: 967.
##
## prim_expr -> prim_expr LBRACK . expr RBRACK [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS_GT MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE DOT CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
## prim_expr -> prim_expr LBRACK . separated_nonempty_list(COMMA,index_update) RBRACK [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS_GT MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE DOT CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
##
## The known suffix of the stack is as follows:
## prim_expr LBRACK
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statement: CN_EXTRACT CN_FALSE LBRACK CN_FALSE VOLATILE
##
## Ends in an error in state: 970.
##
## index_update -> prim_expr . COLON expr [ RBRACK COMMA ]
## prim_expr -> prim_expr . DOT UNAME VARIABLE [ STAR SLASH RBRACK QUESTION PLUS PIPE_PIPE MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COLON BANG_EQ AMPERSAND_AMPERSAND ]
## prim_expr -> prim_expr . DOT LNAME VARIABLE [ STAR SLASH RBRACK QUESTION PLUS PIPE_PIPE MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COLON BANG_EQ AMPERSAND_AMPERSAND ]
## prim_expr -> prim_expr . DOT UNAME TYPE [ STAR SLASH RBRACK QUESTION PLUS PIPE_PIPE MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COLON BANG_EQ AMPERSAND_AMPERSAND ]
## prim_expr -> prim_expr . DOT LNAME TYPE [ STAR SLASH RBRACK QUESTION PLUS PIPE_PIPE MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COLON BANG_EQ AMPERSAND_AMPERSAND ]
## prim_expr -> prim_expr . LBRACK expr RBRACK [ STAR SLASH RBRACK QUESTION PLUS PIPE_PIPE MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COLON BANG_EQ AMPERSAND_AMPERSAND ]
## prim_expr -> prim_expr . LBRACK separated_nonempty_list(COMMA,index_update) RBRACK [ STAR SLASH RBRACK QUESTION PLUS PIPE_PIPE MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COLON BANG_EQ AMPERSAND_AMPERSAND ]
## unary_expr -> prim_expr . [ STAR SLASH RBRACK QUESTION PLUS PIPE_PIPE MINUS LT_EQ LT GT_EQ GT EQ_EQ BANG_EQ AMPERSAND_AMPERSAND ]
##
## The known suffix of the stack is as follows:
## prim_expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statement: CN_EXTRACT CN_FALSE DOT WHILE
##
## Ends in an error in state: 971.
##
## prim_expr -> prim_expr DOT . UNAME VARIABLE [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS_GT MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE DOT CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
## prim_expr -> prim_expr DOT . LNAME VARIABLE [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS_GT MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE DOT CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
## prim_expr -> prim_expr DOT . UNAME TYPE [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS_GT MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE DOT CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
## prim_expr -> prim_expr DOT . LNAME TYPE [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS_GT MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE DOT CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
##
## The known suffix of the stack is as follows:
## prim_expr DOT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statement: CN_EXTRACT CN_FALSE DOT UNAME WHILE
##
## Ends in an error in state: 972.
##
## prim_expr -> prim_expr DOT UNAME . VARIABLE [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS_GT MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE DOT CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
## prim_expr -> prim_expr DOT UNAME . TYPE [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS_GT MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE DOT CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
##
## The known suffix of the stack is as follows:
## prim_expr DOT UNAME
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statement: CN_EXTRACT CN_FALSE DOT LNAME WHILE
##
## Ends in an error in state: 975.
##
## prim_expr -> prim_expr DOT LNAME . VARIABLE [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS_GT MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE DOT CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
## prim_expr -> prim_expr DOT LNAME . TYPE [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS_GT MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE DOT CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
##
## The known suffix of the stack is as follows:
## prim_expr DOT LNAME
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statement: CN_EXTRACT AMPERSAND LNAME TYPE WHILE
##
## Ends in an error in state: 979.
##
## add_expr -> mul_expr . [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
## mul_expr -> mul_expr . STAR unary_expr [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
## mul_expr -> mul_expr . SLASH unary_expr [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
##
## The known suffix of the stack is as follows:
## mul_expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statement: CN_EXTRACT CN_FALSE COLON
##
## Ends in an error in state: 984.
##
## expr_without_let -> list_expr . [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX COMMA CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
## expr_without_let -> list_expr . QUESTION list_expr COLON list_expr [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX COMMA CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## list_expr
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 966, spurious reduction of production unary_expr -> prim_expr
## In state 963, spurious reduction of production mul_expr -> unary_expr
## In state 979, spurious reduction of production add_expr -> mul_expr
## In state 1008, spurious reduction of production rel_expr -> add_expr
## In state 964, spurious reduction of production bool_bin_expr -> rel_expr
## In state 989, spurious reduction of production list_expr -> bool_bin_expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statement: CN_EXTRACT CN_FALSE QUESTION CN_FALSE VOLATILE
##
## Ends in an error in state: 986.
##
## expr_without_let -> list_expr QUESTION list_expr . COLON list_expr [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX COMMA CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## list_expr QUESTION list_expr
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 966, spurious reduction of production unary_expr -> prim_expr
## In state 963, spurious reduction of production mul_expr -> unary_expr
## In state 979, spurious reduction of production add_expr -> mul_expr
## In state 1008, spurious reduction of production rel_expr -> add_expr
## In state 964, spurious reduction of production bool_bin_expr -> rel_expr
## In state 989, spurious reduction of production list_expr -> bool_bin_expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statement: CN_EXTRACT CN_FALSE PLUS AMPERSAND LNAME TYPE WHILE
##
## Ends in an error in state: 995.
##
## add_expr -> add_expr PLUS mul_expr . [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
## mul_expr -> mul_expr . STAR unary_expr [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
## mul_expr -> mul_expr . SLASH unary_expr [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
##
## The known suffix of the stack is as follows:
## add_expr PLUS mul_expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statement: CN_EXTRACT CN_FALSE MINUS AMPERSAND LNAME TYPE WHILE
##
## Ends in an error in state: 999.
##
## add_expr -> add_expr MINUS mul_expr . [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
## mul_expr -> mul_expr . STAR unary_expr [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
## mul_expr -> mul_expr . SLASH unary_expr [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
##
## The known suffix of the stack is as follows:
## add_expr MINUS mul_expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statement: CN_EXTRACT CN_GOOD LT BOOL GT LPAREN CN_FALSE VOLATILE
##
## Ends in an error in state: 1012.
##
## prim_expr -> cn_good LPAREN expr . RPAREN [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS_GT MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE DOT CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
##
## The known suffix of the stack is as follows:
## cn_good LPAREN expr
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 966, spurious reduction of production unary_expr -> prim_expr
## In state 963, spurious reduction of production mul_expr -> unary_expr
## In state 979, spurious reduction of production add_expr -> mul_expr
## In state 1008, spurious reduction of production rel_expr -> add_expr
## In state 964, spurious reduction of production bool_bin_expr -> rel_expr
## In state 989, spurious reduction of production list_expr -> bool_bin_expr
## In state 984, spurious reduction of production expr_without_let -> list_expr
## In state 1011, spurious reduction of production expr -> expr_without_let
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statement: CN_EXTRACT CN_FALSE LBRACK CN_FALSE COLON CN_FALSE VOLATILE
##
## Ends in an error in state: 1015.
##
## separated_nonempty_list(COMMA,index_update) -> index_update . [ RBRACK ]
## separated_nonempty_list(COMMA,index_update) -> index_update . COMMA separated_nonempty_list(COMMA,index_update) [ RBRACK ]
##
## The known suffix of the stack is as follows:
## index_update
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 966, spurious reduction of production unary_expr -> prim_expr
## In state 963, spurious reduction of production mul_expr -> unary_expr
## In state 979, spurious reduction of production add_expr -> mul_expr
## In state 1008, spurious reduction of production rel_expr -> add_expr
## In state 964, spurious reduction of production bool_bin_expr -> rel_expr
## In state 989, spurious reduction of production list_expr -> bool_bin_expr
## In state 984, spurious reduction of production expr_without_let -> list_expr
## In state 1011, spurious reduction of production expr -> expr_without_let
## In state 1014, spurious reduction of production index_update -> prim_expr COLON expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statement: CN_EXTRACT CN_FALSE LBRACK CN_FALSE COLON CN_FALSE COMMA CN_FALSE VOLATILE
##
## Ends in an error in state: 1018.
##
## index_update -> prim_expr . COLON expr [ RBRACK COMMA ]
## prim_expr -> prim_expr . DOT UNAME VARIABLE [ LBRACK DOT COLON ]
## prim_expr -> prim_expr . DOT LNAME VARIABLE [ LBRACK DOT COLON ]
## prim_expr -> prim_expr . DOT UNAME TYPE [ LBRACK DOT COLON ]
## prim_expr -> prim_expr . DOT LNAME TYPE [ LBRACK DOT COLON ]
## prim_expr -> prim_expr . LBRACK expr RBRACK [ LBRACK DOT COLON ]
## prim_expr -> prim_expr . LBRACK separated_nonempty_list(COMMA,index_update) RBRACK [ LBRACK DOT COLON ]
##
## The known suffix of the stack is as follows:
## prim_expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statement: CN_EXTRACT CN_FALSE LBRACK STAR CN_FALSE VOLATILE
##
## Ends in an error in state: 1019.
##
## prim_expr -> prim_expr LBRACK expr . RBRACK [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS_GT MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE DOT CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
##
## The known suffix of the stack is as follows:
## prim_expr LBRACK expr
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 966, spurious reduction of production unary_expr -> prim_expr
## In state 1236, spurious reduction of production unary_expr -> STAR unary_expr
## In state 963, spurious reduction of production mul_expr -> unary_expr
## In state 979, spurious reduction of production add_expr -> mul_expr
## In state 1008, spurious reduction of production rel_expr -> add_expr
## In state 964, spurious reduction of production bool_bin_expr -> rel_expr
## In state 989, spurious reduction of production list_expr -> bool_bin_expr
## In state 984, spurious reduction of production expr_without_let -> list_expr
## In state 1011, spurious reduction of production expr -> expr_without_let
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statement: CN_EXTRACT LBRACE LNAME TYPE WHILE
##
## Ends in an error in state: 1024.
##
## member_def -> LNAME TYPE . COLON expr [ RBRACE COMMA ]
## prim_expr -> LNAME TYPE . [ STAR SLASH RBRACE QUESTION PLUS PIPE_PIPE MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT BANG_EQ AMPERSAND_AMPERSAND ]
## prim_expr -> LNAME TYPE . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ STAR SLASH RBRACE QUESTION PLUS PIPE_PIPE MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT BANG_EQ AMPERSAND_AMPERSAND ]
## prim_expr -> LNAME TYPE . cons_args [ STAR SLASH RBRACE QUESTION PLUS PIPE_PIPE MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT BANG_EQ AMPERSAND_AMPERSAND ]
##
## The known suffix of the stack is as follows:
## LNAME TYPE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statement: CN_PACK CN_OWNED LPAREN CN_FALSE VOLATILE
##
## Ends in an error in state: 1029.
##
## separated_nonempty_list(COMMA,expr) -> expr . [ RPAREN ]
## separated_nonempty_list(COMMA,expr) -> expr . COMMA separated_nonempty_list(COMMA,expr) [ RPAREN ]
##
## The known suffix of the stack is as follows:
## expr
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 966, spurious reduction of production unary_expr -> prim_expr
## In state 963, spurious reduction of production mul_expr -> unary_expr
## In state 979, spurious reduction of production add_expr -> mul_expr
## In state 1008, spurious reduction of production rel_expr -> add_expr
## In state 964, spurious reduction of production bool_bin_expr -> rel_expr
## In state 989, spurious reduction of production list_expr -> bool_bin_expr
## In state 984, spurious reduction of production expr_without_let -> list_expr
## In state 1011, spurious reduction of production expr -> expr_without_let
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statement: CN_EXTRACT LBRACE UNAME TYPE COLON CN_FALSE COMMA DOT DOT CN_FALSE VOLATILE
##
## Ends in an error in state: 1038.
##
## prim_expr -> LBRACE nonempty_member_updates . RBRACE [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS_GT MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE DOT CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
##
## The known suffix of the stack is as follows:
## LBRACE nonempty_member_updates
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 966, spurious reduction of production unary_expr -> prim_expr
## In state 963, spurious reduction of production mul_expr -> unary_expr
## In state 979, spurious reduction of production add_expr -> mul_expr
## In state 1008, spurious reduction of production rel_expr -> add_expr
## In state 964, spurious reduction of production bool_bin_expr -> rel_expr
## In state 989, spurious reduction of production list_expr -> bool_bin_expr
## In state 984, spurious reduction of production expr_without_let -> list_expr
## In state 1011, spurious reduction of production expr -> expr_without_let
## In state 1047, spurious reduction of production member_updates -> DOT DOT expr
## In state 1049, spurious reduction of production nonempty_member_updates -> member_def COMMA member_updates
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statement: CN_EXTRACT LBRACE UNAME TYPE COLON CN_FALSE VOLATILE
##
## Ends in an error in state: 1040.
##
## nonempty_member_updates -> member_def . COMMA member_updates [ RBRACE ]
## separated_nonempty_list(COMMA,member_def) -> member_def . [ RBRACE ]
## separated_nonempty_list(COMMA,member_def) -> member_def . COMMA separated_nonempty_list(COMMA,member_def) [ RBRACE ]
##
## The known suffix of the stack is as follows:
## member_def
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 966, spurious reduction of production unary_expr -> prim_expr
## In state 963, spurious reduction of production mul_expr -> unary_expr
## In state 979, spurious reduction of production add_expr -> mul_expr
## In state 1008, spurious reduction of production rel_expr -> add_expr
## In state 964, spurious reduction of production bool_bin_expr -> rel_expr
## In state 989, spurious reduction of production list_expr -> bool_bin_expr
## In state 984, spurious reduction of production expr_without_let -> list_expr
## In state 1011, spurious reduction of production expr -> expr_without_let
## In state 1157, spurious reduction of production member_def -> UNAME TYPE COLON expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statement: CN_EXTRACT LBRACE UNAME TYPE COLON CN_FALSE COMMA WHILE
##
## Ends in an error in state: 1041.
##
## nonempty_member_updates -> member_def COMMA . member_updates [ RBRACE ]
## separated_nonempty_list(COMMA,member_def) -> member_def COMMA . separated_nonempty_list(COMMA,member_def) [ RBRACE ]
##
## The known suffix of the stack is as follows:
## member_def COMMA
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statement: CN_EXTRACT LNAME TYPE LBRACE LNAME WHILE
##
## Ends in an error in state: 1042.
##
## member_def -> LNAME . VARIABLE COLON expr [ RBRACE COMMA ]
## member_def -> LNAME . TYPE COLON expr [ RBRACE COMMA ]
##
## The known suffix of the stack is as follows:
## LNAME
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statement: CN_EXTRACT LBRACE UNAME TYPE COLON CN_FALSE COMMA UNAME TYPE COLON CN_FALSE VOLATILE
##
## Ends in an error in state: 1050.
##
## member_updates -> member_def . COMMA member_updates [ RBRACE ]
## separated_nonempty_list(COMMA,member_def) -> member_def . [ RBRACE ]
## separated_nonempty_list(COMMA,member_def) -> member_def . COMMA separated_nonempty_list(COMMA,member_def) [ RBRACE ]
##
## The known suffix of the stack is as follows:
## member_def
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 966, spurious reduction of production unary_expr -> prim_expr
## In state 963, spurious reduction of production mul_expr -> unary_expr
## In state 979, spurious reduction of production add_expr -> mul_expr
## In state 1008, spurious reduction of production rel_expr -> add_expr
## In state 964, spurious reduction of production bool_bin_expr -> rel_expr
## In state 989, spurious reduction of production list_expr -> bool_bin_expr
## In state 984, spurious reduction of production expr_without_let -> list_expr
## In state 1011, spurious reduction of production expr -> expr_without_let
## In state 1157, spurious reduction of production member_def -> UNAME TYPE COLON expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statement: CN_EXTRACT LBRACE UNAME TYPE COLON CN_FALSE COMMA UNAME TYPE COLON CN_FALSE COMMA WHILE
##
## Ends in an error in state: 1051.
##
## member_updates -> member_def COMMA . member_updates [ RBRACE ]
## separated_nonempty_list(COMMA,member_def) -> member_def COMMA . separated_nonempty_list(COMMA,member_def) [ RBRACE ]
##
## The known suffix of the stack is as follows:
## member_def COMMA
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statement: CN_EXTRACT BANG LBRACE CN_FALSE VOLATILE
##
## Ends in an error in state: 1053.
##
## prim_expr -> LBRACE expr . RBRACE PERCENT UNAME VARIABLE [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS_GT MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE DOT CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
## prim_expr -> LBRACE expr . RBRACE PERCENT LNAME VARIABLE [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS_GT MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE DOT CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
##
## The known suffix of the stack is as follows:
## LBRACE expr
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 966, spurious reduction of production unary_expr -> prim_expr
## In state 963, spurious reduction of production mul_expr -> unary_expr
## In state 979, spurious reduction of production add_expr -> mul_expr
## In state 1008, spurious reduction of production rel_expr -> add_expr
## In state 964, spurious reduction of production bool_bin_expr -> rel_expr
## In state 989, spurious reduction of production list_expr -> bool_bin_expr
## In state 984, spurious reduction of production expr_without_let -> list_expr
## In state 1011, spurious reduction of production expr -> expr_without_let
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statement: CN_EXTRACT BANG LBRACE CN_FALSE RBRACE WHILE
##
## Ends in an error in state: 1054.
##
## prim_expr -> LBRACE expr RBRACE . PERCENT UNAME VARIABLE [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS_GT MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE DOT CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
## prim_expr -> LBRACE expr RBRACE . PERCENT LNAME VARIABLE [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS_GT MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE DOT CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
##
## The known suffix of the stack is as follows:
## LBRACE expr RBRACE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statement: CN_EXTRACT LBRACE CN_FALSE RBRACE PERCENT WHILE
##
## Ends in an error in state: 1055.
##
## prim_expr -> LBRACE expr RBRACE PERCENT . UNAME VARIABLE [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS_GT MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE DOT CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
## prim_expr -> LBRACE expr RBRACE PERCENT . LNAME VARIABLE [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS_GT MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE DOT CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
##
## The known suffix of the stack is as follows:
## LBRACE expr RBRACE PERCENT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statement: CN_EXTRACT AMPERSAND LPAREN CN_FALSE VOLATILE
##
## Ends in an error in state: 1060.
##
## prim_expr -> prim_expr . DOT UNAME VARIABLE [ MINUS_GT LBRACK DOT ]
## prim_expr -> prim_expr . DOT LNAME VARIABLE [ MINUS_GT LBRACK DOT ]
## prim_expr -> prim_expr . DOT UNAME TYPE [ MINUS_GT LBRACK DOT ]
## prim_expr -> prim_expr . DOT LNAME TYPE [ MINUS_GT LBRACK DOT ]
## prim_expr -> prim_expr . LBRACK expr RBRACK [ MINUS_GT LBRACK DOT ]
## prim_expr -> prim_expr . LBRACK separated_nonempty_list(COMMA,index_update) RBRACK [ MINUS_GT LBRACK DOT ]
## unary_expr -> AMPERSAND LPAREN prim_expr . MINUS_GT UNAME VARIABLE RPAREN [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
## unary_expr -> AMPERSAND LPAREN prim_expr . MINUS_GT LNAME VARIABLE RPAREN [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
## unary_expr -> AMPERSAND LPAREN prim_expr . MINUS_GT UNAME TYPE RPAREN [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
## unary_expr -> AMPERSAND LPAREN prim_expr . MINUS_GT LNAME TYPE RPAREN [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
##
## The known suffix of the stack is as follows:
## AMPERSAND LPAREN prim_expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statement: CN_EXTRACT AMPERSAND LPAREN CN_FALSE MINUS_GT WHILE
##
## Ends in an error in state: 1061.
##
## unary_expr -> AMPERSAND LPAREN prim_expr MINUS_GT . UNAME VARIABLE RPAREN [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
## unary_expr -> AMPERSAND LPAREN prim_expr MINUS_GT . LNAME VARIABLE RPAREN [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
## unary_expr -> AMPERSAND LPAREN prim_expr MINUS_GT . UNAME TYPE RPAREN [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
## unary_expr -> AMPERSAND LPAREN prim_expr MINUS_GT . LNAME TYPE RPAREN [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
##
## The known suffix of the stack is as follows:
## AMPERSAND LPAREN prim_expr MINUS_GT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statement: CN_EXTRACT AMPERSAND LPAREN CN_FALSE MINUS_GT UNAME WHILE
##
## Ends in an error in state: 1062.
##
## unary_expr -> AMPERSAND LPAREN prim_expr MINUS_GT UNAME . VARIABLE RPAREN [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
## unary_expr -> AMPERSAND LPAREN prim_expr MINUS_GT UNAME . TYPE RPAREN [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
##
## The known suffix of the stack is as follows:
## AMPERSAND LPAREN prim_expr MINUS_GT UNAME
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statement: CN_EXTRACT AMPERSAND LPAREN CN_FALSE MINUS_GT LNAME WHILE
##
## Ends in an error in state: 1067.
##
## unary_expr -> AMPERSAND LPAREN prim_expr MINUS_GT LNAME . VARIABLE RPAREN [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
## unary_expr -> AMPERSAND LPAREN prim_expr MINUS_GT LNAME . TYPE RPAREN [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
##
## The known suffix of the stack is as follows:
## AMPERSAND LPAREN prim_expr MINUS_GT LNAME
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statement: CN_EXTRACT AMPERSAND LNAME WHILE
##
## Ends in an error in state: 1072.
##
## unary_expr -> AMPERSAND LNAME . VARIABLE [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
## unary_expr -> AMPERSAND LNAME . TYPE [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
##
## The known suffix of the stack is as follows:
## AMPERSAND LNAME
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statement: CN_EXTRACT LPAREN CN_FALSE VOLATILE
##
## Ends in an error in state: 1075.
##
## prim_expr -> LPAREN expr . RPAREN [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS_GT MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE DOT CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
##
## The known suffix of the stack is as follows:
## LPAREN expr
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 966, spurious reduction of production unary_expr -> prim_expr
## In state 963, spurious reduction of production mul_expr -> unary_expr
## In state 979, spurious reduction of production add_expr -> mul_expr
## In state 1008, spurious reduction of production rel_expr -> add_expr
## In state 964, spurious reduction of production bool_bin_expr -> rel_expr
## In state 989, spurious reduction of production list_expr -> bool_bin_expr
## In state 984, spurious reduction of production expr_without_let -> list_expr
## In state 1011, spurious reduction of production expr -> expr_without_let
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statement: CN_EXTRACT BANG CN_FALSE MINUS_GT
##
## Ends in an error in state: 1077.
##
## prim_expr -> prim_expr . DOT UNAME VARIABLE [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE DOT CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
## prim_expr -> prim_expr . DOT LNAME VARIABLE [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE DOT CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
## prim_expr -> prim_expr . DOT UNAME TYPE [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE DOT CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
## prim_expr -> prim_expr . DOT LNAME TYPE [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE DOT CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
## prim_expr -> prim_expr . LBRACK expr RBRACK [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE DOT CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
## prim_expr -> prim_expr . LBRACK separated_nonempty_list(COMMA,index_update) RBRACK [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE DOT CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
## unary_expr -> BANG prim_expr . [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
##
## The known suffix of the stack is as follows:
## BANG prim_expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statement: CN_EXTRACT CN_EACH LPAREN UNAME VARIABLE COLON CONSTANT COMMA CONSTANT SEMICOLON CN_FALSE VOLATILE
##
## Ends in an error in state: 1078.
##
## expr_without_let -> CN_EACH LPAREN UNAME VARIABLE COLON int_range SEMICOLON expr . RPAREN [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX COMMA CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## CN_EACH LPAREN UNAME VARIABLE COLON int_range SEMICOLON expr
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 966, spurious reduction of production unary_expr -> prim_expr
## In state 963, spurious reduction of production mul_expr -> unary_expr
## In state 979, spurious reduction of production add_expr -> mul_expr
## In state 1008, spurious reduction of production rel_expr -> add_expr
## In state 964, spurious reduction of production bool_bin_expr -> rel_expr
## In state 989, spurious reduction of production list_expr -> bool_bin_expr
## In state 984, spurious reduction of production expr_without_let -> list_expr
## In state 1011, spurious reduction of production expr -> expr_without_let
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statement: CN_EXTRACT CN_EACH LPAREN UNAME TYPE COLON CONSTANT COMMA CONSTANT SEMICOLON CN_FALSE VOLATILE
##
## Ends in an error in state: 1084.
##
## expr_without_let -> CN_EACH LPAREN UNAME TYPE COLON int_range SEMICOLON expr . RPAREN [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX COMMA CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## CN_EACH LPAREN UNAME TYPE COLON int_range SEMICOLON expr
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 966, spurious reduction of production unary_expr -> prim_expr
## In state 963, spurious reduction of production mul_expr -> unary_expr
## In state 979, spurious reduction of production add_expr -> mul_expr
## In state 1008, spurious reduction of production rel_expr -> add_expr
## In state 964, spurious reduction of production bool_bin_expr -> rel_expr
## In state 989, spurious reduction of production list_expr -> bool_bin_expr
## In state 984, spurious reduction of production expr_without_let -> list_expr
## In state 1011, spurious reduction of production expr -> expr_without_let
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statement: CN_EXTRACT CN_EACH LPAREN LNAME WHILE
##
## Ends in an error in state: 1086.
##
## expr_without_let -> CN_EACH LPAREN LNAME . VARIABLE COLON int_range SEMICOLON expr RPAREN [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX COMMA CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
## expr_without_let -> CN_EACH LPAREN LNAME . TYPE COLON int_range SEMICOLON expr RPAREN [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX COMMA CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## CN_EACH LPAREN LNAME
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statement: CN_EXTRACT CN_EACH LPAREN LNAME VARIABLE COLON CONSTANT COMMA CONSTANT SEMICOLON CN_FALSE VOLATILE
##
## Ends in an error in state: 1091.
##
## expr_without_let -> CN_EACH LPAREN LNAME VARIABLE COLON int_range SEMICOLON expr . RPAREN [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX COMMA CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## CN_EACH LPAREN LNAME VARIABLE COLON int_range SEMICOLON expr
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 966, spurious reduction of production unary_expr -> prim_expr
## In state 963, spurious reduction of production mul_expr -> unary_expr
## In state 979, spurious reduction of production add_expr -> mul_expr
## In state 1008, spurious reduction of production rel_expr -> add_expr
## In state 964, spurious reduction of production bool_bin_expr -> rel_expr
## In state 989, spurious reduction of production list_expr -> bool_bin_expr
## In state 984, spurious reduction of production expr_without_let -> list_expr
## In state 1011, spurious reduction of production expr -> expr_without_let
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statement: CN_EXTRACT CN_EACH LPAREN LNAME TYPE COLON CONSTANT COMMA CONSTANT SEMICOLON CN_FALSE VOLATILE
##
## Ends in an error in state: 1097.
##
## expr_without_let -> CN_EACH LPAREN LNAME TYPE COLON int_range SEMICOLON expr . RPAREN [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX COMMA CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## CN_EACH LPAREN LNAME TYPE COLON int_range SEMICOLON expr
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 966, spurious reduction of production unary_expr -> prim_expr
## In state 963, spurious reduction of production mul_expr -> unary_expr
## In state 979, spurious reduction of production add_expr -> mul_expr
## In state 1008, spurious reduction of production rel_expr -> add_expr
## In state 964, spurious reduction of production bool_bin_expr -> rel_expr
## In state 989, spurious reduction of production list_expr -> bool_bin_expr
## In state 984, spurious reduction of production expr_without_let -> list_expr
## In state 1011, spurious reduction of production expr -> expr_without_let
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statement: CN_EXTRACT CN_LET UNAME VARIABLE EQ CN_FALSE VOLATILE
##
## Ends in an error in state: 1099.
##
## expr -> CN_LET UNAME VARIABLE EQ expr . SEMICOLON expr [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX COMMA CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## CN_LET UNAME VARIABLE EQ expr
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 966, spurious reduction of production unary_expr -> prim_expr
## In state 963, spurious reduction of production mul_expr -> unary_expr
## In state 979, spurious reduction of production add_expr -> mul_expr
## In state 1008, spurious reduction of production rel_expr -> add_expr
## In state 964, spurious reduction of production bool_bin_expr -> rel_expr
## In state 989, spurious reduction of production list_expr -> bool_bin_expr
## In state 984, spurious reduction of production expr_without_let -> list_expr
## In state 1011, spurious reduction of production expr -> expr_without_let
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statement: CN_EXTRACT CN_LET UNAME TYPE EQ CN_FALSE VOLATILE
##
## Ends in an error in state: 1104.
##
## expr -> CN_LET UNAME TYPE EQ expr . SEMICOLON expr [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX COMMA CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## CN_LET UNAME TYPE EQ expr
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 966, spurious reduction of production unary_expr -> prim_expr
## In state 963, spurious reduction of production mul_expr -> unary_expr
## In state 979, spurious reduction of production add_expr -> mul_expr
## In state 1008, spurious reduction of production rel_expr -> add_expr
## In state 964, spurious reduction of production bool_bin_expr -> rel_expr
## In state 989, spurious reduction of production list_expr -> bool_bin_expr
## In state 984, spurious reduction of production expr_without_let -> list_expr
## In state 1011, spurious reduction of production expr -> expr_without_let
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statement: CN_EXTRACT CN_LET LNAME WHILE
##
## Ends in an error in state: 1107.
##
## expr -> CN_LET LNAME . VARIABLE EQ expr SEMICOLON expr [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX COMMA CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
## expr -> CN_LET LNAME . TYPE EQ expr SEMICOLON expr [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX COMMA CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## CN_LET LNAME
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statement: CN_EXTRACT CN_LET LNAME VARIABLE EQ CN_FALSE VOLATILE
##
## Ends in an error in state: 1110.
##
## expr -> CN_LET LNAME VARIABLE EQ expr . SEMICOLON expr [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX COMMA CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## CN_LET LNAME VARIABLE EQ expr
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 966, spurious reduction of production unary_expr -> prim_expr
## In state 963, spurious reduction of production mul_expr -> unary_expr
## In state 979, spurious reduction of production add_expr -> mul_expr
## In state 1008, spurious reduction of production rel_expr -> add_expr
## In state 964, spurious reduction of production bool_bin_expr -> rel_expr
## In state 989, spurious reduction of production list_expr -> bool_bin_expr
## In state 984, spurious reduction of production expr_without_let -> list_expr
## In state 1011, spurious reduction of production expr -> expr_without_let
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statement: CN_EXTRACT CN_LET LNAME TYPE EQ CN_FALSE VOLATILE
##
## Ends in an error in state: 1115.
##
## expr -> CN_LET LNAME TYPE EQ expr . SEMICOLON expr [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX COMMA CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## CN_LET LNAME TYPE EQ expr
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 966, spurious reduction of production unary_expr -> prim_expr
## In state 963, spurious reduction of production mul_expr -> unary_expr
## In state 979, spurious reduction of production add_expr -> mul_expr
## In state 1008, spurious reduction of production rel_expr -> add_expr
## In state 964, spurious reduction of production bool_bin_expr -> rel_expr
## In state 989, spurious reduction of production list_expr -> bool_bin_expr
## In state 984, spurious reduction of production expr_without_let -> list_expr
## In state 1011, spurious reduction of production expr -> expr_without_let
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statement: CN_EXTRACT CN_MATCH LPAREN CN_FALSE VOLATILE
##
## Ends in an error in state: 1118.
##
## match_target -> LPAREN expr . RPAREN [ LBRACE ]
##
## The known suffix of the stack is as follows:
## LPAREN expr
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 966, spurious reduction of production unary_expr -> prim_expr
## In state 963, spurious reduction of production mul_expr -> unary_expr
## In state 979, spurious reduction of production add_expr -> mul_expr
## In state 1008, spurious reduction of production rel_expr -> add_expr
## In state 964, spurious reduction of production bool_bin_expr -> rel_expr
## In state 989, spurious reduction of production list_expr -> bool_bin_expr
## In state 984, spurious reduction of production expr_without_let -> list_expr
## In state 1011, spurious reduction of production expr -> expr_without_let
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statement: CN_EXTRACT CN_MATCH LNAME WHILE
##
## Ends in an error in state: 1120.
##
## match_target -> LNAME . VARIABLE [ LBRACE ]
## match_target -> LNAME . TYPE [ LBRACE ]
##
## The known suffix of the stack is as follows:
## LNAME
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statement: CN_EXTRACT CN_MATCH LNAME TYPE LBRACE UNAME WHILE
##
## Ends in an error in state: 1125.
##
## match_case_lhs -> UNAME . VARIABLE cons_args [ EQ ]
## match_case_lhs -> UNAME . TYPE cons_args [ EQ ]
## match_case_lhs -> UNAME . VARIABLE [ EQ ]
## match_case_lhs -> UNAME . TYPE [ EQ ]
##
## The known suffix of the stack is as follows:
## UNAME
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statement: CN_EXTRACT CN_MATCH LNAME TYPE LBRACE UNAME VARIABLE WHILE
##
## Ends in an error in state: 1126.
##
## match_case_lhs -> UNAME VARIABLE . cons_args [ EQ ]
## match_case_lhs -> UNAME VARIABLE . [ EQ ]
##
## The known suffix of the stack is as follows:
## UNAME VARIABLE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statement: CN_EXTRACT CN_MATCH LNAME TYPE LBRACE UNAME TYPE WHILE
##
## Ends in an error in state: 1128.
##
## match_case_lhs -> UNAME TYPE . cons_args [ EQ ]
## match_case_lhs -> UNAME TYPE . [ EQ ]
##
## The known suffix of the stack is as follows:
## UNAME TYPE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statement: CN_EXTRACT CN_MATCH LNAME TYPE LBRACE LNAME WHILE
##
## Ends in an error in state: 1130.
##
## match_case_lhs -> LNAME . VARIABLE cons_args [ EQ ]
## match_case_lhs -> LNAME . TYPE cons_args [ EQ ]
## match_case_lhs -> LNAME . VARIABLE [ EQ ]
## match_case_lhs -> LNAME . TYPE [ EQ ]
##
## The known suffix of the stack is as follows:
## LNAME
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statement: CN_EXTRACT CN_MATCH LNAME TYPE LBRACE LNAME VARIABLE WHILE
##
## Ends in an error in state: 1131.
##
## match_case_lhs -> LNAME VARIABLE . cons_args [ EQ ]
## match_case_lhs -> LNAME VARIABLE . [ EQ ]
##
## The known suffix of the stack is as follows:
## LNAME VARIABLE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statement: CN_EXTRACT CN_MATCH LNAME TYPE LBRACE LNAME TYPE WHILE
##
## Ends in an error in state: 1133.
##
## match_case_lhs -> LNAME TYPE . cons_args [ EQ ]
## match_case_lhs -> LNAME TYPE . [ EQ ]
##
## The known suffix of the stack is as follows:
## LNAME TYPE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statement: CN_EXTRACT CN_MATCH LNAME TYPE LBRACE LNAME TYPE EQ GT LBRACE CN_FALSE RBRACE WHILE
##
## Ends in an error in state: 1135.
##
## expr_without_let -> CN_MATCH match_target LBRACE match_cases . RBRACE [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX COMMA CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
## match_cases -> match_cases . match_case [ UNAME RBRACE LNAME ]
##
## The known suffix of the stack is as follows:
## CN_MATCH match_target LBRACE match_cases
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statement: CN_EXTRACT CN_MATCH LNAME TYPE LBRACE LNAME TYPE EQ GT LBRACE CN_FALSE VOLATILE
##
## Ends in an error in state: 1141.
##
## match_case -> match_case_lhs EQ GT LBRACE expr . RBRACE [ UNAME RBRACE LNAME ]
##
## The known suffix of the stack is as follows:
## match_case_lhs EQ GT LBRACE expr
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 966, spurious reduction of production unary_expr -> prim_expr
## In state 963, spurious reduction of production mul_expr -> unary_expr
## In state 979, spurious reduction of production add_expr -> mul_expr
## In state 1008, spurious reduction of production rel_expr -> add_expr
## In state 964, spurious reduction of production bool_bin_expr -> rel_expr
## In state 989, spurious reduction of production list_expr -> bool_bin_expr
## In state 984, spurious reduction of production expr_without_let -> list_expr
## In state 1011, spurious reduction of production expr -> expr_without_let
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statement: CN_EXTRACT IF LPAREN CN_FALSE VOLATILE
##
## Ends in an error in state: 1145.
##
## expr_without_let -> IF LPAREN expr . RPAREN LBRACE expr RBRACE ELSE LBRACE expr RBRACE [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX COMMA CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## IF LPAREN expr
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 966, spurious reduction of production unary_expr -> prim_expr
## In state 963, spurious reduction of production mul_expr -> unary_expr
## In state 979, spurious reduction of production add_expr -> mul_expr
## In state 1008, spurious reduction of production rel_expr -> add_expr
## In state 964, spurious reduction of production bool_bin_expr -> rel_expr
## In state 989, spurious reduction of production list_expr -> bool_bin_expr
## In state 984, spurious reduction of production expr_without_let -> list_expr
## In state 1011, spurious reduction of production expr -> expr_without_let
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statement: CN_EXTRACT IF LPAREN CN_FALSE RPAREN LBRACE CN_FALSE VOLATILE
##
## Ends in an error in state: 1148.
##
## expr_without_let -> IF LPAREN expr RPAREN LBRACE expr . RBRACE ELSE LBRACE expr RBRACE [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX COMMA CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## IF LPAREN expr RPAREN LBRACE expr
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 966, spurious reduction of production unary_expr -> prim_expr
## In state 963, spurious reduction of production mul_expr -> unary_expr
## In state 979, spurious reduction of production add_expr -> mul_expr
## In state 1008, spurious reduction of production rel_expr -> add_expr
## In state 964, spurious reduction of production bool_bin_expr -> rel_expr
## In state 989, spurious reduction of production list_expr -> bool_bin_expr
## In state 984, spurious reduction of production expr_without_let -> list_expr
## In state 1011, spurious reduction of production expr -> expr_without_let
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statement: CN_EXTRACT IF LPAREN CN_FALSE RPAREN LBRACE CN_FALSE RBRACE ELSE LBRACE CN_FALSE VOLATILE
##
## Ends in an error in state: 1152.
##
## expr_without_let -> IF LPAREN expr RPAREN LBRACE expr RBRACE ELSE LBRACE expr . RBRACE [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX COMMA CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## IF LPAREN expr RPAREN LBRACE expr RBRACE ELSE LBRACE expr
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 966, spurious reduction of production unary_expr -> prim_expr
## In state 963, spurious reduction of production mul_expr -> unary_expr
## In state 979, spurious reduction of production add_expr -> mul_expr
## In state 1008, spurious reduction of production rel_expr -> add_expr
## In state 964, spurious reduction of production bool_bin_expr -> rel_expr
## In state 989, spurious reduction of production list_expr -> bool_bin_expr
## In state 984, spurious reduction of production expr_without_let -> list_expr
## In state 1011, spurious reduction of production expr -> expr_without_let
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statement: CN_EXTRACT LNAME TYPE LBRACE UNAME TYPE COLON CN_FALSE VOLATILE
##
## Ends in an error in state: 1159.
##
## separated_nonempty_list(COMMA,member_def) -> member_def . [ RBRACE ]
## separated_nonempty_list(COMMA,member_def) -> member_def . COMMA separated_nonempty_list(COMMA,member_def) [ RBRACE ]
##
## The known suffix of the stack is as follows:
## member_def
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 966, spurious reduction of production unary_expr -> prim_expr
## In state 963, spurious reduction of production mul_expr -> unary_expr
## In state 979, spurious reduction of production add_expr -> mul_expr
## In state 1008, spurious reduction of production rel_expr -> add_expr
## In state 964, spurious reduction of production bool_bin_expr -> rel_expr
## In state 989, spurious reduction of production list_expr -> bool_bin_expr
## In state 984, spurious reduction of production expr_without_let -> list_expr
## In state 1011, spurious reduction of production expr -> expr_without_let
## In state 1157, spurious reduction of production member_def -> UNAME TYPE COLON expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statement: CN_EXTRACT LBRACE UNAME TYPE WHILE
##
## Ends in an error in state: 1164.
##
## member_def -> UNAME TYPE . COLON expr [ RBRACE COMMA ]
## prim_expr -> UNAME TYPE . [ STAR SLASH RBRACE QUESTION PLUS PIPE_PIPE MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT BANG_EQ AMPERSAND_AMPERSAND ]
## prim_expr -> UNAME TYPE . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ STAR SLASH RBRACE QUESTION PLUS PIPE_PIPE MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT BANG_EQ AMPERSAND_AMPERSAND ]
## prim_expr -> UNAME TYPE . cons_args [ STAR SLASH RBRACE QUESTION PLUS PIPE_PIPE MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT BANG_EQ AMPERSAND_AMPERSAND ]
##
## The known suffix of the stack is as follows:
## UNAME TYPE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statement: CN_EXTRACT LBRACE CN_FALSE VOLATILE
##
## Ends in an error in state: 1169.
##
## prim_expr -> LBRACE expr . RBRACE PERCENT UNAME VARIABLE [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE DOT CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
## prim_expr -> LBRACE expr . RBRACE PERCENT LNAME VARIABLE [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE DOT CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
## unary_expr -> LBRACE expr . RBRACE CN_UNCHANGED [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
##
## The known suffix of the stack is as follows:
## LBRACE expr
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 966, spurious reduction of production unary_expr -> prim_expr
## In state 963, spurious reduction of production mul_expr -> unary_expr
## In state 979, spurious reduction of production add_expr -> mul_expr
## In state 1008, spurious reduction of production rel_expr -> add_expr
## In state 964, spurious reduction of production bool_bin_expr -> rel_expr
## In state 989, spurious reduction of production list_expr -> bool_bin_expr
## In state 984, spurious reduction of production expr_without_let -> list_expr
## In state 1011, spurious reduction of production expr -> expr_without_let
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statement: CN_EXTRACT LBRACE CN_FALSE RBRACE WHILE
##
## Ends in an error in state: 1170.
##
## prim_expr -> LBRACE expr RBRACE . PERCENT UNAME VARIABLE [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE DOT CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
## prim_expr -> LBRACE expr RBRACE . PERCENT LNAME VARIABLE [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE DOT CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
## unary_expr -> LBRACE expr RBRACE . CN_UNCHANGED [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
##
## The known suffix of the stack is as follows:
## LBRACE expr RBRACE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statement: CN_EXTRACT LBRACK CN_FALSE VOLATILE
##
## Ends in an error in state: 1174.
##
## rel_expr -> rel_expr . EQ_EQ add_expr [ RBRACK LT_EQ LT GT_EQ GT EQ_EQ COMMA BANG_EQ ]
## rel_expr -> rel_expr . BANG_EQ add_expr [ RBRACK LT_EQ LT GT_EQ GT EQ_EQ COMMA BANG_EQ ]
## rel_expr -> rel_expr . LT add_expr [ RBRACK LT_EQ LT GT_EQ GT EQ_EQ COMMA BANG_EQ ]
## rel_expr -> rel_expr . GT add_expr [ RBRACK LT_EQ LT GT_EQ GT EQ_EQ COMMA BANG_EQ ]
## rel_expr -> rel_expr . LT_EQ add_expr [ RBRACK LT_EQ LT GT_EQ GT EQ_EQ COMMA BANG_EQ ]
## rel_expr -> rel_expr . GT_EQ add_expr [ RBRACK LT_EQ LT GT_EQ GT EQ_EQ COMMA BANG_EQ ]
## separated_nonempty_list(COMMA,rel_expr) -> rel_expr . [ RBRACK ]
## separated_nonempty_list(COMMA,rel_expr) -> rel_expr . COMMA separated_nonempty_list(COMMA,rel_expr) [ RBRACK ]
##
## The known suffix of the stack is as follows:
## rel_expr
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 966, spurious reduction of production unary_expr -> prim_expr
## In state 963, spurious reduction of production mul_expr -> unary_expr
## In state 979, spurious reduction of production add_expr -> mul_expr
## In state 1008, spurious reduction of production rel_expr -> add_expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statement: CN_EXTRACT LNAME TYPE WHILE
##
## Ends in an error in state: 1179.
##
## prim_expr -> LNAME TYPE . [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS_GT MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE DOT CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
## prim_expr -> LNAME TYPE . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS_GT MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE DOT CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
## prim_expr -> LNAME TYPE . cons_args [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS_GT MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE DOT CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
##
## The known suffix of the stack is as follows:
## LNAME TYPE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statement: CN_EXTRACT LPAREN LBRACE WHILE
##
## Ends in an error in state: 1180.
##
## base_type -> LBRACE . nonempty_args RBRACE [ UNAME RPAREN LNAME ]
## prim_expr -> LBRACE . expr RBRACE PERCENT UNAME VARIABLE [ STAR SLASH RPAREN RBRACE QUESTION PLUS PIPE_PIPE MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT BANG_EQ AMPERSAND_AMPERSAND ]
## prim_expr -> LBRACE . expr RBRACE PERCENT LNAME VARIABLE [ STAR SLASH RPAREN RBRACE QUESTION PLUS PIPE_PIPE MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT BANG_EQ AMPERSAND_AMPERSAND ]
## prim_expr -> LBRACE . record_def RBRACE [ STAR SLASH RPAREN RBRACE QUESTION PLUS PIPE_PIPE MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT BANG_EQ AMPERSAND_AMPERSAND ]
## prim_expr -> LBRACE . nonempty_member_updates RBRACE [ STAR SLASH RPAREN RBRACE QUESTION PLUS PIPE_PIPE MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT BANG_EQ AMPERSAND_AMPERSAND ]
## unary_expr -> LBRACE . expr RBRACE CN_UNCHANGED [ STAR SLASH RPAREN RBRACE QUESTION PLUS PIPE_PIPE MINUS LT_EQ LT GT_EQ GT EQ_EQ BANG_EQ AMPERSAND_AMPERSAND ]
##
## The known suffix of the stack is as follows:
## LBRACE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_toplevel: CN_PREDICATE CN_DATATYPE WHILE
##
## Ends in an error in state: 1193.
##
## base_type -> CN_DATATYPE . UNAME VARIABLE [ UNAME RPAREN LNAME GT COMMA ]
## base_type -> CN_DATATYPE . LNAME VARIABLE [ UNAME RPAREN LNAME GT COMMA ]
## base_type -> CN_DATATYPE . UNAME TYPE [ UNAME RPAREN LNAME GT COMMA ]
## base_type -> CN_DATATYPE . LNAME TYPE [ UNAME RPAREN LNAME GT COMMA ]
##
## The known suffix of the stack is as follows:
## CN_DATATYPE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_toplevel: CN_PREDICATE CN_DATATYPE UNAME WHILE
##
## Ends in an error in state: 1194.
##
## base_type -> CN_DATATYPE UNAME . VARIABLE [ UNAME RPAREN LNAME GT COMMA ]
## base_type -> CN_DATATYPE UNAME . TYPE [ UNAME RPAREN LNAME GT COMMA ]
##
## The known suffix of the stack is as follows:
## CN_DATATYPE UNAME
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_toplevel: CN_PREDICATE CN_DATATYPE LNAME WHILE
##
## Ends in an error in state: 1197.
##
## base_type -> CN_DATATYPE LNAME . VARIABLE [ UNAME RPAREN LNAME GT COMMA ]
## base_type -> CN_DATATYPE LNAME . TYPE [ UNAME RPAREN LNAME GT COMMA ]
##
## The known suffix of the stack is as follows:
## CN_DATATYPE LNAME
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_toplevel: CN_PREDICATE LBRACE CN_BOOL LNAME TYPE RPAREN
##
## Ends in an error in state: 1210.
##
## base_type -> LBRACE nonempty_args . RBRACE [ UNAME RPAREN LNAME GT COMMA ]
##
## The known suffix of the stack is as follows:
## LBRACE nonempty_args
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1224, spurious reduction of production separated_nonempty_list(COMMA,pair(base_type,cn_variable)) -> base_type LNAME TYPE
## In state 1209, spurious reduction of production nonempty_args -> separated_nonempty_list(COMMA,pair(base_type,cn_variable))
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_toplevel: CN_PREDICATE LBRACE CN_BOOL WHILE
##
## Ends in an error in state: 1212.
##
## separated_nonempty_list(COMMA,pair(base_type,cn_variable)) -> base_type . UNAME VARIABLE [ RPAREN RBRACE ]
## separated_nonempty_list(COMMA,pair(base_type,cn_variable)) -> base_type . LNAME VARIABLE [ RPAREN RBRACE ]
## separated_nonempty_list(COMMA,pair(base_type,cn_variable)) -> base_type . UNAME TYPE [ RPAREN RBRACE ]
## separated_nonempty_list(COMMA,pair(base_type,cn_variable)) -> base_type . LNAME TYPE [ RPAREN RBRACE ]
## separated_nonempty_list(COMMA,pair(base_type,cn_variable)) -> base_type . UNAME VARIABLE COMMA separated_nonempty_list(COMMA,pair(base_type,cn_variable)) [ RPAREN RBRACE ]
## separated_nonempty_list(COMMA,pair(base_type,cn_variable)) -> base_type . LNAME VARIABLE COMMA separated_nonempty_list(COMMA,pair(base_type,cn_variable)) [ RPAREN RBRACE ]
## separated_nonempty_list(COMMA,pair(base_type,cn_variable)) -> base_type . UNAME TYPE COMMA separated_nonempty_list(COMMA,pair(base_type,cn_variable)) [ RPAREN RBRACE ]
## separated_nonempty_list(COMMA,pair(base_type,cn_variable)) -> base_type . LNAME TYPE COMMA separated_nonempty_list(COMMA,pair(base_type,cn_variable)) [ RPAREN RBRACE ]
##
## The known suffix of the stack is as follows:
## base_type
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_toplevel: CN_PREDICATE LBRACE CN_BOOL UNAME WHILE
##
## Ends in an error in state: 1213.
##
## separated_nonempty_list(COMMA,pair(base_type,cn_variable)) -> base_type UNAME . VARIABLE [ RPAREN RBRACE ]
## separated_nonempty_list(COMMA,pair(base_type,cn_variable)) -> base_type UNAME . TYPE [ RPAREN RBRACE ]
## separated_nonempty_list(COMMA,pair(base_type,cn_variable)) -> base_type UNAME . VARIABLE COMMA separated_nonempty_list(COMMA,pair(base_type,cn_variable)) [ RPAREN RBRACE ]
## separated_nonempty_list(COMMA,pair(base_type,cn_variable)) -> base_type UNAME . TYPE COMMA separated_nonempty_list(COMMA,pair(base_type,cn_variable)) [ RPAREN RBRACE ]
##
## The known suffix of the stack is as follows:
## base_type UNAME
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_toplevel: CN_PREDICATE LBRACE CN_BOOL UNAME VARIABLE WHILE
##
## Ends in an error in state: 1214.
##
## separated_nonempty_list(COMMA,pair(base_type,cn_variable)) -> base_type UNAME VARIABLE . [ RPAREN RBRACE ]
## separated_nonempty_list(COMMA,pair(base_type,cn_variable)) -> base_type UNAME VARIABLE . COMMA separated_nonempty_list(COMMA,pair(base_type,cn_variable)) [ RPAREN RBRACE ]
##
## The known suffix of the stack is as follows:
## base_type UNAME VARIABLE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_toplevel: CN_PREDICATE LBRACE CN_BOOL UNAME TYPE WHILE
##
## Ends in an error in state: 1217.
##
## separated_nonempty_list(COMMA,pair(base_type,cn_variable)) -> base_type UNAME TYPE . [ RPAREN RBRACE ]
## separated_nonempty_list(COMMA,pair(base_type,cn_variable)) -> base_type UNAME TYPE . COMMA separated_nonempty_list(COMMA,pair(base_type,cn_variable)) [ RPAREN RBRACE ]
##
## The known suffix of the stack is as follows:
## base_type UNAME TYPE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_toplevel: CN_PREDICATE LBRACE CN_BOOL LNAME WHILE
##
## Ends in an error in state: 1220.
##
## separated_nonempty_list(COMMA,pair(base_type,cn_variable)) -> base_type LNAME . VARIABLE [ RPAREN RBRACE ]
## separated_nonempty_list(COMMA,pair(base_type,cn_variable)) -> base_type LNAME . TYPE [ RPAREN RBRACE ]
## separated_nonempty_list(COMMA,pair(base_type,cn_variable)) -> base_type LNAME . VARIABLE COMMA separated_nonempty_list(COMMA,pair(base_type,cn_variable)) [ RPAREN RBRACE ]
## separated_nonempty_list(COMMA,pair(base_type,cn_variable)) -> base_type LNAME . TYPE COMMA separated_nonempty_list(COMMA,pair(base_type,cn_variable)) [ RPAREN RBRACE ]
##
## The known suffix of the stack is as follows:
## base_type LNAME
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_toplevel: CN_PREDICATE LBRACE CN_BOOL LNAME VARIABLE WHILE
##
## Ends in an error in state: 1221.
##
## separated_nonempty_list(COMMA,pair(base_type,cn_variable)) -> base_type LNAME VARIABLE . [ RPAREN RBRACE ]
## separated_nonempty_list(COMMA,pair(base_type,cn_variable)) -> base_type LNAME VARIABLE . COMMA separated_nonempty_list(COMMA,pair(base_type,cn_variable)) [ RPAREN RBRACE ]
##
## The known suffix of the stack is as follows:
## base_type LNAME VARIABLE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_toplevel: CN_PREDICATE LBRACE CN_BOOL LNAME TYPE WHILE
##
## Ends in an error in state: 1224.
##
## separated_nonempty_list(COMMA,pair(base_type,cn_variable)) -> base_type LNAME TYPE . [ RPAREN RBRACE ]
## separated_nonempty_list(COMMA,pair(base_type,cn_variable)) -> base_type LNAME TYPE . COMMA separated_nonempty_list(COMMA,pair(base_type,cn_variable)) [ RPAREN RBRACE ]
##
## The known suffix of the stack is as follows:
## base_type LNAME TYPE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_toplevel: CN_PREDICATE CN_TUPLE LT CN_BOOL WHILE
##
## Ends in an error in state: 1230.
##
## separated_nonempty_list(COMMA,base_type) -> base_type . [ GT ]
## separated_nonempty_list(COMMA,base_type) -> base_type . COMMA separated_nonempty_list(COMMA,base_type) [ GT ]
##
## The known suffix of the stack is as follows:
## base_type
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statement: CN_EXTRACT LPAREN CN_BOOL RPAREN CN_FALSE MINUS_GT
##
## Ends in an error in state: 1235.
##
## prim_expr -> prim_expr . DOT UNAME VARIABLE [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE DOT CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
## prim_expr -> prim_expr . DOT LNAME VARIABLE [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE DOT CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
## prim_expr -> prim_expr . DOT UNAME TYPE [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE DOT CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
## prim_expr -> prim_expr . DOT LNAME TYPE [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE DOT CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
## prim_expr -> prim_expr . LBRACK expr RBRACK [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE DOT CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
## prim_expr -> prim_expr . LBRACK separated_nonempty_list(COMMA,index_update) RBRACK [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE DOT CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
## unary_expr -> LPAREN base_type RPAREN prim_expr . [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
##
## The known suffix of the stack is as follows:
## LPAREN base_type RPAREN prim_expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statement: CN_EXTRACT UNAME TYPE WHILE
##
## Ends in an error in state: 1239.
##
## prim_expr -> UNAME TYPE . [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS_GT MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE DOT CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
## prim_expr -> UNAME TYPE . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS_GT MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE DOT CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
## prim_expr -> UNAME TYPE . cons_args [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION PLUS PIPE_PIPE NORETURN MINUS_GT MINUS LT_EQ LT LONG LNAME LBRACK_LBRACK LBRACK INT INLINE GT_EQ GT FLOAT EXTERN EQ_EQ EOF ENUM DOUBLE DOT CONST COMPLEX COMMA COLON CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL BANG_EQ AUTO ATOMIC AMPERSAND_AMPERSAND ALIGNAS ]
##
## The known suffix of the stack is as follows:
## UNAME TYPE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statement: CN_UNFOLD WHILE
##
## Ends in an error in state: 1243.
##
## cn_statement -> CN_UNFOLD . UNAME VARIABLE LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN SEMICOLON [ # ]
## cn_statement -> CN_UNFOLD . LNAME VARIABLE LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN SEMICOLON [ # ]
## cn_statement -> CN_UNFOLD . UNAME TYPE LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN SEMICOLON [ # ]
## cn_statement -> CN_UNFOLD . LNAME TYPE LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN SEMICOLON [ # ]
##
## The known suffix of the stack is as follows:
## CN_UNFOLD
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statement: CN_UNFOLD UNAME WHILE
##
## Ends in an error in state: 1244.
##
## cn_statement -> CN_UNFOLD UNAME . VARIABLE LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN SEMICOLON [ # ]
## cn_statement -> CN_UNFOLD UNAME . TYPE LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN SEMICOLON [ # ]
##
## The known suffix of the stack is as follows:
## CN_UNFOLD UNAME
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statement: CN_UNFOLD LNAME WHILE
##
## Ends in an error in state: 1255.
##
## cn_statement -> CN_UNFOLD LNAME . VARIABLE LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN SEMICOLON [ # ]
## cn_statement -> CN_UNFOLD LNAME . TYPE LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN SEMICOLON [ # ]
##
## The known suffix of the stack is as follows:
## CN_UNFOLD LNAME
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statement: CN_PACK CN_OWNED COMMA
##
## Ends in an error in state: 1267.
##
## cn_statement -> CN_PACK pred . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN SEMICOLON [ # ]
##
## The known suffix of the stack is as follows:
## CN_PACK pred
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 4, spurious reduction of production pred -> CN_OWNED
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statement: CN_INSTANTIATE WHILE
##
## Ends in an error in state: 1272.
##
## cn_statement -> CN_INSTANTIATE . expr SEMICOLON [ # ]
## cn_statement -> CN_INSTANTIATE . UNAME VARIABLE COMMA expr SEMICOLON [ # ]
## cn_statement -> CN_INSTANTIATE . LNAME VARIABLE COMMA expr SEMICOLON [ # ]
## cn_statement -> CN_INSTANTIATE . UNAME TYPE COMMA expr SEMICOLON [ # ]
## cn_statement -> CN_INSTANTIATE . LNAME TYPE COMMA expr SEMICOLON [ # ]
## cn_statement -> CN_INSTANTIATE . cn_good COMMA expr SEMICOLON [ # ]
##
## The known suffix of the stack is as follows:
## CN_INSTANTIATE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statement: CN_INSTANTIATE UNAME WHILE
##
## Ends in an error in state: 1273.
##
## cn_statement -> CN_INSTANTIATE UNAME . VARIABLE COMMA expr SEMICOLON [ # ]
## cn_statement -> CN_INSTANTIATE UNAME . TYPE COMMA expr SEMICOLON [ # ]
## prim_expr -> UNAME . VARIABLE [ STAR SLASH SEMICOLON QUESTION PLUS PIPE_PIPE MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT BANG_EQ AMPERSAND_AMPERSAND ]
## prim_expr -> UNAME . TYPE [ STAR SLASH SEMICOLON QUESTION PLUS PIPE_PIPE MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT BANG_EQ AMPERSAND_AMPERSAND ]
## prim_expr -> UNAME . VARIABLE LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ STAR SLASH SEMICOLON QUESTION PLUS PIPE_PIPE MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT BANG_EQ AMPERSAND_AMPERSAND ]
## prim_expr -> UNAME . TYPE LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ STAR SLASH SEMICOLON QUESTION PLUS PIPE_PIPE MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT BANG_EQ AMPERSAND_AMPERSAND ]
## prim_expr -> UNAME . VARIABLE cons_args [ STAR SLASH SEMICOLON QUESTION PLUS PIPE_PIPE MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT BANG_EQ AMPERSAND_AMPERSAND ]
## prim_expr -> UNAME . TYPE cons_args [ STAR SLASH SEMICOLON QUESTION PLUS PIPE_PIPE MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT BANG_EQ AMPERSAND_AMPERSAND ]
##
## The known suffix of the stack is as follows:
## CN_INSTANTIATE UNAME
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statement: CN_INSTANTIATE UNAME VARIABLE WHILE
##
## Ends in an error in state: 1274.
##
## cn_statement -> CN_INSTANTIATE UNAME VARIABLE . COMMA expr SEMICOLON [ # ]
## prim_expr -> UNAME VARIABLE . [ STAR SLASH SEMICOLON QUESTION PLUS PIPE_PIPE MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT BANG_EQ AMPERSAND_AMPERSAND ]
## prim_expr -> UNAME VARIABLE . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ STAR SLASH SEMICOLON QUESTION PLUS PIPE_PIPE MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT BANG_EQ AMPERSAND_AMPERSAND ]
## prim_expr -> UNAME VARIABLE . cons_args [ STAR SLASH SEMICOLON QUESTION PLUS PIPE_PIPE MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT BANG_EQ AMPERSAND_AMPERSAND ]
##
## The known suffix of the stack is as follows:
## CN_INSTANTIATE UNAME VARIABLE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statement: CN_INSTANTIATE UNAME VARIABLE COMMA CN_FALSE VOLATILE
##
## Ends in an error in state: 1276.
##
## cn_statement -> CN_INSTANTIATE UNAME VARIABLE COMMA expr . SEMICOLON [ # ]
##
## The known suffix of the stack is as follows:
## CN_INSTANTIATE UNAME VARIABLE COMMA expr
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 966, spurious reduction of production unary_expr -> prim_expr
## In state 963, spurious reduction of production mul_expr -> unary_expr
## In state 979, spurious reduction of production add_expr -> mul_expr
## In state 1008, spurious reduction of production rel_expr -> add_expr
## In state 964, spurious reduction of production bool_bin_expr -> rel_expr
## In state 989, spurious reduction of production list_expr -> bool_bin_expr
## In state 984, spurious reduction of production expr_without_let -> list_expr
## In state 1011, spurious reduction of production expr -> expr_without_let
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statement: CN_INSTANTIATE UNAME TYPE WHILE
##
## Ends in an error in state: 1278.
##
## cn_statement -> CN_INSTANTIATE UNAME TYPE . COMMA expr SEMICOLON [ # ]
## prim_expr -> UNAME TYPE . [ STAR SLASH SEMICOLON QUESTION PLUS PIPE_PIPE MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT BANG_EQ AMPERSAND_AMPERSAND ]
## prim_expr -> UNAME TYPE . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ STAR SLASH SEMICOLON QUESTION PLUS PIPE_PIPE MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT BANG_EQ AMPERSAND_AMPERSAND ]
## prim_expr -> UNAME TYPE . cons_args [ STAR SLASH SEMICOLON QUESTION PLUS PIPE_PIPE MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT BANG_EQ AMPERSAND_AMPERSAND ]
##
## The known suffix of the stack is as follows:
## CN_INSTANTIATE UNAME TYPE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statement: CN_INSTANTIATE UNAME TYPE COMMA CN_FALSE VOLATILE
##
## Ends in an error in state: 1280.
##
## cn_statement -> CN_INSTANTIATE UNAME TYPE COMMA expr . SEMICOLON [ # ]
##
## The known suffix of the stack is as follows:
## CN_INSTANTIATE UNAME TYPE COMMA expr
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 966, spurious reduction of production unary_expr -> prim_expr
## In state 963, spurious reduction of production mul_expr -> unary_expr
## In state 979, spurious reduction of production add_expr -> mul_expr
## In state 1008, spurious reduction of production rel_expr -> add_expr
## In state 964, spurious reduction of production bool_bin_expr -> rel_expr
## In state 989, spurious reduction of production list_expr -> bool_bin_expr
## In state 984, spurious reduction of production expr_without_let -> list_expr
## In state 1011, spurious reduction of production expr -> expr_without_let
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statement: CN_INSTANTIATE LNAME WHILE
##
## Ends in an error in state: 1282.
##
## cn_statement -> CN_INSTANTIATE LNAME . VARIABLE COMMA expr SEMICOLON [ # ]
## cn_statement -> CN_INSTANTIATE LNAME . TYPE COMMA expr SEMICOLON [ # ]
## prim_expr -> LNAME . VARIABLE [ STAR SLASH SEMICOLON QUESTION PLUS PIPE_PIPE MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT BANG_EQ AMPERSAND_AMPERSAND ]
## prim_expr -> LNAME . TYPE [ STAR SLASH SEMICOLON QUESTION PLUS PIPE_PIPE MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT BANG_EQ AMPERSAND_AMPERSAND ]
## prim_expr -> LNAME . VARIABLE LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ STAR SLASH SEMICOLON QUESTION PLUS PIPE_PIPE MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT BANG_EQ AMPERSAND_AMPERSAND ]
## prim_expr -> LNAME . TYPE LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ STAR SLASH SEMICOLON QUESTION PLUS PIPE_PIPE MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT BANG_EQ AMPERSAND_AMPERSAND ]
## prim_expr -> LNAME . VARIABLE cons_args [ STAR SLASH SEMICOLON QUESTION PLUS PIPE_PIPE MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT BANG_EQ AMPERSAND_AMPERSAND ]
## prim_expr -> LNAME . TYPE cons_args [ STAR SLASH SEMICOLON QUESTION PLUS PIPE_PIPE MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT BANG_EQ AMPERSAND_AMPERSAND ]
##
## The known suffix of the stack is as follows:
## CN_INSTANTIATE LNAME
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statement: CN_INSTANTIATE LNAME VARIABLE WHILE
##
## Ends in an error in state: 1283.
##
## cn_statement -> CN_INSTANTIATE LNAME VARIABLE . COMMA expr SEMICOLON [ # ]
## prim_expr -> LNAME VARIABLE . [ STAR SLASH SEMICOLON QUESTION PLUS PIPE_PIPE MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT BANG_EQ AMPERSAND_AMPERSAND ]
## prim_expr -> LNAME VARIABLE . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ STAR SLASH SEMICOLON QUESTION PLUS PIPE_PIPE MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT BANG_EQ AMPERSAND_AMPERSAND ]
## prim_expr -> LNAME VARIABLE . cons_args [ STAR SLASH SEMICOLON QUESTION PLUS PIPE_PIPE MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT BANG_EQ AMPERSAND_AMPERSAND ]
##
## The known suffix of the stack is as follows:
## CN_INSTANTIATE LNAME VARIABLE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statement: CN_INSTANTIATE LNAME VARIABLE COMMA CN_FALSE VOLATILE
##
## Ends in an error in state: 1285.
##
## cn_statement -> CN_INSTANTIATE LNAME VARIABLE COMMA expr . SEMICOLON [ # ]
##
## The known suffix of the stack is as follows:
## CN_INSTANTIATE LNAME VARIABLE COMMA expr
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 966, spurious reduction of production unary_expr -> prim_expr
## In state 963, spurious reduction of production mul_expr -> unary_expr
## In state 979, spurious reduction of production add_expr -> mul_expr
## In state 1008, spurious reduction of production rel_expr -> add_expr
## In state 964, spurious reduction of production bool_bin_expr -> rel_expr
## In state 989, spurious reduction of production list_expr -> bool_bin_expr
## In state 984, spurious reduction of production expr_without_let -> list_expr
## In state 1011, spurious reduction of production expr -> expr_without_let
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statement: CN_INSTANTIATE LNAME TYPE WHILE
##
## Ends in an error in state: 1287.
##
## cn_statement -> CN_INSTANTIATE LNAME TYPE . COMMA expr SEMICOLON [ # ]
## prim_expr -> LNAME TYPE . [ STAR SLASH SEMICOLON QUESTION PLUS PIPE_PIPE MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT BANG_EQ AMPERSAND_AMPERSAND ]
## prim_expr -> LNAME TYPE . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ STAR SLASH SEMICOLON QUESTION PLUS PIPE_PIPE MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT BANG_EQ AMPERSAND_AMPERSAND ]
## prim_expr -> LNAME TYPE . cons_args [ STAR SLASH SEMICOLON QUESTION PLUS PIPE_PIPE MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT BANG_EQ AMPERSAND_AMPERSAND ]
##
## The known suffix of the stack is as follows:
## CN_INSTANTIATE LNAME TYPE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statement: CN_INSTANTIATE LNAME TYPE COMMA CN_FALSE VOLATILE
##
## Ends in an error in state: 1289.
##
## cn_statement -> CN_INSTANTIATE LNAME TYPE COMMA expr . SEMICOLON [ # ]
##
## The known suffix of the stack is as follows:
## CN_INSTANTIATE LNAME TYPE COMMA expr
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 966, spurious reduction of production unary_expr -> prim_expr
## In state 963, spurious reduction of production mul_expr -> unary_expr
## In state 979, spurious reduction of production add_expr -> mul_expr
## In state 1008, spurious reduction of production rel_expr -> add_expr
## In state 964, spurious reduction of production bool_bin_expr -> rel_expr
## In state 989, spurious reduction of production list_expr -> bool_bin_expr
## In state 984, spurious reduction of production expr_without_let -> list_expr
## In state 1011, spurious reduction of production expr -> expr_without_let
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statement: CN_INSTANTIATE CN_FALSE VOLATILE
##
## Ends in an error in state: 1291.
##
## cn_statement -> CN_INSTANTIATE expr . SEMICOLON [ # ]
##
## The known suffix of the stack is as follows:
## CN_INSTANTIATE expr
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 966, spurious reduction of production unary_expr -> prim_expr
## In state 963, spurious reduction of production mul_expr -> unary_expr
## In state 979, spurious reduction of production add_expr -> mul_expr
## In state 1008, spurious reduction of production rel_expr -> add_expr
## In state 964, spurious reduction of production bool_bin_expr -> rel_expr
## In state 989, spurious reduction of production list_expr -> bool_bin_expr
## In state 984, spurious reduction of production expr_without_let -> list_expr
## In state 1011, spurious reduction of production expr -> expr_without_let
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statement: CN_INSTANTIATE CN_GOOD LT BOOL GT WHILE
##
## Ends in an error in state: 1293.
##
## cn_statement -> CN_INSTANTIATE cn_good . COMMA expr SEMICOLON [ # ]
## prim_expr -> cn_good . LPAREN expr RPAREN [ STAR SLASH SEMICOLON QUESTION PLUS PIPE_PIPE MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT BANG_EQ AMPERSAND_AMPERSAND ]
##
## The known suffix of the stack is as follows:
## CN_INSTANTIATE cn_good
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statement: CN_INSTANTIATE CN_GOOD LT BOOL GT COMMA CN_FALSE VOLATILE
##
## Ends in an error in state: 1295.
##
## cn_statement -> CN_INSTANTIATE cn_good COMMA expr . SEMICOLON [ # ]
##
## The known suffix of the stack is as follows:
## CN_INSTANTIATE cn_good COMMA expr
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 966, spurious reduction of production unary_expr -> prim_expr
## In state 963, spurious reduction of production mul_expr -> unary_expr
## In state 979, spurious reduction of production add_expr -> mul_expr
## In state 1008, spurious reduction of production rel_expr -> add_expr
## In state 964, spurious reduction of production bool_bin_expr -> rel_expr
## In state 989, spurious reduction of production list_expr -> bool_bin_expr
## In state 984, spurious reduction of production expr_without_let -> list_expr
## In state 1011, spurious reduction of production expr -> expr_without_let
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statement: CN_HAVE CN_EACH WHILE
##
## Ends in an error in state: 1298.
##
## assert_expr -> CN_EACH . LPAREN base_type UNAME VARIABLE SEMICOLON expr RPAREN LBRACE expr RBRACE [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
## assert_expr -> CN_EACH . LPAREN base_type LNAME VARIABLE SEMICOLON expr RPAREN LBRACE expr RBRACE [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
## assert_expr -> CN_EACH . LPAREN base_type UNAME TYPE SEMICOLON expr RPAREN LBRACE expr RBRACE [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
## assert_expr -> CN_EACH . LPAREN base_type LNAME TYPE SEMICOLON expr RPAREN LBRACE expr RBRACE [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
## expr_without_let -> CN_EACH . LPAREN UNAME VARIABLE COLON int_range SEMICOLON expr RPAREN [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
## expr_without_let -> CN_EACH . LPAREN LNAME VARIABLE COLON int_range SEMICOLON expr RPAREN [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
## expr_without_let -> CN_EACH . LPAREN UNAME TYPE COLON int_range SEMICOLON expr RPAREN [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
## expr_without_let -> CN_EACH . LPAREN LNAME TYPE COLON int_range SEMICOLON expr RPAREN [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## CN_EACH
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statement: CN_HAVE CN_EACH LPAREN WHILE
##
## Ends in an error in state: 1299.
##
## assert_expr -> CN_EACH LPAREN . base_type UNAME VARIABLE SEMICOLON expr RPAREN LBRACE expr RBRACE [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
## assert_expr -> CN_EACH LPAREN . base_type LNAME VARIABLE SEMICOLON expr RPAREN LBRACE expr RBRACE [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
## assert_expr -> CN_EACH LPAREN . base_type UNAME TYPE SEMICOLON expr RPAREN LBRACE expr RBRACE [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
## assert_expr -> CN_EACH LPAREN . base_type LNAME TYPE SEMICOLON expr RPAREN LBRACE expr RBRACE [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
## expr_without_let -> CN_EACH LPAREN . UNAME VARIABLE COLON int_range SEMICOLON expr RPAREN [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
## expr_without_let -> CN_EACH LPAREN . LNAME VARIABLE COLON int_range SEMICOLON expr RPAREN [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
## expr_without_let -> CN_EACH LPAREN . UNAME TYPE COLON int_range SEMICOLON expr RPAREN [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
## expr_without_let -> CN_EACH LPAREN . LNAME TYPE COLON int_range SEMICOLON expr RPAREN [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## CN_EACH LPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statement: CN_HAVE CN_EACH LPAREN CN_BOOL WHILE
##
## Ends in an error in state: 1300.
##
## assert_expr -> CN_EACH LPAREN base_type . UNAME VARIABLE SEMICOLON expr RPAREN LBRACE expr RBRACE [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
## assert_expr -> CN_EACH LPAREN base_type . LNAME VARIABLE SEMICOLON expr RPAREN LBRACE expr RBRACE [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
## assert_expr -> CN_EACH LPAREN base_type . UNAME TYPE SEMICOLON expr RPAREN LBRACE expr RBRACE [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
## assert_expr -> CN_EACH LPAREN base_type . LNAME TYPE SEMICOLON expr RPAREN LBRACE expr RBRACE [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## CN_EACH LPAREN base_type
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statement: CN_HAVE CN_EACH LPAREN CN_BOOL UNAME WHILE
##
## Ends in an error in state: 1301.
##
## assert_expr -> CN_EACH LPAREN base_type UNAME . VARIABLE SEMICOLON expr RPAREN LBRACE expr RBRACE [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
## assert_expr -> CN_EACH LPAREN base_type UNAME . TYPE SEMICOLON expr RPAREN LBRACE expr RBRACE [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## CN_EACH LPAREN base_type UNAME
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statement: CN_HAVE CN_EACH LPAREN CN_BOOL UNAME VARIABLE SEMICOLON CN_FALSE VOLATILE
##
## Ends in an error in state: 1304.
##
## assert_expr -> CN_EACH LPAREN base_type UNAME VARIABLE SEMICOLON expr . RPAREN LBRACE expr RBRACE [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## CN_EACH LPAREN base_type UNAME VARIABLE SEMICOLON expr
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 966, spurious reduction of production unary_expr -> prim_expr
## In state 963, spurious reduction of production mul_expr -> unary_expr
## In state 979, spurious reduction of production add_expr -> mul_expr
## In state 1008, spurious reduction of production rel_expr -> add_expr
## In state 964, spurious reduction of production bool_bin_expr -> rel_expr
## In state 989, spurious reduction of production list_expr -> bool_bin_expr
## In state 984, spurious reduction of production expr_without_let -> list_expr
## In state 1011, spurious reduction of production expr -> expr_without_let
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statement: CN_HAVE CN_EACH LPAREN CN_BOOL UNAME VARIABLE SEMICOLON CN_FALSE RPAREN LBRACE CN_FALSE VOLATILE
##
## Ends in an error in state: 1307.
##
## assert_expr -> CN_EACH LPAREN base_type UNAME VARIABLE SEMICOLON expr RPAREN LBRACE expr . RBRACE [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## CN_EACH LPAREN base_type UNAME VARIABLE SEMICOLON expr RPAREN LBRACE expr
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 966, spurious reduction of production unary_expr -> prim_expr
## In state 963, spurious reduction of production mul_expr -> unary_expr
## In state 979, spurious reduction of production add_expr -> mul_expr
## In state 1008, spurious reduction of production rel_expr -> add_expr
## In state 964, spurious reduction of production bool_bin_expr -> rel_expr
## In state 989, spurious reduction of production list_expr -> bool_bin_expr
## In state 984, spurious reduction of production expr_without_let -> list_expr
## In state 1011, spurious reduction of production expr -> expr_without_let
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statement: CN_HAVE CN_EACH LPAREN CN_BOOL UNAME TYPE SEMICOLON CN_FALSE VOLATILE
##
## Ends in an error in state: 1311.
##
## assert_expr -> CN_EACH LPAREN base_type UNAME TYPE SEMICOLON expr . RPAREN LBRACE expr RBRACE [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## CN_EACH LPAREN base_type UNAME TYPE SEMICOLON expr
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 966, spurious reduction of production unary_expr -> prim_expr
## In state 963, spurious reduction of production mul_expr -> unary_expr
## In state 979, spurious reduction of production add_expr -> mul_expr
## In state 1008, spurious reduction of production rel_expr -> add_expr
## In state 964, spurious reduction of production bool_bin_expr -> rel_expr
## In state 989, spurious reduction of production list_expr -> bool_bin_expr
## In state 984, spurious reduction of production expr_without_let -> list_expr
## In state 1011, spurious reduction of production expr -> expr_without_let
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statement: CN_HAVE CN_EACH LPAREN CN_BOOL UNAME TYPE SEMICOLON CN_FALSE RPAREN LBRACE CN_FALSE VOLATILE
##
## Ends in an error in state: 1314.
##
## assert_expr -> CN_EACH LPAREN base_type UNAME TYPE SEMICOLON expr RPAREN LBRACE expr . RBRACE [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## CN_EACH LPAREN base_type UNAME TYPE SEMICOLON expr RPAREN LBRACE expr
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 966, spurious reduction of production unary_expr -> prim_expr
## In state 963, spurious reduction of production mul_expr -> unary_expr
## In state 979, spurious reduction of production add_expr -> mul_expr
## In state 1008, spurious reduction of production rel_expr -> add_expr
## In state 964, spurious reduction of production bool_bin_expr -> rel_expr
## In state 989, spurious reduction of production list_expr -> bool_bin_expr
## In state 984, spurious reduction of production expr_without_let -> list_expr
## In state 1011, spurious reduction of production expr -> expr_without_let
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statement: CN_HAVE CN_EACH LPAREN CN_BOOL LNAME WHILE
##
## Ends in an error in state: 1316.
##
## assert_expr -> CN_EACH LPAREN base_type LNAME . VARIABLE SEMICOLON expr RPAREN LBRACE expr RBRACE [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
## assert_expr -> CN_EACH LPAREN base_type LNAME . TYPE SEMICOLON expr RPAREN LBRACE expr RBRACE [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## CN_EACH LPAREN base_type LNAME
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statement: CN_HAVE CN_EACH LPAREN CN_BOOL LNAME VARIABLE SEMICOLON CN_FALSE VOLATILE
##
## Ends in an error in state: 1319.
##
## assert_expr -> CN_EACH LPAREN base_type LNAME VARIABLE SEMICOLON expr . RPAREN LBRACE expr RBRACE [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## CN_EACH LPAREN base_type LNAME VARIABLE SEMICOLON expr
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 966, spurious reduction of production unary_expr -> prim_expr
## In state 963, spurious reduction of production mul_expr -> unary_expr
## In state 979, spurious reduction of production add_expr -> mul_expr
## In state 1008, spurious reduction of production rel_expr -> add_expr
## In state 964, spurious reduction of production bool_bin_expr -> rel_expr
## In state 989, spurious reduction of production list_expr -> bool_bin_expr
## In state 984, spurious reduction of production expr_without_let -> list_expr
## In state 1011, spurious reduction of production expr -> expr_without_let
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statement: CN_HAVE CN_EACH LPAREN CN_BOOL LNAME VARIABLE SEMICOLON CN_FALSE RPAREN LBRACE CN_FALSE VOLATILE
##
## Ends in an error in state: 1322.
##
## assert_expr -> CN_EACH LPAREN base_type LNAME VARIABLE SEMICOLON expr RPAREN LBRACE expr . RBRACE [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## CN_EACH LPAREN base_type LNAME VARIABLE SEMICOLON expr RPAREN LBRACE expr
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 966, spurious reduction of production unary_expr -> prim_expr
## In state 963, spurious reduction of production mul_expr -> unary_expr
## In state 979, spurious reduction of production add_expr -> mul_expr
## In state 1008, spurious reduction of production rel_expr -> add_expr
## In state 964, spurious reduction of production bool_bin_expr -> rel_expr
## In state 989, spurious reduction of production list_expr -> bool_bin_expr
## In state 984, spurious reduction of production expr_without_let -> list_expr
## In state 1011, spurious reduction of production expr -> expr_without_let
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statement: CN_HAVE CN_EACH LPAREN CN_BOOL LNAME TYPE SEMICOLON CN_FALSE VOLATILE
##
## Ends in an error in state: 1326.
##
## assert_expr -> CN_EACH LPAREN base_type LNAME TYPE SEMICOLON expr . RPAREN LBRACE expr RBRACE [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## CN_EACH LPAREN base_type LNAME TYPE SEMICOLON expr
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 966, spurious reduction of production unary_expr -> prim_expr
## In state 963, spurious reduction of production mul_expr -> unary_expr
## In state 979, spurious reduction of production add_expr -> mul_expr
## In state 1008, spurious reduction of production rel_expr -> add_expr
## In state 964, spurious reduction of production bool_bin_expr -> rel_expr
## In state 989, spurious reduction of production list_expr -> bool_bin_expr
## In state 984, spurious reduction of production expr_without_let -> list_expr
## In state 1011, spurious reduction of production expr -> expr_without_let
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statement: CN_HAVE CN_EACH LPAREN CN_BOOL LNAME TYPE SEMICOLON CN_FALSE RPAREN LBRACE CN_FALSE VOLATILE
##
## Ends in an error in state: 1329.
##
## assert_expr -> CN_EACH LPAREN base_type LNAME TYPE SEMICOLON expr RPAREN LBRACE expr . RBRACE [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## CN_EACH LPAREN base_type LNAME TYPE SEMICOLON expr RPAREN LBRACE expr
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 966, spurious reduction of production unary_expr -> prim_expr
## In state 963, spurious reduction of production mul_expr -> unary_expr
## In state 979, spurious reduction of production add_expr -> mul_expr
## In state 1008, spurious reduction of production rel_expr -> add_expr
## In state 964, spurious reduction of production bool_bin_expr -> rel_expr
## In state 989, spurious reduction of production list_expr -> bool_bin_expr
## In state 984, spurious reduction of production expr_without_let -> list_expr
## In state 1011, spurious reduction of production expr -> expr_without_let
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statement: CN_HAVE CN_FALSE VOLATILE
##
## Ends in an error in state: 1332.
##
## cn_statement -> CN_HAVE assert_expr . SEMICOLON [ # ]
##
## The known suffix of the stack is as follows:
## CN_HAVE assert_expr
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 966, spurious reduction of production unary_expr -> prim_expr
## In state 963, spurious reduction of production mul_expr -> unary_expr
## In state 979, spurious reduction of production add_expr -> mul_expr
## In state 1008, spurious reduction of production rel_expr -> add_expr
## In state 964, spurious reduction of production bool_bin_expr -> rel_expr
## In state 989, spurious reduction of production list_expr -> bool_bin_expr
## In state 984, spurious reduction of production expr_without_let -> list_expr
## In state 1331, spurious reduction of production assert_expr -> expr_without_let
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statement: CN_EXTRACT WHILE
##
## Ends in an error in state: 1334.
##
## cn_statement -> CN_EXTRACT . expr SEMICOLON [ # ]
## cn_statement -> CN_EXTRACT . pred COMMA expr SEMICOLON [ # ]
##
## The known suffix of the stack is as follows:
## CN_EXTRACT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statement: CN_EXTRACT UNAME WHILE
##
## Ends in an error in state: 1335.
##
## pred -> UNAME . VARIABLE [ COMMA ]
## prim_expr -> UNAME . VARIABLE [ STAR SLASH SEMICOLON QUESTION PLUS PIPE_PIPE MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT BANG_EQ AMPERSAND_AMPERSAND ]
## prim_expr -> UNAME . TYPE [ STAR SLASH SEMICOLON QUESTION PLUS PIPE_PIPE MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT BANG_EQ AMPERSAND_AMPERSAND ]
## prim_expr -> UNAME . VARIABLE LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ STAR SLASH SEMICOLON QUESTION PLUS PIPE_PIPE MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT BANG_EQ AMPERSAND_AMPERSAND ]
## prim_expr -> UNAME . TYPE LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ STAR SLASH SEMICOLON QUESTION PLUS PIPE_PIPE MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT BANG_EQ AMPERSAND_AMPERSAND ]
## prim_expr -> UNAME . VARIABLE cons_args [ STAR SLASH SEMICOLON QUESTION PLUS PIPE_PIPE MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT BANG_EQ AMPERSAND_AMPERSAND ]
## prim_expr -> UNAME . TYPE cons_args [ STAR SLASH SEMICOLON QUESTION PLUS PIPE_PIPE MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT BANG_EQ AMPERSAND_AMPERSAND ]
##
## The known suffix of the stack is as follows:
## UNAME
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statement: CN_EXTRACT UNAME VARIABLE WHILE
##
## Ends in an error in state: 1336.
##
## pred -> UNAME VARIABLE . [ COMMA ]
## prim_expr -> UNAME VARIABLE . [ STAR SLASH SEMICOLON QUESTION PLUS PIPE_PIPE MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT BANG_EQ AMPERSAND_AMPERSAND ]
## prim_expr -> UNAME VARIABLE . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ STAR SLASH SEMICOLON QUESTION PLUS PIPE_PIPE MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT BANG_EQ AMPERSAND_AMPERSAND ]
## prim_expr -> UNAME VARIABLE . cons_args [ STAR SLASH SEMICOLON QUESTION PLUS PIPE_PIPE MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT BANG_EQ AMPERSAND_AMPERSAND ]
##
## The known suffix of the stack is as follows:
## UNAME VARIABLE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statement: CN_EXTRACT CN_OWNED LPAREN
##
## Ends in an error in state: 1337.
##
## cn_statement -> CN_EXTRACT pred . COMMA expr SEMICOLON [ # ]
##
## The known suffix of the stack is as follows:
## CN_EXTRACT pred
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 4, spurious reduction of production pred -> CN_OWNED
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statement: CN_EXTRACT CN_OWNED COMMA CN_FALSE VOLATILE
##
## Ends in an error in state: 1339.
##
## cn_statement -> CN_EXTRACT pred COMMA expr . SEMICOLON [ # ]
##
## The known suffix of the stack is as follows:
## CN_EXTRACT pred COMMA expr
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 966, spurious reduction of production unary_expr -> prim_expr
## In state 963, spurious reduction of production mul_expr -> unary_expr
## In state 979, spurious reduction of production add_expr -> mul_expr
## In state 1008, spurious reduction of production rel_expr -> add_expr
## In state 964, spurious reduction of production bool_bin_expr -> rel_expr
## In state 989, spurious reduction of production list_expr -> bool_bin_expr
## In state 984, spurious reduction of production expr_without_let -> list_expr
## In state 1011, spurious reduction of production expr -> expr_without_let
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statement: CN_EXTRACT CN_FALSE VOLATILE
##
## Ends in an error in state: 1341.
##
## cn_statement -> CN_EXTRACT expr . SEMICOLON [ # ]
##
## The known suffix of the stack is as follows:
## CN_EXTRACT expr
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 966, spurious reduction of production unary_expr -> prim_expr
## In state 963, spurious reduction of production mul_expr -> unary_expr
## In state 979, spurious reduction of production add_expr -> mul_expr
## In state 1008, spurious reduction of production rel_expr -> add_expr
## In state 964, spurious reduction of production bool_bin_expr -> rel_expr
## In state 989, spurious reduction of production list_expr -> bool_bin_expr
## In state 984, spurious reduction of production expr_without_let -> list_expr
## In state 1011, spurious reduction of production expr -> expr_without_let
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statement: CN_APPLY WHILE
##
## Ends in an error in state: 1343.
##
## cn_statement -> CN_APPLY . UNAME VARIABLE LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN SEMICOLON [ # ]
## cn_statement -> CN_APPLY . LNAME VARIABLE LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN SEMICOLON [ # ]
## cn_statement -> CN_APPLY . UNAME TYPE LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN SEMICOLON [ # ]
## cn_statement -> CN_APPLY . LNAME TYPE LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN SEMICOLON [ # ]
##
## The known suffix of the stack is as follows:
## CN_APPLY
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statement: CN_APPLY UNAME WHILE
##
## Ends in an error in state: 1344.
##
## cn_statement -> CN_APPLY UNAME . VARIABLE LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN SEMICOLON [ # ]
## cn_statement -> CN_APPLY UNAME . TYPE LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN SEMICOLON [ # ]
##
## The known suffix of the stack is as follows:
## CN_APPLY UNAME
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statement: CN_APPLY LNAME WHILE
##
## Ends in an error in state: 1355.
##
## cn_statement -> CN_APPLY LNAME . VARIABLE LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN SEMICOLON [ # ]
## cn_statement -> CN_APPLY LNAME . TYPE LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN SEMICOLON [ # ]
##
## The known suffix of the stack is as follows:
## CN_APPLY LNAME
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statement: ASSERT LPAREN CN_FALSE VOLATILE
##
## Ends in an error in state: 1368.
##
## cn_statement -> ASSERT LPAREN assert_expr . RPAREN SEMICOLON [ # ]
##
## The known suffix of the stack is as follows:
## ASSERT LPAREN assert_expr
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 966, spurious reduction of production unary_expr -> prim_expr
## In state 963, spurious reduction of production mul_expr -> unary_expr
## In state 979, spurious reduction of production add_expr -> mul_expr
## In state 1008, spurious reduction of production rel_expr -> add_expr
## In state 964, spurious reduction of production bool_bin_expr -> rel_expr
## In state 989, spurious reduction of production list_expr -> bool_bin_expr
## In state 984, spurious reduction of production expr_without_let -> list_expr
## In state 1331, spurious reduction of production assert_expr -> expr_without_let
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_toplevel: CN_SPEC WHILE
##
## Ends in an error in state: 1375.
##
## cn_fun_spec -> CN_SPEC enter_cn . UNAME VARIABLE LPAREN args RPAREN CN_REQUIRES separated_nonempty_list(SEMICOLON,condition) CN_ENSURES separated_nonempty_list(SEMICOLON,condition) exit_cn [ EOF CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE ]
## cn_fun_spec -> CN_SPEC enter_cn . LNAME VARIABLE LPAREN args RPAREN CN_REQUIRES separated_nonempty_list(SEMICOLON,condition) CN_ENSURES separated_nonempty_list(SEMICOLON,condition) exit_cn [ EOF CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE ]
## cn_fun_spec -> CN_SPEC enter_cn . UNAME TYPE LPAREN args RPAREN CN_REQUIRES separated_nonempty_list(SEMICOLON,condition) CN_ENSURES separated_nonempty_list(SEMICOLON,condition) exit_cn [ EOF CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE ]
## cn_fun_spec -> CN_SPEC enter_cn . LNAME TYPE LPAREN args RPAREN CN_REQUIRES separated_nonempty_list(SEMICOLON,condition) CN_ENSURES separated_nonempty_list(SEMICOLON,condition) exit_cn [ EOF CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE ]
##
## The known suffix of the stack is as follows:
## CN_SPEC enter_cn
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_toplevel: CN_SPEC UNAME WHILE
##
## Ends in an error in state: 1376.
##
## cn_fun_spec -> CN_SPEC enter_cn UNAME . VARIABLE LPAREN args RPAREN CN_REQUIRES separated_nonempty_list(SEMICOLON,condition) CN_ENSURES separated_nonempty_list(SEMICOLON,condition) exit_cn [ EOF CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE ]
## cn_fun_spec -> CN_SPEC enter_cn UNAME . TYPE LPAREN args RPAREN CN_REQUIRES separated_nonempty_list(SEMICOLON,condition) CN_ENSURES separated_nonempty_list(SEMICOLON,condition) exit_cn [ EOF CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE ]
##
## The known suffix of the stack is as follows:
## CN_SPEC enter_cn UNAME
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_toplevel: CN_SPEC UNAME VARIABLE LPAREN CN_BOOL LNAME TYPE RBRACE
##
## Ends in an error in state: 1381.
##
## cn_fun_spec -> CN_SPEC enter_cn UNAME VARIABLE LPAREN args . RPAREN CN_REQUIRES separated_nonempty_list(SEMICOLON,condition) CN_ENSURES separated_nonempty_list(SEMICOLON,condition) exit_cn [ EOF CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE ]
##
## The known suffix of the stack is as follows:
## CN_SPEC enter_cn UNAME VARIABLE LPAREN args
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1224, spurious reduction of production separated_nonempty_list(COMMA,pair(base_type,cn_variable)) -> base_type LNAME TYPE
## In state 1379, spurious reduction of production loption(separated_nonempty_list(COMMA,pair(base_type,cn_variable))) -> separated_nonempty_list(COMMA,pair(base_type,cn_variable))
## In state 1380, spurious reduction of production args -> loption(separated_nonempty_list(COMMA,pair(base_type,cn_variable)))
##

<YOUR SYNTAX ERROR MESSAGE HERE>

function_spec: CN_ENSURES CN_TAKE WHILE
##
## Ends in an error in state: 1384.
##
## condition -> CN_TAKE . UNAME VARIABLE EQ resource [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
## condition -> CN_TAKE . LNAME VARIABLE EQ resource [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
## condition -> CN_TAKE . UNAME TYPE EQ resource [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
## condition -> CN_TAKE . LNAME TYPE EQ resource [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## CN_TAKE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

function_spec: CN_ENSURES CN_TAKE UNAME WHILE
##
## Ends in an error in state: 1385.
##
## condition -> CN_TAKE UNAME . VARIABLE EQ resource [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
## condition -> CN_TAKE UNAME . TYPE EQ resource [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## CN_TAKE UNAME
##

<YOUR SYNTAX ERROR MESSAGE HERE>

function_spec: CN_ENSURES CN_TAKE LNAME TYPE EQ CN_EACH WHILE
##
## Ends in an error in state: 1388.
##
## resource -> CN_EACH . LPAREN base_type UNAME VARIABLE SEMICOLON expr RPAREN LBRACE pred LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN RBRACE [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
## resource -> CN_EACH . LPAREN base_type LNAME VARIABLE SEMICOLON expr RPAREN LBRACE pred LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN RBRACE [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
## resource -> CN_EACH . LPAREN base_type UNAME TYPE SEMICOLON expr RPAREN LBRACE pred LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN RBRACE [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
## resource -> CN_EACH . LPAREN base_type LNAME TYPE SEMICOLON expr RPAREN LBRACE pred LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN RBRACE [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## CN_EACH
##

<YOUR SYNTAX ERROR MESSAGE HERE>

function_spec: CN_ENSURES CN_TAKE LNAME TYPE EQ CN_EACH LPAREN WHILE
##
## Ends in an error in state: 1389.
##
## resource -> CN_EACH LPAREN . base_type UNAME VARIABLE SEMICOLON expr RPAREN LBRACE pred LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN RBRACE [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
## resource -> CN_EACH LPAREN . base_type LNAME VARIABLE SEMICOLON expr RPAREN LBRACE pred LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN RBRACE [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
## resource -> CN_EACH LPAREN . base_type UNAME TYPE SEMICOLON expr RPAREN LBRACE pred LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN RBRACE [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
## resource -> CN_EACH LPAREN . base_type LNAME TYPE SEMICOLON expr RPAREN LBRACE pred LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN RBRACE [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## CN_EACH LPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

function_spec: CN_ENSURES CN_TAKE LNAME TYPE EQ CN_EACH LPAREN CN_BOOL WHILE
##
## Ends in an error in state: 1390.
##
## resource -> CN_EACH LPAREN base_type . UNAME VARIABLE SEMICOLON expr RPAREN LBRACE pred LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN RBRACE [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
## resource -> CN_EACH LPAREN base_type . LNAME VARIABLE SEMICOLON expr RPAREN LBRACE pred LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN RBRACE [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
## resource -> CN_EACH LPAREN base_type . UNAME TYPE SEMICOLON expr RPAREN LBRACE pred LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN RBRACE [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
## resource -> CN_EACH LPAREN base_type . LNAME TYPE SEMICOLON expr RPAREN LBRACE pred LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN RBRACE [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## CN_EACH LPAREN base_type
##

<YOUR SYNTAX ERROR MESSAGE HERE>

function_spec: CN_ENSURES CN_TAKE LNAME TYPE EQ CN_EACH LPAREN CN_BOOL UNAME WHILE
##
## Ends in an error in state: 1391.
##
## resource -> CN_EACH LPAREN base_type UNAME . VARIABLE SEMICOLON expr RPAREN LBRACE pred LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN RBRACE [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
## resource -> CN_EACH LPAREN base_type UNAME . TYPE SEMICOLON expr RPAREN LBRACE pred LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN RBRACE [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## CN_EACH LPAREN base_type UNAME
##

<YOUR SYNTAX ERROR MESSAGE HERE>

function_spec: CN_ENSURES CN_TAKE LNAME TYPE EQ CN_EACH LPAREN CN_BOOL UNAME VARIABLE SEMICOLON CN_FALSE VOLATILE
##
## Ends in an error in state: 1394.
##
## resource -> CN_EACH LPAREN base_type UNAME VARIABLE SEMICOLON expr . RPAREN LBRACE pred LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN RBRACE [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## CN_EACH LPAREN base_type UNAME VARIABLE SEMICOLON expr
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 966, spurious reduction of production unary_expr -> prim_expr
## In state 963, spurious reduction of production mul_expr -> unary_expr
## In state 979, spurious reduction of production add_expr -> mul_expr
## In state 1008, spurious reduction of production rel_expr -> add_expr
## In state 964, spurious reduction of production bool_bin_expr -> rel_expr
## In state 989, spurious reduction of production list_expr -> bool_bin_expr
## In state 984, spurious reduction of production expr_without_let -> list_expr
## In state 1011, spurious reduction of production expr -> expr_without_let
##

<YOUR SYNTAX ERROR MESSAGE HERE>

function_spec: CN_ENSURES CN_TAKE LNAME TYPE EQ CN_EACH LPAREN CN_BOOL UNAME VARIABLE SEMICOLON CN_FALSE RPAREN LBRACE CN_OWNED COMMA
##
## Ends in an error in state: 1397.
##
## resource -> CN_EACH LPAREN base_type UNAME VARIABLE SEMICOLON expr RPAREN LBRACE pred . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN RBRACE [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## CN_EACH LPAREN base_type UNAME VARIABLE SEMICOLON expr RPAREN LBRACE pred
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 4, spurious reduction of production pred -> CN_OWNED
##

<YOUR SYNTAX ERROR MESSAGE HERE>

function_spec: CN_ENSURES CN_TAKE LNAME TYPE EQ CN_EACH LPAREN CN_BOOL UNAME TYPE SEMICOLON CN_FALSE VOLATILE
##
## Ends in an error in state: 1404.
##
## resource -> CN_EACH LPAREN base_type UNAME TYPE SEMICOLON expr . RPAREN LBRACE pred LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN RBRACE [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## CN_EACH LPAREN base_type UNAME TYPE SEMICOLON expr
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 966, spurious reduction of production unary_expr -> prim_expr
## In state 963, spurious reduction of production mul_expr -> unary_expr
## In state 979, spurious reduction of production add_expr -> mul_expr
## In state 1008, spurious reduction of production rel_expr -> add_expr
## In state 964, spurious reduction of production bool_bin_expr -> rel_expr
## In state 989, spurious reduction of production list_expr -> bool_bin_expr
## In state 984, spurious reduction of production expr_without_let -> list_expr
## In state 1011, spurious reduction of production expr -> expr_without_let
##

<YOUR SYNTAX ERROR MESSAGE HERE>

function_spec: CN_ENSURES CN_TAKE LNAME TYPE EQ CN_EACH LPAREN CN_BOOL UNAME TYPE SEMICOLON CN_FALSE RPAREN LBRACE CN_OWNED COMMA
##
## Ends in an error in state: 1407.
##
## resource -> CN_EACH LPAREN base_type UNAME TYPE SEMICOLON expr RPAREN LBRACE pred . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN RBRACE [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## CN_EACH LPAREN base_type UNAME TYPE SEMICOLON expr RPAREN LBRACE pred
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 4, spurious reduction of production pred -> CN_OWNED
##

<YOUR SYNTAX ERROR MESSAGE HERE>

function_spec: CN_ENSURES CN_TAKE LNAME TYPE EQ CN_EACH LPAREN CN_BOOL LNAME WHILE
##
## Ends in an error in state: 1412.
##
## resource -> CN_EACH LPAREN base_type LNAME . VARIABLE SEMICOLON expr RPAREN LBRACE pred LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN RBRACE [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
## resource -> CN_EACH LPAREN base_type LNAME . TYPE SEMICOLON expr RPAREN LBRACE pred LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN RBRACE [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## CN_EACH LPAREN base_type LNAME
##

<YOUR SYNTAX ERROR MESSAGE HERE>

function_spec: CN_ENSURES CN_TAKE LNAME TYPE EQ CN_EACH LPAREN CN_BOOL LNAME VARIABLE SEMICOLON CN_FALSE VOLATILE
##
## Ends in an error in state: 1415.
##
## resource -> CN_EACH LPAREN base_type LNAME VARIABLE SEMICOLON expr . RPAREN LBRACE pred LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN RBRACE [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## CN_EACH LPAREN base_type LNAME VARIABLE SEMICOLON expr
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 966, spurious reduction of production unary_expr -> prim_expr
## In state 963, spurious reduction of production mul_expr -> unary_expr
## In state 979, spurious reduction of production add_expr -> mul_expr
## In state 1008, spurious reduction of production rel_expr -> add_expr
## In state 964, spurious reduction of production bool_bin_expr -> rel_expr
## In state 989, spurious reduction of production list_expr -> bool_bin_expr
## In state 984, spurious reduction of production expr_without_let -> list_expr
## In state 1011, spurious reduction of production expr -> expr_without_let
##

<YOUR SYNTAX ERROR MESSAGE HERE>

function_spec: CN_ENSURES CN_TAKE LNAME TYPE EQ CN_EACH LPAREN CN_BOOL LNAME VARIABLE SEMICOLON CN_FALSE RPAREN LBRACE CN_OWNED COMMA
##
## Ends in an error in state: 1418.
##
## resource -> CN_EACH LPAREN base_type LNAME VARIABLE SEMICOLON expr RPAREN LBRACE pred . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN RBRACE [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## CN_EACH LPAREN base_type LNAME VARIABLE SEMICOLON expr RPAREN LBRACE pred
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 4, spurious reduction of production pred -> CN_OWNED
##

<YOUR SYNTAX ERROR MESSAGE HERE>

function_spec: CN_ENSURES CN_TAKE LNAME TYPE EQ CN_EACH LPAREN CN_BOOL LNAME TYPE SEMICOLON CN_FALSE VOLATILE
##
## Ends in an error in state: 1425.
##
## resource -> CN_EACH LPAREN base_type LNAME TYPE SEMICOLON expr . RPAREN LBRACE pred LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN RBRACE [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## CN_EACH LPAREN base_type LNAME TYPE SEMICOLON expr
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 966, spurious reduction of production unary_expr -> prim_expr
## In state 963, spurious reduction of production mul_expr -> unary_expr
## In state 979, spurious reduction of production add_expr -> mul_expr
## In state 1008, spurious reduction of production rel_expr -> add_expr
## In state 964, spurious reduction of production bool_bin_expr -> rel_expr
## In state 989, spurious reduction of production list_expr -> bool_bin_expr
## In state 984, spurious reduction of production expr_without_let -> list_expr
## In state 1011, spurious reduction of production expr -> expr_without_let
##

<YOUR SYNTAX ERROR MESSAGE HERE>

function_spec: CN_ENSURES CN_TAKE LNAME TYPE EQ CN_EACH LPAREN CN_BOOL LNAME TYPE SEMICOLON CN_FALSE RPAREN LBRACE CN_OWNED COMMA
##
## Ends in an error in state: 1428.
##
## resource -> CN_EACH LPAREN base_type LNAME TYPE SEMICOLON expr RPAREN LBRACE pred . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN RBRACE [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## CN_EACH LPAREN base_type LNAME TYPE SEMICOLON expr RPAREN LBRACE pred
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 4, spurious reduction of production pred -> CN_OWNED
##

<YOUR SYNTAX ERROR MESSAGE HERE>

function_spec: CN_ENSURES CN_TAKE LNAME TYPE EQ CN_OWNED COMMA
##
## Ends in an error in state: 1434.
##
## resource -> pred . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## pred
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 4, spurious reduction of production pred -> CN_OWNED
##

<YOUR SYNTAX ERROR MESSAGE HERE>

function_spec: CN_ENSURES CN_TAKE LNAME WHILE
##
## Ends in an error in state: 1441.
##
## condition -> CN_TAKE LNAME . VARIABLE EQ resource [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
## condition -> CN_TAKE LNAME . TYPE EQ resource [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## CN_TAKE LNAME
##

<YOUR SYNTAX ERROR MESSAGE HERE>

function_spec: CN_ENSURES CN_LET WHILE
##
## Ends in an error in state: 1448.
##
## condition -> CN_LET . UNAME VARIABLE EQ expr [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
## condition -> CN_LET . LNAME VARIABLE EQ expr [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
## condition -> CN_LET . UNAME TYPE EQ expr [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
## condition -> CN_LET . LNAME TYPE EQ expr [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## CN_LET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

function_spec: CN_ENSURES CN_LET UNAME WHILE
##
## Ends in an error in state: 1449.
##
## condition -> CN_LET UNAME . VARIABLE EQ expr [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
## condition -> CN_LET UNAME . TYPE EQ expr [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## CN_LET UNAME
##

<YOUR SYNTAX ERROR MESSAGE HERE>

function_spec: CN_ENSURES CN_LET LNAME WHILE
##
## Ends in an error in state: 1456.
##
## condition -> CN_LET LNAME . VARIABLE EQ expr [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
## condition -> CN_LET LNAME . TYPE EQ expr [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## CN_LET LNAME
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_toplevel: CN_SPEC UNAME VARIABLE LPAREN RPAREN CN_REQUIRES CN_FALSE VOLATILE
##
## Ends in an error in state: 1463.
##
## cn_fun_spec -> CN_SPEC enter_cn UNAME VARIABLE LPAREN args RPAREN CN_REQUIRES separated_nonempty_list(SEMICOLON,condition) . CN_ENSURES separated_nonempty_list(SEMICOLON,condition) exit_cn [ EOF CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE ]
##
## The known suffix of the stack is as follows:
## CN_SPEC enter_cn UNAME VARIABLE LPAREN args RPAREN CN_REQUIRES separated_nonempty_list(SEMICOLON,condition)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 966, spurious reduction of production unary_expr -> prim_expr
## In state 963, spurious reduction of production mul_expr -> unary_expr
## In state 979, spurious reduction of production add_expr -> mul_expr
## In state 1008, spurious reduction of production rel_expr -> add_expr
## In state 964, spurious reduction of production bool_bin_expr -> rel_expr
## In state 989, spurious reduction of production list_expr -> bool_bin_expr
## In state 984, spurious reduction of production expr_without_let -> list_expr
## In state 1331, spurious reduction of production assert_expr -> expr_without_let
## In state 1470, spurious reduction of production condition -> assert_expr
## In state 1467, spurious reduction of production separated_nonempty_list(SEMICOLON,condition) -> condition
##

<YOUR SYNTAX ERROR MESSAGE HERE>

function_spec: CN_ENSURES CN_FALSE RPAREN
##
## Ends in an error in state: 1467.
##
## separated_nonempty_list(SEMICOLON,condition) -> condition . [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
## separated_nonempty_list(SEMICOLON,condition) -> condition . SEMICOLON separated_nonempty_list(SEMICOLON,condition) [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## condition
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 966, spurious reduction of production unary_expr -> prim_expr
## In state 963, spurious reduction of production mul_expr -> unary_expr
## In state 979, spurious reduction of production add_expr -> mul_expr
## In state 1008, spurious reduction of production rel_expr -> add_expr
## In state 964, spurious reduction of production bool_bin_expr -> rel_expr
## In state 989, spurious reduction of production list_expr -> bool_bin_expr
## In state 984, spurious reduction of production expr_without_let -> list_expr
## In state 1331, spurious reduction of production assert_expr -> expr_without_let
## In state 1470, spurious reduction of production condition -> assert_expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_toplevel: CN_SPEC UNAME TYPE LPAREN CN_BOOL LNAME TYPE RBRACE
##
## Ends in an error in state: 1473.
##
## cn_fun_spec -> CN_SPEC enter_cn UNAME TYPE LPAREN args . RPAREN CN_REQUIRES separated_nonempty_list(SEMICOLON,condition) CN_ENSURES separated_nonempty_list(SEMICOLON,condition) exit_cn [ EOF CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE ]
##
## The known suffix of the stack is as follows:
## CN_SPEC enter_cn UNAME TYPE LPAREN args
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1224, spurious reduction of production separated_nonempty_list(COMMA,pair(base_type,cn_variable)) -> base_type LNAME TYPE
## In state 1379, spurious reduction of production loption(separated_nonempty_list(COMMA,pair(base_type,cn_variable))) -> separated_nonempty_list(COMMA,pair(base_type,cn_variable))
## In state 1380, spurious reduction of production args -> loption(separated_nonempty_list(COMMA,pair(base_type,cn_variable)))
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_toplevel: CN_SPEC UNAME TYPE LPAREN RPAREN CN_REQUIRES CN_FALSE VOLATILE
##
## Ends in an error in state: 1476.
##
## cn_fun_spec -> CN_SPEC enter_cn UNAME TYPE LPAREN args RPAREN CN_REQUIRES separated_nonempty_list(SEMICOLON,condition) . CN_ENSURES separated_nonempty_list(SEMICOLON,condition) exit_cn [ EOF CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE ]
##
## The known suffix of the stack is as follows:
## CN_SPEC enter_cn UNAME TYPE LPAREN args RPAREN CN_REQUIRES separated_nonempty_list(SEMICOLON,condition)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 966, spurious reduction of production unary_expr -> prim_expr
## In state 963, spurious reduction of production mul_expr -> unary_expr
## In state 979, spurious reduction of production add_expr -> mul_expr
## In state 1008, spurious reduction of production rel_expr -> add_expr
## In state 964, spurious reduction of production bool_bin_expr -> rel_expr
## In state 989, spurious reduction of production list_expr -> bool_bin_expr
## In state 984, spurious reduction of production expr_without_let -> list_expr
## In state 1331, spurious reduction of production assert_expr -> expr_without_let
## In state 1470, spurious reduction of production condition -> assert_expr
## In state 1467, spurious reduction of production separated_nonempty_list(SEMICOLON,condition) -> condition
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_toplevel: CN_SPEC LNAME WHILE
##
## Ends in an error in state: 1480.
##
## cn_fun_spec -> CN_SPEC enter_cn LNAME . VARIABLE LPAREN args RPAREN CN_REQUIRES separated_nonempty_list(SEMICOLON,condition) CN_ENSURES separated_nonempty_list(SEMICOLON,condition) exit_cn [ EOF CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE ]
## cn_fun_spec -> CN_SPEC enter_cn LNAME . TYPE LPAREN args RPAREN CN_REQUIRES separated_nonempty_list(SEMICOLON,condition) CN_ENSURES separated_nonempty_list(SEMICOLON,condition) exit_cn [ EOF CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE ]
##
## The known suffix of the stack is as follows:
## CN_SPEC enter_cn LNAME
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_toplevel: CN_SPEC LNAME VARIABLE LPAREN CN_BOOL LNAME TYPE RBRACE
##
## Ends in an error in state: 1483.
##
## cn_fun_spec -> CN_SPEC enter_cn LNAME VARIABLE LPAREN args . RPAREN CN_REQUIRES separated_nonempty_list(SEMICOLON,condition) CN_ENSURES separated_nonempty_list(SEMICOLON,condition) exit_cn [ EOF CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE ]
##
## The known suffix of the stack is as follows:
## CN_SPEC enter_cn LNAME VARIABLE LPAREN args
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1224, spurious reduction of production separated_nonempty_list(COMMA,pair(base_type,cn_variable)) -> base_type LNAME TYPE
## In state 1379, spurious reduction of production loption(separated_nonempty_list(COMMA,pair(base_type,cn_variable))) -> separated_nonempty_list(COMMA,pair(base_type,cn_variable))
## In state 1380, spurious reduction of production args -> loption(separated_nonempty_list(COMMA,pair(base_type,cn_variable)))
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_toplevel: CN_SPEC LNAME VARIABLE LPAREN RPAREN CN_REQUIRES CN_FALSE VOLATILE
##
## Ends in an error in state: 1486.
##
## cn_fun_spec -> CN_SPEC enter_cn LNAME VARIABLE LPAREN args RPAREN CN_REQUIRES separated_nonempty_list(SEMICOLON,condition) . CN_ENSURES separated_nonempty_list(SEMICOLON,condition) exit_cn [ EOF CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE ]
##
## The known suffix of the stack is as follows:
## CN_SPEC enter_cn LNAME VARIABLE LPAREN args RPAREN CN_REQUIRES separated_nonempty_list(SEMICOLON,condition)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 966, spurious reduction of production unary_expr -> prim_expr
## In state 963, spurious reduction of production mul_expr -> unary_expr
## In state 979, spurious reduction of production add_expr -> mul_expr
## In state 1008, spurious reduction of production rel_expr -> add_expr
## In state 964, spurious reduction of production bool_bin_expr -> rel_expr
## In state 989, spurious reduction of production list_expr -> bool_bin_expr
## In state 984, spurious reduction of production expr_without_let -> list_expr
## In state 1331, spurious reduction of production assert_expr -> expr_without_let
## In state 1470, spurious reduction of production condition -> assert_expr
## In state 1467, spurious reduction of production separated_nonempty_list(SEMICOLON,condition) -> condition
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_toplevel: CN_SPEC LNAME TYPE LPAREN CN_BOOL LNAME TYPE RBRACE
##
## Ends in an error in state: 1492.
##
## cn_fun_spec -> CN_SPEC enter_cn LNAME TYPE LPAREN args . RPAREN CN_REQUIRES separated_nonempty_list(SEMICOLON,condition) CN_ENSURES separated_nonempty_list(SEMICOLON,condition) exit_cn [ EOF CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE ]
##
## The known suffix of the stack is as follows:
## CN_SPEC enter_cn LNAME TYPE LPAREN args
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1224, spurious reduction of production separated_nonempty_list(COMMA,pair(base_type,cn_variable)) -> base_type LNAME TYPE
## In state 1379, spurious reduction of production loption(separated_nonempty_list(COMMA,pair(base_type,cn_variable))) -> separated_nonempty_list(COMMA,pair(base_type,cn_variable))
## In state 1380, spurious reduction of production args -> loption(separated_nonempty_list(COMMA,pair(base_type,cn_variable)))
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_toplevel: CN_SPEC LNAME TYPE LPAREN RPAREN CN_REQUIRES CN_FALSE VOLATILE
##
## Ends in an error in state: 1495.
##
## cn_fun_spec -> CN_SPEC enter_cn LNAME TYPE LPAREN args RPAREN CN_REQUIRES separated_nonempty_list(SEMICOLON,condition) . CN_ENSURES separated_nonempty_list(SEMICOLON,condition) exit_cn [ EOF CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE ]
##
## The known suffix of the stack is as follows:
## CN_SPEC enter_cn LNAME TYPE LPAREN args RPAREN CN_REQUIRES separated_nonempty_list(SEMICOLON,condition)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 966, spurious reduction of production unary_expr -> prim_expr
## In state 963, spurious reduction of production mul_expr -> unary_expr
## In state 979, spurious reduction of production add_expr -> mul_expr
## In state 1008, spurious reduction of production rel_expr -> add_expr
## In state 964, spurious reduction of production bool_bin_expr -> rel_expr
## In state 989, spurious reduction of production list_expr -> bool_bin_expr
## In state 984, spurious reduction of production expr_without_let -> list_expr
## In state 1331, spurious reduction of production assert_expr -> expr_without_let
## In state 1470, spurious reduction of production condition -> assert_expr
## In state 1467, spurious reduction of production separated_nonempty_list(SEMICOLON,condition) -> condition
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_toplevel: CN_FUNCTION LBRACK UNAME WHILE
##
## Ends in an error in state: 1502.
##
## separated_nonempty_list(COMMA,cn_variable) -> UNAME . VARIABLE [ RBRACK ]
## separated_nonempty_list(COMMA,cn_variable) -> UNAME . TYPE [ RBRACK ]
## separated_nonempty_list(COMMA,cn_variable) -> UNAME . VARIABLE COMMA separated_nonempty_list(COMMA,cn_variable) [ RBRACK ]
## separated_nonempty_list(COMMA,cn_variable) -> UNAME . TYPE COMMA separated_nonempty_list(COMMA,cn_variable) [ RBRACK ]
##
## The known suffix of the stack is as follows:
## UNAME
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_toplevel: CN_FUNCTION LBRACK UNAME VARIABLE WHILE
##
## Ends in an error in state: 1503.
##
## separated_nonempty_list(COMMA,cn_variable) -> UNAME VARIABLE . [ RBRACK ]
## separated_nonempty_list(COMMA,cn_variable) -> UNAME VARIABLE . COMMA separated_nonempty_list(COMMA,cn_variable) [ RBRACK ]
##
## The known suffix of the stack is as follows:
## UNAME VARIABLE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_toplevel: CN_FUNCTION LBRACK LNAME WHILE
##
## Ends in an error in state: 1505.
##
## separated_nonempty_list(COMMA,cn_variable) -> LNAME . VARIABLE [ RBRACK ]
## separated_nonempty_list(COMMA,cn_variable) -> LNAME . TYPE [ RBRACK ]
## separated_nonempty_list(COMMA,cn_variable) -> LNAME . VARIABLE COMMA separated_nonempty_list(COMMA,cn_variable) [ RBRACK ]
## separated_nonempty_list(COMMA,cn_variable) -> LNAME . TYPE COMMA separated_nonempty_list(COMMA,cn_variable) [ RBRACK ]
##
## The known suffix of the stack is as follows:
## LNAME
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_toplevel: CN_FUNCTION LBRACK LNAME VARIABLE WHILE
##
## Ends in an error in state: 1506.
##
## separated_nonempty_list(COMMA,cn_variable) -> LNAME VARIABLE . [ RBRACK ]
## separated_nonempty_list(COMMA,cn_variable) -> LNAME VARIABLE . COMMA separated_nonempty_list(COMMA,cn_variable) [ RBRACK ]
##
## The known suffix of the stack is as follows:
## LNAME VARIABLE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_toplevel: CN_FUNCTION LBRACK LNAME TYPE WHILE
##
## Ends in an error in state: 1509.
##
## separated_nonempty_list(COMMA,cn_variable) -> LNAME TYPE . [ RBRACK ]
## separated_nonempty_list(COMMA,cn_variable) -> LNAME TYPE . COMMA separated_nonempty_list(COMMA,cn_variable) [ RBRACK ]
##
## The known suffix of the stack is as follows:
## LNAME TYPE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_toplevel: CN_FUNCTION LBRACK UNAME TYPE WHILE
##
## Ends in an error in state: 1513.
##
## separated_nonempty_list(COMMA,cn_variable) -> UNAME TYPE . [ RBRACK ]
## separated_nonempty_list(COMMA,cn_variable) -> UNAME TYPE . COMMA separated_nonempty_list(COMMA,cn_variable) [ RBRACK ]
##
## The known suffix of the stack is as follows:
## UNAME TYPE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_toplevel: CN_PREDICATE CN_BOOL UNAME VARIABLE LPAREN CN_BOOL LNAME TYPE RBRACE
##
## Ends in an error in state: 1527.
##
## cn_predicate -> CN_PREDICATE enter_cn cn_attrs cn_pred_output UNAME VARIABLE LPAREN args . RPAREN cn_option_pred_clauses exit_cn [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## CN_PREDICATE enter_cn cn_attrs cn_pred_output UNAME VARIABLE LPAREN args
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1224, spurious reduction of production separated_nonempty_list(COMMA,pair(base_type,cn_variable)) -> base_type LNAME TYPE
## In state 1379, spurious reduction of production loption(separated_nonempty_list(COMMA,pair(base_type,cn_variable))) -> separated_nonempty_list(COMMA,pair(base_type,cn_variable))
## In state 1380, spurious reduction of production args -> loption(separated_nonempty_list(COMMA,pair(base_type,cn_variable)))
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_toplevel: CN_PREDICATE CN_BOOL UNAME VARIABLE LPAREN RPAREN LBRACE RETURN WHILE
##
## Ends in an error in state: 1530.
##
## clause -> RETURN . expr [ SEMICOLON ]
## clause -> RETURN . [ SEMICOLON ]
##
## The known suffix of the stack is as follows:
## RETURN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_toplevel: CN_PREDICATE CN_BOOL UNAME VARIABLE LPAREN RPAREN LBRACE IF LPAREN CN_FALSE VOLATILE
##
## Ends in an error in state: 1534.
##
## clauses -> IF LPAREN expr . RPAREN LBRACE clause SEMICOLON RBRACE ELSE LBRACE clauses RBRACE [ RBRACE ]
##
## The known suffix of the stack is as follows:
## IF LPAREN expr
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 966, spurious reduction of production unary_expr -> prim_expr
## In state 963, spurious reduction of production mul_expr -> unary_expr
## In state 979, spurious reduction of production add_expr -> mul_expr
## In state 1008, spurious reduction of production rel_expr -> add_expr
## In state 964, spurious reduction of production bool_bin_expr -> rel_expr
## In state 989, spurious reduction of production list_expr -> bool_bin_expr
## In state 984, spurious reduction of production expr_without_let -> list_expr
## In state 1011, spurious reduction of production expr -> expr_without_let
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_toplevel: CN_PREDICATE CN_BOOL UNAME VARIABLE LPAREN RPAREN LBRACE CN_TAKE WHILE
##
## Ends in an error in state: 1537.
##
## clause -> CN_TAKE . UNAME VARIABLE EQ resource SEMICOLON clause [ SEMICOLON ]
## clause -> CN_TAKE . LNAME VARIABLE EQ resource SEMICOLON clause [ SEMICOLON ]
## clause -> CN_TAKE . UNAME TYPE EQ resource SEMICOLON clause [ SEMICOLON ]
## clause -> CN_TAKE . LNAME TYPE EQ resource SEMICOLON clause [ SEMICOLON ]
##
## The known suffix of the stack is as follows:
## CN_TAKE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_toplevel: CN_PREDICATE CN_BOOL UNAME VARIABLE LPAREN RPAREN LBRACE CN_TAKE UNAME WHILE
##
## Ends in an error in state: 1538.
##
## clause -> CN_TAKE UNAME . VARIABLE EQ resource SEMICOLON clause [ SEMICOLON ]
## clause -> CN_TAKE UNAME . TYPE EQ resource SEMICOLON clause [ SEMICOLON ]
##
## The known suffix of the stack is as follows:
## CN_TAKE UNAME
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_toplevel: CN_PREDICATE CN_BOOL UNAME VARIABLE LPAREN RPAREN LBRACE CN_LET WHILE
##
## Ends in an error in state: 1543.
##
## clause -> CN_LET . UNAME VARIABLE EQ expr SEMICOLON clause [ SEMICOLON ]
## clause -> CN_LET . LNAME VARIABLE EQ expr SEMICOLON clause [ SEMICOLON ]
## clause -> CN_LET . UNAME TYPE EQ expr SEMICOLON clause [ SEMICOLON ]
## clause -> CN_LET . LNAME TYPE EQ expr SEMICOLON clause [ SEMICOLON ]
##
## The known suffix of the stack is as follows:
## CN_LET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_toplevel: CN_PREDICATE CN_BOOL UNAME VARIABLE LPAREN RPAREN LBRACE CN_LET UNAME WHILE
##
## Ends in an error in state: 1544.
##
## clause -> CN_LET UNAME . VARIABLE EQ expr SEMICOLON clause [ SEMICOLON ]
## clause -> CN_LET UNAME . TYPE EQ expr SEMICOLON clause [ SEMICOLON ]
##
## The known suffix of the stack is as follows:
## CN_LET UNAME
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_toplevel: CN_PREDICATE CN_BOOL UNAME VARIABLE LPAREN RPAREN LBRACE CN_LET UNAME VARIABLE EQ CN_FALSE VOLATILE
##
## Ends in an error in state: 1547.
##
## clause -> CN_LET UNAME VARIABLE EQ expr . SEMICOLON clause [ SEMICOLON ]
##
## The known suffix of the stack is as follows:
## CN_LET UNAME VARIABLE EQ expr
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 966, spurious reduction of production unary_expr -> prim_expr
## In state 963, spurious reduction of production mul_expr -> unary_expr
## In state 979, spurious reduction of production add_expr -> mul_expr
## In state 1008, spurious reduction of production rel_expr -> add_expr
## In state 964, spurious reduction of production bool_bin_expr -> rel_expr
## In state 989, spurious reduction of production list_expr -> bool_bin_expr
## In state 984, spurious reduction of production expr_without_let -> list_expr
## In state 1011, spurious reduction of production expr -> expr_without_let
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_toplevel: CN_PREDICATE CN_BOOL UNAME VARIABLE LPAREN RPAREN LBRACE ASSERT LPAREN CN_FALSE VOLATILE
##
## Ends in an error in state: 1551.
##
## clause -> ASSERT LPAREN assert_expr . RPAREN SEMICOLON clause [ SEMICOLON ]
##
## The known suffix of the stack is as follows:
## ASSERT LPAREN assert_expr
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 966, spurious reduction of production unary_expr -> prim_expr
## In state 963, spurious reduction of production mul_expr -> unary_expr
## In state 979, spurious reduction of production add_expr -> mul_expr
## In state 1008, spurious reduction of production rel_expr -> add_expr
## In state 964, spurious reduction of production bool_bin_expr -> rel_expr
## In state 989, spurious reduction of production list_expr -> bool_bin_expr
## In state 984, spurious reduction of production expr_without_let -> list_expr
## In state 1331, spurious reduction of production assert_expr -> expr_without_let
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_toplevel: CN_PREDICATE CN_BOOL UNAME VARIABLE LPAREN RPAREN LBRACE CN_LET UNAME TYPE EQ CN_FALSE VOLATILE
##
## Ends in an error in state: 1558.
##
## clause -> CN_LET UNAME TYPE EQ expr . SEMICOLON clause [ SEMICOLON ]
##
## The known suffix of the stack is as follows:
## CN_LET UNAME TYPE EQ expr
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 966, spurious reduction of production unary_expr -> prim_expr
## In state 963, spurious reduction of production mul_expr -> unary_expr
## In state 979, spurious reduction of production add_expr -> mul_expr
## In state 1008, spurious reduction of production rel_expr -> add_expr
## In state 964, spurious reduction of production bool_bin_expr -> rel_expr
## In state 989, spurious reduction of production list_expr -> bool_bin_expr
## In state 984, spurious reduction of production expr_without_let -> list_expr
## In state 1011, spurious reduction of production expr -> expr_without_let
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_toplevel: CN_PREDICATE CN_BOOL UNAME VARIABLE LPAREN RPAREN LBRACE CN_LET LNAME WHILE
##
## Ends in an error in state: 1561.
##
## clause -> CN_LET LNAME . VARIABLE EQ expr SEMICOLON clause [ SEMICOLON ]
## clause -> CN_LET LNAME . TYPE EQ expr SEMICOLON clause [ SEMICOLON ]
##
## The known suffix of the stack is as follows:
## CN_LET LNAME
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_toplevel: CN_PREDICATE CN_BOOL UNAME VARIABLE LPAREN RPAREN LBRACE CN_LET LNAME VARIABLE EQ CN_FALSE VOLATILE
##
## Ends in an error in state: 1564.
##
## clause -> CN_LET LNAME VARIABLE EQ expr . SEMICOLON clause [ SEMICOLON ]
##
## The known suffix of the stack is as follows:
## CN_LET LNAME VARIABLE EQ expr
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 966, spurious reduction of production unary_expr -> prim_expr
## In state 963, spurious reduction of production mul_expr -> unary_expr
## In state 979, spurious reduction of production add_expr -> mul_expr
## In state 1008, spurious reduction of production rel_expr -> add_expr
## In state 964, spurious reduction of production bool_bin_expr -> rel_expr
## In state 989, spurious reduction of production list_expr -> bool_bin_expr
## In state 984, spurious reduction of production expr_without_let -> list_expr
## In state 1011, spurious reduction of production expr -> expr_without_let
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_toplevel: CN_PREDICATE CN_BOOL UNAME VARIABLE LPAREN RPAREN LBRACE CN_LET LNAME TYPE EQ CN_FALSE VOLATILE
##
## Ends in an error in state: 1569.
##
## clause -> CN_LET LNAME TYPE EQ expr . SEMICOLON clause [ SEMICOLON ]
##
## The known suffix of the stack is as follows:
## CN_LET LNAME TYPE EQ expr
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 966, spurious reduction of production unary_expr -> prim_expr
## In state 963, spurious reduction of production mul_expr -> unary_expr
## In state 979, spurious reduction of production add_expr -> mul_expr
## In state 1008, spurious reduction of production rel_expr -> add_expr
## In state 964, spurious reduction of production bool_bin_expr -> rel_expr
## In state 989, spurious reduction of production list_expr -> bool_bin_expr
## In state 984, spurious reduction of production expr_without_let -> list_expr
## In state 1011, spurious reduction of production expr -> expr_without_let
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_toplevel: CN_PREDICATE CN_BOOL UNAME VARIABLE LPAREN RPAREN LBRACE CN_TAKE LNAME WHILE
##
## Ends in an error in state: 1578.
##
## clause -> CN_TAKE LNAME . VARIABLE EQ resource SEMICOLON clause [ SEMICOLON ]
## clause -> CN_TAKE LNAME . TYPE EQ resource SEMICOLON clause [ SEMICOLON ]
##
## The known suffix of the stack is as follows:
## CN_TAKE LNAME
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_toplevel: CN_PREDICATE CN_BOOL UNAME VARIABLE LPAREN RPAREN LBRACE IF LPAREN CN_FALSE RPAREN LBRACE RETURN CN_FALSE VOLATILE
##
## Ends in an error in state: 1589.
##
## clauses -> IF LPAREN expr RPAREN LBRACE clause . SEMICOLON RBRACE ELSE LBRACE clauses RBRACE [ RBRACE ]
##
## The known suffix of the stack is as follows:
## IF LPAREN expr RPAREN LBRACE clause
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 966, spurious reduction of production unary_expr -> prim_expr
## In state 963, spurious reduction of production mul_expr -> unary_expr
## In state 979, spurious reduction of production add_expr -> mul_expr
## In state 1008, spurious reduction of production rel_expr -> add_expr
## In state 964, spurious reduction of production bool_bin_expr -> rel_expr
## In state 989, spurious reduction of production list_expr -> bool_bin_expr
## In state 984, spurious reduction of production expr_without_let -> list_expr
## In state 1011, spurious reduction of production expr -> expr_without_let
## In state 1531, spurious reduction of production clause -> RETURN expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_toplevel: CN_PREDICATE CN_BOOL UNAME VARIABLE LPAREN RPAREN LBRACE RETURN CN_FALSE VOLATILE
##
## Ends in an error in state: 1596.
##
## clauses -> clause . SEMICOLON [ RBRACE ]
##
## The known suffix of the stack is as follows:
## clause
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 966, spurious reduction of production unary_expr -> prim_expr
## In state 963, spurious reduction of production mul_expr -> unary_expr
## In state 979, spurious reduction of production add_expr -> mul_expr
## In state 1008, spurious reduction of production rel_expr -> add_expr
## In state 964, spurious reduction of production bool_bin_expr -> rel_expr
## In state 989, spurious reduction of production list_expr -> bool_bin_expr
## In state 984, spurious reduction of production expr_without_let -> list_expr
## In state 1011, spurious reduction of production expr -> expr_without_let
## In state 1531, spurious reduction of production clause -> RETURN expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_toplevel: CN_LEMMA WHILE
##
## Ends in an error in state: 1604.
##
## cn_lemma -> CN_LEMMA enter_cn . UNAME VARIABLE LPAREN args RPAREN CN_REQUIRES separated_nonempty_list(SEMICOLON,condition) CN_ENSURES separated_nonempty_list(SEMICOLON,condition) exit_cn [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
## cn_lemma -> CN_LEMMA enter_cn . LNAME VARIABLE LPAREN args RPAREN CN_REQUIRES separated_nonempty_list(SEMICOLON,condition) CN_ENSURES separated_nonempty_list(SEMICOLON,condition) exit_cn [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
## cn_lemma -> CN_LEMMA enter_cn . UNAME TYPE LPAREN args RPAREN CN_REQUIRES separated_nonempty_list(SEMICOLON,condition) CN_ENSURES separated_nonempty_list(SEMICOLON,condition) exit_cn [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
## cn_lemma -> CN_LEMMA enter_cn . LNAME TYPE LPAREN args RPAREN CN_REQUIRES separated_nonempty_list(SEMICOLON,condition) CN_ENSURES separated_nonempty_list(SEMICOLON,condition) exit_cn [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## CN_LEMMA enter_cn
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_toplevel: CN_LEMMA UNAME WHILE
##
## Ends in an error in state: 1605.
##
## cn_lemma -> CN_LEMMA enter_cn UNAME . VARIABLE LPAREN args RPAREN CN_REQUIRES separated_nonempty_list(SEMICOLON,condition) CN_ENSURES separated_nonempty_list(SEMICOLON,condition) exit_cn [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
## cn_lemma -> CN_LEMMA enter_cn UNAME . TYPE LPAREN args RPAREN CN_REQUIRES separated_nonempty_list(SEMICOLON,condition) CN_ENSURES separated_nonempty_list(SEMICOLON,condition) exit_cn [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## CN_LEMMA enter_cn UNAME
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_toplevel: CN_LEMMA UNAME VARIABLE LPAREN CN_BOOL LNAME TYPE RBRACE
##
## Ends in an error in state: 1608.
##
## cn_lemma -> CN_LEMMA enter_cn UNAME VARIABLE LPAREN args . RPAREN CN_REQUIRES separated_nonempty_list(SEMICOLON,condition) CN_ENSURES separated_nonempty_list(SEMICOLON,condition) exit_cn [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## CN_LEMMA enter_cn UNAME VARIABLE LPAREN args
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1224, spurious reduction of production separated_nonempty_list(COMMA,pair(base_type,cn_variable)) -> base_type LNAME TYPE
## In state 1379, spurious reduction of production loption(separated_nonempty_list(COMMA,pair(base_type,cn_variable))) -> separated_nonempty_list(COMMA,pair(base_type,cn_variable))
## In state 1380, spurious reduction of production args -> loption(separated_nonempty_list(COMMA,pair(base_type,cn_variable)))
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_toplevel: CN_LEMMA UNAME VARIABLE LPAREN RPAREN CN_REQUIRES CN_FALSE VOLATILE
##
## Ends in an error in state: 1611.
##
## cn_lemma -> CN_LEMMA enter_cn UNAME VARIABLE LPAREN args RPAREN CN_REQUIRES separated_nonempty_list(SEMICOLON,condition) . CN_ENSURES separated_nonempty_list(SEMICOLON,condition) exit_cn [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## CN_LEMMA enter_cn UNAME VARIABLE LPAREN args RPAREN CN_REQUIRES separated_nonempty_list(SEMICOLON,condition)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 966, spurious reduction of production unary_expr -> prim_expr
## In state 963, spurious reduction of production mul_expr -> unary_expr
## In state 979, spurious reduction of production add_expr -> mul_expr
## In state 1008, spurious reduction of production rel_expr -> add_expr
## In state 964, spurious reduction of production bool_bin_expr -> rel_expr
## In state 989, spurious reduction of production list_expr -> bool_bin_expr
## In state 984, spurious reduction of production expr_without_let -> list_expr
## In state 1331, spurious reduction of production assert_expr -> expr_without_let
## In state 1470, spurious reduction of production condition -> assert_expr
## In state 1467, spurious reduction of production separated_nonempty_list(SEMICOLON,condition) -> condition
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_toplevel: CN_LEMMA UNAME TYPE LPAREN CN_BOOL LNAME TYPE RBRACE
##
## Ends in an error in state: 1617.
##
## cn_lemma -> CN_LEMMA enter_cn UNAME TYPE LPAREN args . RPAREN CN_REQUIRES separated_nonempty_list(SEMICOLON,condition) CN_ENSURES separated_nonempty_list(SEMICOLON,condition) exit_cn [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## CN_LEMMA enter_cn UNAME TYPE LPAREN args
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1224, spurious reduction of production separated_nonempty_list(COMMA,pair(base_type,cn_variable)) -> base_type LNAME TYPE
## In state 1379, spurious reduction of production loption(separated_nonempty_list(COMMA,pair(base_type,cn_variable))) -> separated_nonempty_list(COMMA,pair(base_type,cn_variable))
## In state 1380, spurious reduction of production args -> loption(separated_nonempty_list(COMMA,pair(base_type,cn_variable)))
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_toplevel: CN_LEMMA UNAME TYPE LPAREN RPAREN CN_REQUIRES CN_FALSE VOLATILE
##
## Ends in an error in state: 1620.
##
## cn_lemma -> CN_LEMMA enter_cn UNAME TYPE LPAREN args RPAREN CN_REQUIRES separated_nonempty_list(SEMICOLON,condition) . CN_ENSURES separated_nonempty_list(SEMICOLON,condition) exit_cn [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## CN_LEMMA enter_cn UNAME TYPE LPAREN args RPAREN CN_REQUIRES separated_nonempty_list(SEMICOLON,condition)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 966, spurious reduction of production unary_expr -> prim_expr
## In state 963, spurious reduction of production mul_expr -> unary_expr
## In state 979, spurious reduction of production add_expr -> mul_expr
## In state 1008, spurious reduction of production rel_expr -> add_expr
## In state 964, spurious reduction of production bool_bin_expr -> rel_expr
## In state 989, spurious reduction of production list_expr -> bool_bin_expr
## In state 984, spurious reduction of production expr_without_let -> list_expr
## In state 1331, spurious reduction of production assert_expr -> expr_without_let
## In state 1470, spurious reduction of production condition -> assert_expr
## In state 1467, spurious reduction of production separated_nonempty_list(SEMICOLON,condition) -> condition
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_toplevel: CN_LEMMA LNAME WHILE
##
## Ends in an error in state: 1624.
##
## cn_lemma -> CN_LEMMA enter_cn LNAME . VARIABLE LPAREN args RPAREN CN_REQUIRES separated_nonempty_list(SEMICOLON,condition) CN_ENSURES separated_nonempty_list(SEMICOLON,condition) exit_cn [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
## cn_lemma -> CN_LEMMA enter_cn LNAME . TYPE LPAREN args RPAREN CN_REQUIRES separated_nonempty_list(SEMICOLON,condition) CN_ENSURES separated_nonempty_list(SEMICOLON,condition) exit_cn [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## CN_LEMMA enter_cn LNAME
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_toplevel: CN_LEMMA LNAME VARIABLE LPAREN CN_BOOL LNAME TYPE RBRACE
##
## Ends in an error in state: 1627.
##
## cn_lemma -> CN_LEMMA enter_cn LNAME VARIABLE LPAREN args . RPAREN CN_REQUIRES separated_nonempty_list(SEMICOLON,condition) CN_ENSURES separated_nonempty_list(SEMICOLON,condition) exit_cn [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## CN_LEMMA enter_cn LNAME VARIABLE LPAREN args
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1224, spurious reduction of production separated_nonempty_list(COMMA,pair(base_type,cn_variable)) -> base_type LNAME TYPE
## In state 1379, spurious reduction of production loption(separated_nonempty_list(COMMA,pair(base_type,cn_variable))) -> separated_nonempty_list(COMMA,pair(base_type,cn_variable))
## In state 1380, spurious reduction of production args -> loption(separated_nonempty_list(COMMA,pair(base_type,cn_variable)))
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_toplevel: CN_LEMMA LNAME VARIABLE LPAREN RPAREN CN_REQUIRES CN_FALSE VOLATILE
##
## Ends in an error in state: 1630.
##
## cn_lemma -> CN_LEMMA enter_cn LNAME VARIABLE LPAREN args RPAREN CN_REQUIRES separated_nonempty_list(SEMICOLON,condition) . CN_ENSURES separated_nonempty_list(SEMICOLON,condition) exit_cn [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## CN_LEMMA enter_cn LNAME VARIABLE LPAREN args RPAREN CN_REQUIRES separated_nonempty_list(SEMICOLON,condition)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 966, spurious reduction of production unary_expr -> prim_expr
## In state 963, spurious reduction of production mul_expr -> unary_expr
## In state 979, spurious reduction of production add_expr -> mul_expr
## In state 1008, spurious reduction of production rel_expr -> add_expr
## In state 964, spurious reduction of production bool_bin_expr -> rel_expr
## In state 989, spurious reduction of production list_expr -> bool_bin_expr
## In state 984, spurious reduction of production expr_without_let -> list_expr
## In state 1331, spurious reduction of production assert_expr -> expr_without_let
## In state 1470, spurious reduction of production condition -> assert_expr
## In state 1467, spurious reduction of production separated_nonempty_list(SEMICOLON,condition) -> condition
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_toplevel: CN_LEMMA LNAME TYPE LPAREN CN_BOOL LNAME TYPE RBRACE
##
## Ends in an error in state: 1636.
##
## cn_lemma -> CN_LEMMA enter_cn LNAME TYPE LPAREN args . RPAREN CN_REQUIRES separated_nonempty_list(SEMICOLON,condition) CN_ENSURES separated_nonempty_list(SEMICOLON,condition) exit_cn [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## CN_LEMMA enter_cn LNAME TYPE LPAREN args
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1224, spurious reduction of production separated_nonempty_list(COMMA,pair(base_type,cn_variable)) -> base_type LNAME TYPE
## In state 1379, spurious reduction of production loption(separated_nonempty_list(COMMA,pair(base_type,cn_variable))) -> separated_nonempty_list(COMMA,pair(base_type,cn_variable))
## In state 1380, spurious reduction of production args -> loption(separated_nonempty_list(COMMA,pair(base_type,cn_variable)))
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_toplevel: CN_LEMMA LNAME TYPE LPAREN RPAREN CN_REQUIRES CN_FALSE VOLATILE
##
## Ends in an error in state: 1639.
##
## cn_lemma -> CN_LEMMA enter_cn LNAME TYPE LPAREN args RPAREN CN_REQUIRES separated_nonempty_list(SEMICOLON,condition) . CN_ENSURES separated_nonempty_list(SEMICOLON,condition) exit_cn [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## CN_LEMMA enter_cn LNAME TYPE LPAREN args RPAREN CN_REQUIRES separated_nonempty_list(SEMICOLON,condition)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 966, spurious reduction of production unary_expr -> prim_expr
## In state 963, spurious reduction of production mul_expr -> unary_expr
## In state 979, spurious reduction of production add_expr -> mul_expr
## In state 1008, spurious reduction of production rel_expr -> add_expr
## In state 964, spurious reduction of production bool_bin_expr -> rel_expr
## In state 989, spurious reduction of production list_expr -> bool_bin_expr
## In state 984, spurious reduction of production expr_without_let -> list_expr
## In state 1331, spurious reduction of production assert_expr -> expr_without_let
## In state 1470, spurious reduction of production condition -> assert_expr
## In state 1467, spurious reduction of production separated_nonempty_list(SEMICOLON,condition) -> condition
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_toplevel: CN_FUNCTION WHILE
##
## Ends in an error in state: 1644.
##
## cn_function -> CN_FUNCTION enter_cn . cn_attrs LPAREN base_type RPAREN UNAME VARIABLE LPAREN args RPAREN cn_option_func_body exit_cn [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
## cn_function -> CN_FUNCTION enter_cn . cn_attrs LPAREN base_type RPAREN LNAME VARIABLE LPAREN args RPAREN cn_option_func_body exit_cn [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
## cn_function -> CN_FUNCTION enter_cn . cn_attrs LPAREN base_type RPAREN UNAME TYPE LPAREN args RPAREN cn_option_func_body exit_cn [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
## cn_function -> CN_FUNCTION enter_cn . cn_attrs LPAREN base_type RPAREN LNAME TYPE LPAREN args RPAREN cn_option_func_body exit_cn [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## CN_FUNCTION enter_cn
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_toplevel: CN_FUNCTION LBRACK RBRACK WHILE
##
## Ends in an error in state: 1645.
##
## cn_function -> CN_FUNCTION enter_cn cn_attrs . LPAREN base_type RPAREN UNAME VARIABLE LPAREN args RPAREN cn_option_func_body exit_cn [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
## cn_function -> CN_FUNCTION enter_cn cn_attrs . LPAREN base_type RPAREN LNAME VARIABLE LPAREN args RPAREN cn_option_func_body exit_cn [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
## cn_function -> CN_FUNCTION enter_cn cn_attrs . LPAREN base_type RPAREN UNAME TYPE LPAREN args RPAREN cn_option_func_body exit_cn [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
## cn_function -> CN_FUNCTION enter_cn cn_attrs . LPAREN base_type RPAREN LNAME TYPE LPAREN args RPAREN cn_option_func_body exit_cn [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## CN_FUNCTION enter_cn cn_attrs
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_toplevel: CN_FUNCTION LPAREN WHILE
##
## Ends in an error in state: 1646.
##
## cn_function -> CN_FUNCTION enter_cn cn_attrs LPAREN . base_type RPAREN UNAME VARIABLE LPAREN args RPAREN cn_option_func_body exit_cn [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
## cn_function -> CN_FUNCTION enter_cn cn_attrs LPAREN . base_type RPAREN LNAME VARIABLE LPAREN args RPAREN cn_option_func_body exit_cn [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
## cn_function -> CN_FUNCTION enter_cn cn_attrs LPAREN . base_type RPAREN UNAME TYPE LPAREN args RPAREN cn_option_func_body exit_cn [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
## cn_function -> CN_FUNCTION enter_cn cn_attrs LPAREN . base_type RPAREN LNAME TYPE LPAREN args RPAREN cn_option_func_body exit_cn [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## CN_FUNCTION enter_cn cn_attrs LPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_toplevel: CN_FUNCTION LPAREN CN_BOOL WHILE
##
## Ends in an error in state: 1647.
##
## cn_function -> CN_FUNCTION enter_cn cn_attrs LPAREN base_type . RPAREN UNAME VARIABLE LPAREN args RPAREN cn_option_func_body exit_cn [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
## cn_function -> CN_FUNCTION enter_cn cn_attrs LPAREN base_type . RPAREN LNAME VARIABLE LPAREN args RPAREN cn_option_func_body exit_cn [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
## cn_function -> CN_FUNCTION enter_cn cn_attrs LPAREN base_type . RPAREN UNAME TYPE LPAREN args RPAREN cn_option_func_body exit_cn [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
## cn_function -> CN_FUNCTION enter_cn cn_attrs LPAREN base_type . RPAREN LNAME TYPE LPAREN args RPAREN cn_option_func_body exit_cn [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## CN_FUNCTION enter_cn cn_attrs LPAREN base_type
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_toplevel: CN_FUNCTION LPAREN CN_BOOL RPAREN WHILE
##
## Ends in an error in state: 1648.
##
## cn_function -> CN_FUNCTION enter_cn cn_attrs LPAREN base_type RPAREN . UNAME VARIABLE LPAREN args RPAREN cn_option_func_body exit_cn [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
## cn_function -> CN_FUNCTION enter_cn cn_attrs LPAREN base_type RPAREN . LNAME VARIABLE LPAREN args RPAREN cn_option_func_body exit_cn [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
## cn_function -> CN_FUNCTION enter_cn cn_attrs LPAREN base_type RPAREN . UNAME TYPE LPAREN args RPAREN cn_option_func_body exit_cn [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
## cn_function -> CN_FUNCTION enter_cn cn_attrs LPAREN base_type RPAREN . LNAME TYPE LPAREN args RPAREN cn_option_func_body exit_cn [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## CN_FUNCTION enter_cn cn_attrs LPAREN base_type RPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_toplevel: CN_FUNCTION LPAREN CN_BOOL RPAREN UNAME WHILE
##
## Ends in an error in state: 1649.
##
## cn_function -> CN_FUNCTION enter_cn cn_attrs LPAREN base_type RPAREN UNAME . VARIABLE LPAREN args RPAREN cn_option_func_body exit_cn [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
## cn_function -> CN_FUNCTION enter_cn cn_attrs LPAREN base_type RPAREN UNAME . TYPE LPAREN args RPAREN cn_option_func_body exit_cn [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## CN_FUNCTION enter_cn cn_attrs LPAREN base_type RPAREN UNAME
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_toplevel: CN_FUNCTION LPAREN CN_BOOL RPAREN UNAME VARIABLE LPAREN CN_BOOL LNAME TYPE RBRACE
##
## Ends in an error in state: 1652.
##
## cn_function -> CN_FUNCTION enter_cn cn_attrs LPAREN base_type RPAREN UNAME VARIABLE LPAREN args . RPAREN cn_option_func_body exit_cn [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## CN_FUNCTION enter_cn cn_attrs LPAREN base_type RPAREN UNAME VARIABLE LPAREN args
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1224, spurious reduction of production separated_nonempty_list(COMMA,pair(base_type,cn_variable)) -> base_type LNAME TYPE
## In state 1379, spurious reduction of production loption(separated_nonempty_list(COMMA,pair(base_type,cn_variable))) -> separated_nonempty_list(COMMA,pair(base_type,cn_variable))
## In state 1380, spurious reduction of production args -> loption(separated_nonempty_list(COMMA,pair(base_type,cn_variable)))
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_toplevel: CN_FUNCTION LPAREN CN_BOOL RPAREN LNAME TYPE LPAREN RPAREN LBRACE CN_FALSE VOLATILE
##
## Ends in an error in state: 1655.
##
## cn_option_func_body -> LBRACE expr . RBRACE [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## LBRACE expr
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 966, spurious reduction of production unary_expr -> prim_expr
## In state 963, spurious reduction of production mul_expr -> unary_expr
## In state 979, spurious reduction of production add_expr -> mul_expr
## In state 1008, spurious reduction of production rel_expr -> add_expr
## In state 964, spurious reduction of production bool_bin_expr -> rel_expr
## In state 989, spurious reduction of production list_expr -> bool_bin_expr
## In state 984, spurious reduction of production expr_without_let -> list_expr
## In state 1011, spurious reduction of production expr -> expr_without_let
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_toplevel: CN_FUNCTION LPAREN CN_BOOL RPAREN UNAME TYPE LPAREN CN_BOOL LNAME TYPE RBRACE
##
## Ends in an error in state: 1661.
##
## cn_function -> CN_FUNCTION enter_cn cn_attrs LPAREN base_type RPAREN UNAME TYPE LPAREN args . RPAREN cn_option_func_body exit_cn [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## CN_FUNCTION enter_cn cn_attrs LPAREN base_type RPAREN UNAME TYPE LPAREN args
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1224, spurious reduction of production separated_nonempty_list(COMMA,pair(base_type,cn_variable)) -> base_type LNAME TYPE
## In state 1379, spurious reduction of production loption(separated_nonempty_list(COMMA,pair(base_type,cn_variable))) -> separated_nonempty_list(COMMA,pair(base_type,cn_variable))
## In state 1380, spurious reduction of production args -> loption(separated_nonempty_list(COMMA,pair(base_type,cn_variable)))
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_toplevel: CN_FUNCTION LPAREN CN_BOOL RPAREN LNAME WHILE
##
## Ends in an error in state: 1665.
##
## cn_function -> CN_FUNCTION enter_cn cn_attrs LPAREN base_type RPAREN LNAME . VARIABLE LPAREN args RPAREN cn_option_func_body exit_cn [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
## cn_function -> CN_FUNCTION enter_cn cn_attrs LPAREN base_type RPAREN LNAME . TYPE LPAREN args RPAREN cn_option_func_body exit_cn [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## CN_FUNCTION enter_cn cn_attrs LPAREN base_type RPAREN LNAME
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_toplevel: CN_FUNCTION LPAREN CN_BOOL RPAREN LNAME VARIABLE LPAREN CN_BOOL LNAME TYPE RBRACE
##
## Ends in an error in state: 1668.
##
## cn_function -> CN_FUNCTION enter_cn cn_attrs LPAREN base_type RPAREN LNAME VARIABLE LPAREN args . RPAREN cn_option_func_body exit_cn [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## CN_FUNCTION enter_cn cn_attrs LPAREN base_type RPAREN LNAME VARIABLE LPAREN args
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1224, spurious reduction of production separated_nonempty_list(COMMA,pair(base_type,cn_variable)) -> base_type LNAME TYPE
## In state 1379, spurious reduction of production loption(separated_nonempty_list(COMMA,pair(base_type,cn_variable))) -> separated_nonempty_list(COMMA,pair(base_type,cn_variable))
## In state 1380, spurious reduction of production args -> loption(separated_nonempty_list(COMMA,pair(base_type,cn_variable)))
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_toplevel: CN_FUNCTION LPAREN CN_BOOL RPAREN LNAME TYPE LPAREN CN_BOOL LNAME TYPE RBRACE
##
## Ends in an error in state: 1674.
##
## cn_function -> CN_FUNCTION enter_cn cn_attrs LPAREN base_type RPAREN LNAME TYPE LPAREN args . RPAREN cn_option_func_body exit_cn [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## CN_FUNCTION enter_cn cn_attrs LPAREN base_type RPAREN LNAME TYPE LPAREN args
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1224, spurious reduction of production separated_nonempty_list(COMMA,pair(base_type,cn_variable)) -> base_type LNAME TYPE
## In state 1379, spurious reduction of production loption(separated_nonempty_list(COMMA,pair(base_type,cn_variable))) -> separated_nonempty_list(COMMA,pair(base_type,cn_variable))
## In state 1380, spurious reduction of production args -> loption(separated_nonempty_list(COMMA,pair(base_type,cn_variable)))
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_toplevel: CN_DATATYPE WHILE
##
## Ends in an error in state: 1679.
##
## cn_datatype -> CN_DATATYPE enter_cn . UNAME VARIABLE LBRACE cn_cons_cases RBRACE exit_cn [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
## cn_datatype -> CN_DATATYPE enter_cn . LNAME VARIABLE LBRACE cn_cons_cases RBRACE exit_cn [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
## cn_datatype -> CN_DATATYPE enter_cn . UNAME TYPE LBRACE cn_cons_cases RBRACE exit_cn [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
## cn_datatype -> CN_DATATYPE enter_cn . LNAME TYPE LBRACE cn_cons_cases RBRACE exit_cn [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## CN_DATATYPE enter_cn
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_toplevel: CN_DATATYPE UNAME WHILE
##
## Ends in an error in state: 1680.
##
## cn_datatype -> CN_DATATYPE enter_cn UNAME . VARIABLE LBRACE cn_cons_cases RBRACE exit_cn [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
## cn_datatype -> CN_DATATYPE enter_cn UNAME . TYPE LBRACE cn_cons_cases RBRACE exit_cn [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## CN_DATATYPE enter_cn UNAME
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_toplevel: CN_DATATYPE LNAME TYPE LBRACE UNAME WHILE
##
## Ends in an error in state: 1683.
##
## cn_cons_case -> UNAME . VARIABLE LBRACE args RBRACE [ RBRACE COMMA ]
## cn_cons_case -> UNAME . TYPE LBRACE args RBRACE [ RBRACE COMMA ]
##
## The known suffix of the stack is as follows:
## UNAME
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_toplevel: CN_DATATYPE LNAME TYPE LBRACE UNAME VARIABLE LBRACE CN_BOOL LNAME TYPE RPAREN
##
## Ends in an error in state: 1686.
##
## cn_cons_case -> UNAME VARIABLE LBRACE args . RBRACE [ RBRACE COMMA ]
##
## The known suffix of the stack is as follows:
## UNAME VARIABLE LBRACE args
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1224, spurious reduction of production separated_nonempty_list(COMMA,pair(base_type,cn_variable)) -> base_type LNAME TYPE
## In state 1379, spurious reduction of production loption(separated_nonempty_list(COMMA,pair(base_type,cn_variable))) -> separated_nonempty_list(COMMA,pair(base_type,cn_variable))
## In state 1380, spurious reduction of production args -> loption(separated_nonempty_list(COMMA,pair(base_type,cn_variable)))
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_toplevel: CN_DATATYPE LNAME TYPE LBRACE UNAME TYPE LBRACE CN_BOOL LNAME TYPE RPAREN
##
## Ends in an error in state: 1690.
##
## cn_cons_case -> UNAME TYPE LBRACE args . RBRACE [ RBRACE COMMA ]
##
## The known suffix of the stack is as follows:
## UNAME TYPE LBRACE args
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1224, spurious reduction of production separated_nonempty_list(COMMA,pair(base_type,cn_variable)) -> base_type LNAME TYPE
## In state 1379, spurious reduction of production loption(separated_nonempty_list(COMMA,pair(base_type,cn_variable))) -> separated_nonempty_list(COMMA,pair(base_type,cn_variable))
## In state 1380, spurious reduction of production args -> loption(separated_nonempty_list(COMMA,pair(base_type,cn_variable)))
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_toplevel: CN_DATATYPE LNAME TYPE LBRACE LNAME WHILE
##
## Ends in an error in state: 1692.
##
## cn_cons_case -> LNAME . VARIABLE LBRACE args RBRACE [ RBRACE COMMA ]
## cn_cons_case -> LNAME . TYPE LBRACE args RBRACE [ RBRACE COMMA ]
##
## The known suffix of the stack is as follows:
## LNAME
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_toplevel: CN_DATATYPE LNAME TYPE LBRACE LNAME VARIABLE LBRACE CN_BOOL LNAME TYPE RPAREN
##
## Ends in an error in state: 1695.
##
## cn_cons_case -> LNAME VARIABLE LBRACE args . RBRACE [ RBRACE COMMA ]
##
## The known suffix of the stack is as follows:
## LNAME VARIABLE LBRACE args
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1224, spurious reduction of production separated_nonempty_list(COMMA,pair(base_type,cn_variable)) -> base_type LNAME TYPE
## In state 1379, spurious reduction of production loption(separated_nonempty_list(COMMA,pair(base_type,cn_variable))) -> separated_nonempty_list(COMMA,pair(base_type,cn_variable))
## In state 1380, spurious reduction of production args -> loption(separated_nonempty_list(COMMA,pair(base_type,cn_variable)))
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_toplevel: CN_DATATYPE LNAME TYPE LBRACE LNAME TYPE LBRACE CN_BOOL LNAME TYPE RPAREN
##
## Ends in an error in state: 1699.
##
## cn_cons_case -> LNAME TYPE LBRACE args . RBRACE [ RBRACE COMMA ]
##
## The known suffix of the stack is as follows:
## LNAME TYPE LBRACE args
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1224, spurious reduction of production separated_nonempty_list(COMMA,pair(base_type,cn_variable)) -> base_type LNAME TYPE
## In state 1379, spurious reduction of production loption(separated_nonempty_list(COMMA,pair(base_type,cn_variable))) -> separated_nonempty_list(COMMA,pair(base_type,cn_variable))
## In state 1380, spurious reduction of production args -> loption(separated_nonempty_list(COMMA,pair(base_type,cn_variable)))
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_toplevel: CN_DATATYPE LNAME TYPE LBRACE LNAME TYPE LBRACE RBRACE WHILE
##
## Ends in an error in state: 1706.
##
## separated_nonempty_list(COMMA,cn_cons_case) -> cn_cons_case . [ RBRACE ]
## separated_nonempty_list(COMMA,cn_cons_case) -> cn_cons_case . COMMA separated_nonempty_list(COMMA,cn_cons_case) [ RBRACE ]
##
## The known suffix of the stack is as follows:
## cn_cons_case
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_toplevel: CN_DATATYPE LNAME WHILE
##
## Ends in an error in state: 1714.
##
## cn_datatype -> CN_DATATYPE enter_cn LNAME . VARIABLE LBRACE cn_cons_cases RBRACE exit_cn [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
## cn_datatype -> CN_DATATYPE enter_cn LNAME . TYPE LBRACE cn_cons_cases RBRACE exit_cn [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## CN_DATATYPE enter_cn LNAME
##

<YOUR SYNTAX ERROR MESSAGE HERE>

function_spec: CN_REQUIRES CN_FALSE VOLATILE
##
## Ends in an error in state: 1738.
##
## function_spec -> CN_REQUIRES loption(separated_nonempty_list(SEMICOLON,condition)) . EOF [ # ]
##
## The known suffix of the stack is as follows:
## CN_REQUIRES loption(separated_nonempty_list(SEMICOLON,condition))
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 966, spurious reduction of production unary_expr -> prim_expr
## In state 963, spurious reduction of production mul_expr -> unary_expr
## In state 979, spurious reduction of production add_expr -> mul_expr
## In state 1008, spurious reduction of production rel_expr -> add_expr
## In state 964, spurious reduction of production bool_bin_expr -> rel_expr
## In state 989, spurious reduction of production list_expr -> bool_bin_expr
## In state 984, spurious reduction of production expr_without_let -> list_expr
## In state 1331, spurious reduction of production assert_expr -> expr_without_let
## In state 1470, spurious reduction of production condition -> assert_expr
## In state 1467, spurious reduction of production separated_nonempty_list(SEMICOLON,condition) -> condition
## In state 1737, spurious reduction of production loption(separated_nonempty_list(SEMICOLON,condition)) -> separated_nonempty_list(SEMICOLON,condition)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

function_spec: CN_FUNCTION WHILE
##
## Ends in an error in state: 1740.
##
## function_spec -> CN_FUNCTION . UNAME VARIABLE EOF [ # ]
## function_spec -> CN_FUNCTION . LNAME VARIABLE EOF [ # ]
## function_spec -> CN_FUNCTION . UNAME TYPE EOF [ # ]
## function_spec -> CN_FUNCTION . LNAME TYPE EOF [ # ]
##
## The known suffix of the stack is as follows:
## CN_FUNCTION
##

<YOUR SYNTAX ERROR MESSAGE HERE>

function_spec: CN_FUNCTION UNAME WHILE
##
## Ends in an error in state: 1741.
##
## function_spec -> CN_FUNCTION UNAME . VARIABLE EOF [ # ]
## function_spec -> CN_FUNCTION UNAME . TYPE EOF [ # ]
##
## The known suffix of the stack is as follows:
## CN_FUNCTION UNAME
##

<YOUR SYNTAX ERROR MESSAGE HERE>

function_spec: CN_FUNCTION LNAME WHILE
##
## Ends in an error in state: 1746.
##
## function_spec -> CN_FUNCTION LNAME . VARIABLE EOF [ # ]
## function_spec -> CN_FUNCTION LNAME . TYPE EOF [ # ]
##
## The known suffix of the stack is as follows:
## CN_FUNCTION LNAME
##

<YOUR SYNTAX ERROR MESSAGE HERE>

function_spec: CN_ENSURES CN_FALSE VOLATILE
##
## Ends in an error in state: 1752.
##
## function_spec -> CN_ENSURES loption(separated_nonempty_list(SEMICOLON,condition)) . EOF [ # ]
##
## The known suffix of the stack is as follows:
## CN_ENSURES loption(separated_nonempty_list(SEMICOLON,condition))
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 966, spurious reduction of production unary_expr -> prim_expr
## In state 963, spurious reduction of production mul_expr -> unary_expr
## In state 979, spurious reduction of production add_expr -> mul_expr
## In state 1008, spurious reduction of production rel_expr -> add_expr
## In state 964, spurious reduction of production bool_bin_expr -> rel_expr
## In state 989, spurious reduction of production list_expr -> bool_bin_expr
## In state 984, spurious reduction of production expr_without_let -> list_expr
## In state 1331, spurious reduction of production assert_expr -> expr_without_let
## In state 1470, spurious reduction of production condition -> assert_expr
## In state 1467, spurious reduction of production separated_nonempty_list(SEMICOLON,condition) -> condition
## In state 1737, spurious reduction of production loption(separated_nonempty_list(SEMICOLON,condition)) -> separated_nonempty_list(SEMICOLON,condition)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

function_spec: CN_ACCESSES UNAME WHILE
##
## Ends in an error in state: 1755.
##
## separated_nonempty_list(SEMICOLON,cn_variable) -> UNAME . VARIABLE [ EOF ]
## separated_nonempty_list(SEMICOLON,cn_variable) -> UNAME . TYPE [ EOF ]
## separated_nonempty_list(SEMICOLON,cn_variable) -> UNAME . VARIABLE SEMICOLON separated_nonempty_list(SEMICOLON,cn_variable) [ EOF ]
## separated_nonempty_list(SEMICOLON,cn_variable) -> UNAME . TYPE SEMICOLON separated_nonempty_list(SEMICOLON,cn_variable) [ EOF ]
##
## The known suffix of the stack is as follows:
## UNAME
##

<YOUR SYNTAX ERROR MESSAGE HERE>

function_spec: CN_ACCESSES UNAME VARIABLE WHILE
##
## Ends in an error in state: 1756.
##
## separated_nonempty_list(SEMICOLON,cn_variable) -> UNAME VARIABLE . [ EOF ]
## separated_nonempty_list(SEMICOLON,cn_variable) -> UNAME VARIABLE . SEMICOLON separated_nonempty_list(SEMICOLON,cn_variable) [ EOF ]
##
## The known suffix of the stack is as follows:
## UNAME VARIABLE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

function_spec: CN_ACCESSES LNAME WHILE
##
## Ends in an error in state: 1758.
##
## separated_nonempty_list(SEMICOLON,cn_variable) -> LNAME . VARIABLE [ EOF ]
## separated_nonempty_list(SEMICOLON,cn_variable) -> LNAME . TYPE [ EOF ]
## separated_nonempty_list(SEMICOLON,cn_variable) -> LNAME . VARIABLE SEMICOLON separated_nonempty_list(SEMICOLON,cn_variable) [ EOF ]
## separated_nonempty_list(SEMICOLON,cn_variable) -> LNAME . TYPE SEMICOLON separated_nonempty_list(SEMICOLON,cn_variable) [ EOF ]
##
## The known suffix of the stack is as follows:
## LNAME
##

<YOUR SYNTAX ERROR MESSAGE HERE>

function_spec: CN_ACCESSES LNAME VARIABLE WHILE
##
## Ends in an error in state: 1759.
##
## separated_nonempty_list(SEMICOLON,cn_variable) -> LNAME VARIABLE . [ EOF ]
## separated_nonempty_list(SEMICOLON,cn_variable) -> LNAME VARIABLE . SEMICOLON separated_nonempty_list(SEMICOLON,cn_variable) [ EOF ]
##
## The known suffix of the stack is as follows:
## LNAME VARIABLE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

function_spec: CN_ACCESSES LNAME TYPE WHILE
##
## Ends in an error in state: 1762.
##
## separated_nonempty_list(SEMICOLON,cn_variable) -> LNAME TYPE . [ EOF ]
## separated_nonempty_list(SEMICOLON,cn_variable) -> LNAME TYPE . SEMICOLON separated_nonempty_list(SEMICOLON,cn_variable) [ EOF ]
##
## The known suffix of the stack is as follows:
## LNAME TYPE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

function_spec: CN_ACCESSES UNAME TYPE WHILE
##
## Ends in an error in state: 1766.
##
## separated_nonempty_list(SEMICOLON,cn_variable) -> UNAME TYPE . [ EOF ]
## separated_nonempty_list(SEMICOLON,cn_variable) -> UNAME TYPE . SEMICOLON separated_nonempty_list(SEMICOLON,cn_variable) [ EOF ]
##
## The known suffix of the stack is as follows:
## UNAME TYPE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

loop_spec: CN_INV CN_FALSE VOLATILE
##
## Ends in an error in state: 1775.
##
## loop_spec -> CN_INV loption(separated_nonempty_list(SEMICOLON,condition)) . EOF [ # ]
##
## The known suffix of the stack is as follows:
## CN_INV loption(separated_nonempty_list(SEMICOLON,condition))
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 966, spurious reduction of production unary_expr -> prim_expr
## In state 963, spurious reduction of production mul_expr -> unary_expr
## In state 979, spurious reduction of production add_expr -> mul_expr
## In state 1008, spurious reduction of production rel_expr -> add_expr
## In state 964, spurious reduction of production bool_bin_expr -> rel_expr
## In state 989, spurious reduction of production list_expr -> bool_bin_expr
## In state 984, spurious reduction of production expr_without_let -> list_expr
## In state 1331, spurious reduction of production assert_expr -> expr_without_let
## In state 1470, spurious reduction of production condition -> assert_expr
## In state 1467, spurious reduction of production separated_nonempty_list(SEMICOLON,condition) -> condition
## In state 1737, spurious reduction of production loption(separated_nonempty_list(SEMICOLON,condition)) -> separated_nonempty_list(SEMICOLON,condition)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: BOOL LNAME TYPE CERB_MAGIC WHILE
##
## Ends in an error in state: 1784.
##
## function_definition -> function_definition1 option(declaration_list) magic_comment_list . compound_statement boption(SEMICOLON) [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
## magic_comment_list -> magic_comment_list . CERB_MAGIC [ LBRACES LBRACE CERB_MAGIC ]
##
## The known suffix of the stack is as follows:
## function_definition1 option(declaration_list) magic_comment_list
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: BOOL LNAME TYPE BOOL SEMICOLON WHILE
##
## Ends in an error in state: 1789.
##
## declaration_list -> declaration_list . no_leading_attribute_declaration [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT RESTRICT REGISTER NORETURN LONG LNAME LBRACES LBRACE INT INLINE FLOAT EXTERN ENUM DOUBLE CONST COMPLEX CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
## option(declaration_list) -> declaration_list . [ LBRACES LBRACE CERB_MAGIC ]
##
## The known suffix of the stack is as follows:
## declaration_list
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: CERB_MAGIC WHILE
##
## Ends in an error in state: 1792.
##
## external_declaration_list -> external_declaration_list . external_declaration [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
## translation_unit -> external_declaration_list . EOF [ # ]
##
## The known suffix of the stack is as follows:
## external_declaration_list
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: BOOL LNAME TYPE RPAREN
##
## Ends in an error in state: 1796.
##
## function_definition1 -> declaration_specifiers declarator_varname . [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT RESTRICT REGISTER NORETURN LONG LNAME LBRACES LBRACE INT INLINE FLOAT EXTERN ENUM DOUBLE CONST COMPLEX CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
## init_declarator(declarator_varname) -> declarator_varname . [ SEMICOLON COMMA ]
## init_declarator(declarator_varname) -> declarator_varname . asm_register [ SEMICOLON COMMA ]
## init_declarator(declarator_varname) -> declarator_varname . EQ initializer_ [ SEMICOLON COMMA ]
## init_declarator(declarator_varname) -> declarator_varname . asm_register EQ initializer_ [ SEMICOLON COMMA ]
##
## The known suffix of the stack is as follows:
## declaration_specifiers declarator_varname
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 314, spurious reduction of production direct_declarator -> general_identifier
## In state 391, spurious reduction of production declarator -> direct_declarator
## In state 423, spurious reduction of production declarator_varname -> declarator
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: LBRACK_LBRACK ALIGNAS RBRACK RBRACK WHILE
##
## Ends in an error in state: 1802.
##
## attribute_declaration -> attribute_specifier_sequence . SEMICOLON [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
## attribute_specifier_sequence -> attribute_specifier_sequence . attribute_specifier [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC SIGNED SHORT SEMICOLON RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN ENUM DOUBLE CONST COMPLEX CHAR BOOL AUTO ATOMIC ALIGNAS ]
## declaration -> attribute_specifier_sequence . declaration_specifiers option(init_declarator_list(declarator_varname)) SEMICOLON [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
## declaration -> attribute_specifier_sequence . declaration_specifiers_typedef option(init_declarator_list(declarator_typedefname)) SEMICOLON [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
## function_definition1 -> attribute_specifier_sequence . declaration_specifiers declarator_varname [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT RESTRICT REGISTER NORETURN LONG LNAME LBRACES LBRACE INT INLINE FLOAT EXTERN ENUM DOUBLE CONST COMPLEX CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## attribute_specifier_sequence
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: LBRACK_LBRACK ALIGNAS RBRACK RBRACK BOOL LNAME TYPE RPAREN
##
## Ends in an error in state: 1804.
##
## function_definition1 -> attribute_specifier_sequence declaration_specifiers declarator_varname . [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT RESTRICT REGISTER NORETURN LONG LNAME LBRACES LBRACE INT INLINE FLOAT EXTERN ENUM DOUBLE CONST COMPLEX CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
## init_declarator(declarator_varname) -> declarator_varname . [ SEMICOLON COMMA ]
## init_declarator(declarator_varname) -> declarator_varname . asm_register [ SEMICOLON COMMA ]
## init_declarator(declarator_varname) -> declarator_varname . EQ initializer_ [ SEMICOLON COMMA ]
## init_declarator(declarator_varname) -> declarator_varname . asm_register EQ initializer_ [ SEMICOLON COMMA ]
##
## The known suffix of the stack is as follows:
## attribute_specifier_sequence declaration_specifiers declarator_varname
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 314, spurious reduction of production direct_declarator -> general_identifier
## In state 391, spurious reduction of production declarator -> direct_declarator
## In state 423, spurious reduction of production declarator_varname -> declarator
##

<YOUR SYNTAX ERROR MESSAGE HERE>
