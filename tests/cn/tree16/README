These examples are related to the synthetic problem of working
with a C tree whose type is given as:

typedef struct node * tree;

struct node {
  int v;
  tree nodes[16];
};

That is, each node contains an array of (possibly NULL) pointers
to additional nodes.

This is tricky for CN because the natural functional representation
of this tree requires a constructor
  Node : integer -> Tree[16] -> Tree
that is, it requires recursion in the Tree datatype via an array or
list type constructor, which is a complex form of inductive datatype
that is not uniformly supported by our tools.

These examples explore the use of other types as in-betweens.



